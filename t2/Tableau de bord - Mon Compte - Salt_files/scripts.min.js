/*! jQuery v3.7.1 | (c) OpenJS Foundation and other contributors | jquery.org/license */
!(function (e, t) {
    "use strict";
    "object" == typeof module && "object" == typeof module.exports
        ? (module.exports = e.document
            ? t(e, !0)
            : function (e) {
                if (!e.document) throw new Error("jQuery requires a window with a document");
                return t(e);
            })
        : t(e);
})("undefined" != typeof window ? window : this, function (ie, e) {
    "use strict";
    var oe = [],
        r = Object.getPrototypeOf,
        ae = oe.slice,
        g = oe.flat
            ? function (e) {
                return oe.flat.call(e);
            }
            : function (e) {
                return oe.concat.apply([], e);
            },
        s = oe.push,
        se = oe.indexOf,
        n = {},
        i = n.toString,
        ue = n.hasOwnProperty,
        o = ue.toString,
        a = o.call(Object),
        le = {},
        v = function (e) {
            return "function" == typeof e && "number" != typeof e.nodeType && "function" != typeof e.item;
        },
        y = function (e) {
            return null != e && e === e.window;
        },
        C = ie.document,
        u = { type: !0, src: !0, nonce: !0, noModule: !0 };
    function m(e, t, n) {
        var r,
            i,
            o = (n = n || C).createElement("script");
        if (((o.text = e), t)) for (r in u) (i = t[r] || (t.getAttribute && t.getAttribute(r))) && o.setAttribute(r, i);
        n.head.appendChild(o).parentNode.removeChild(o);
    }
    function x(e) {
        return null == e ? e + "" : "object" == typeof e || "function" == typeof e ? n[i.call(e)] || "object" : typeof e;
    }
    var t = "3.7.1",
        l = /HTML$/i,
        ce = function (e, t) {
            return new ce.fn.init(e, t);
        };
    function c(e) {
        var t = !!e && "length" in e && e.length,
            n = x(e);
        return !v(e) && !y(e) && ("array" === n || 0 === t || ("number" == typeof t && 0 < t && t - 1 in e));
    }
    function fe(e, t) {
        return e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase();
    }
    (ce.fn = ce.prototype = {
        jquery: t,
        constructor: ce,
        length: 0,
        toArray: function () {
            return ae.call(this);
        },
        get: function (e) {
            return null == e ? ae.call(this) : e < 0 ? this[e + this.length] : this[e];
        },
        pushStack: function (e) {
            var t = ce.merge(this.constructor(), e);
            return (t.prevObject = this), t;
        },
        each: function (e) {
            return ce.each(this, e);
        },
        map: function (n) {
            return this.pushStack(
                ce.map(this, function (e, t) {
                    return n.call(e, t, e);
                })
            );
        },
        slice: function () {
            return this.pushStack(ae.apply(this, arguments));
        },
        first: function () {
            return this.eq(0);
        },
        last: function () {
            return this.eq(-1);
        },
        even: function () {
            return this.pushStack(
                ce.grep(this, function (e, t) {
                    return (t + 1) % 2;
                })
            );
        },
        odd: function () {
            return this.pushStack(
                ce.grep(this, function (e, t) {
                    return t % 2;
                })
            );
        },
        eq: function (e) {
            var t = this.length,
                n = +e + (e < 0 ? t : 0);
            return this.pushStack(0 <= n && n < t ? [this[n]] : []);
        },
        end: function () {
            return this.prevObject || this.constructor();
        },
        push: s,
        sort: oe.sort,
        splice: oe.splice,
    }),
        (ce.extend = ce.fn.extend = function () {
            var e,
                t,
                n,
                r,
                i,
                o,
                a = arguments[0] || {},
                s = 1,
                u = arguments.length,
                l = !1;
            for ("boolean" == typeof a && ((l = a), (a = arguments[s] || {}), s++), "object" == typeof a || v(a) || (a = {}), s === u && ((a = this), s--); s < u; s++)
                if (null != (e = arguments[s]))
                    for (t in e)
                        (r = e[t]),
                        "__proto__" !== t &&
                        a !== r &&
                        (l && r && (ce.isPlainObject(r) || (i = Array.isArray(r)))
                            ? ((n = a[t]), (o = i && !Array.isArray(n) ? [] : i || ce.isPlainObject(n) ? n : {}), (i = !1), (a[t] = ce.extend(l, o, r)))
                            : void 0 !== r && (a[t] = r));
            return a;
        }),
        ce.extend({
            expando: "jQuery" + (t + Math.random()).replace(/\D/g, ""),
            isReady: !0,
            error: function (e) {
                throw new Error(e);
            },
            noop: function () {},
            isPlainObject: function (e) {
                var t, n;
                return !(!e || "[object Object]" !== i.call(e)) && (!(t = r(e)) || ("function" == typeof (n = ue.call(t, "constructor") && t.constructor) && o.call(n) === a));
            },
            isEmptyObject: function (e) {
                var t;
                for (t in e) return !1;
                return !0;
            },
            globalEval: function (e, t, n) {
                m(e, { nonce: t && t.nonce }, n);
            },
            each: function (e, t) {
                var n,
                    r = 0;
                if (c(e)) {
                    for (n = e.length; r < n; r++) if (!1 === t.call(e[r], r, e[r])) break;
                } else for (r in e) if (!1 === t.call(e[r], r, e[r])) break;
                return e;
            },
            text: function (e) {
                var t,
                    n = "",
                    r = 0,
                    i = e.nodeType;
                if (!i) while ((t = e[r++])) n += ce.text(t);
                return 1 === i || 11 === i ? e.textContent : 9 === i ? e.documentElement.textContent : 3 === i || 4 === i ? e.nodeValue : n;
            },
            makeArray: function (e, t) {
                var n = t || [];
                return null != e && (c(Object(e)) ? ce.merge(n, "string" == typeof e ? [e] : e) : s.call(n, e)), n;
            },
            inArray: function (e, t, n) {
                return null == t ? -1 : se.call(t, e, n);
            },
            isXMLDoc: function (e) {
                var t = e && e.namespaceURI,
                    n = e && (e.ownerDocument || e).documentElement;
                return !l.test(t || (n && n.nodeName) || "HTML");
            },
            merge: function (e, t) {
                for (var n = +t.length, r = 0, i = e.length; r < n; r++) e[i++] = t[r];
                return (e.length = i), e;
            },
            grep: function (e, t, n) {
                for (var r = [], i = 0, o = e.length, a = !n; i < o; i++) !t(e[i], i) !== a && r.push(e[i]);
                return r;
            },
            map: function (e, t, n) {
                var r,
                    i,
                    o = 0,
                    a = [];
                if (c(e)) for (r = e.length; o < r; o++) null != (i = t(e[o], o, n)) && a.push(i);
                else for (o in e) null != (i = t(e[o], o, n)) && a.push(i);
                return g(a);
            },
            guid: 1,
            support: le,
        }),
    "function" == typeof Symbol && (ce.fn[Symbol.iterator] = oe[Symbol.iterator]),
        ce.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function (e, t) {
            n["[object " + t + "]"] = t.toLowerCase();
        });
    var pe = oe.pop,
        de = oe.sort,
        he = oe.splice,
        ge = "[\\x20\\t\\r\\n\\f]",
        ve = new RegExp("^" + ge + "+|((?:^|[^\\\\])(?:\\\\.)*)" + ge + "+$", "g");
    ce.contains = function (e, t) {
        var n = t && t.parentNode;
        return e === n || !(!n || 1 !== n.nodeType || !(e.contains ? e.contains(n) : e.compareDocumentPosition && 16 & e.compareDocumentPosition(n)));
    };
    var f = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g;
    function p(e, t) {
        return t ? ("\0" === e ? "ï¿½" : e.slice(0, -1) + "\\" + e.charCodeAt(e.length - 1).toString(16) + " ") : "\\" + e;
    }
    ce.escapeSelector = function (e) {
        return (e + "").replace(f, p);
    };
    var ye = C,
        me = s;
    !(function () {
        var e,
            b,
            w,
            o,
            a,
            T,
            r,
            C,
            d,
            i,
            k = me,
            S = ce.expando,
            E = 0,
            n = 0,
            s = W(),
            c = W(),
            u = W(),
            h = W(),
            l = function (e, t) {
                return e === t && (a = !0), 0;
            },
            f = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
            t = "(?:\\\\[\\da-fA-F]{1,6}" + ge + "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",
            p = "\\[" + ge + "*(" + t + ")(?:" + ge + "*([*^$|!~]?=)" + ge + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + t + "))|)" + ge + "*\\]",
            g = ":(" + t + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + p + ")*)|.*)\\)|)",
            v = new RegExp(ge + "+", "g"),
            y = new RegExp("^" + ge + "*," + ge + "*"),
            m = new RegExp("^" + ge + "*([>+~]|" + ge + ")" + ge + "*"),
            x = new RegExp(ge + "|>"),
            j = new RegExp(g),
            A = new RegExp("^" + t + "$"),
            D = {
                ID: new RegExp("^#(" + t + ")"),
                CLASS: new RegExp("^\\.(" + t + ")"),
                TAG: new RegExp("^(" + t + "|[*])"),
                ATTR: new RegExp("^" + p),
                PSEUDO: new RegExp("^" + g),
                CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + ge + "*(even|odd|(([+-]|)(\\d*)n|)" + ge + "*(?:([+-]|)" + ge + "*(\\d+)|))" + ge + "*\\)|)", "i"),
                bool: new RegExp("^(?:" + f + ")$", "i"),
                needsContext: new RegExp("^" + ge + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + ge + "*((?:-\\d)?\\d*)" + ge + "*\\)|)(?=[^-]|$)", "i"),
            },
            N = /^(?:input|select|textarea|button)$/i,
            q = /^h\d$/i,
            L = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
            H = /[+~]/,
            O = new RegExp("\\\\[\\da-fA-F]{1,6}" + ge + "?|\\\\([^\\r\\n\\f])", "g"),
            P = function (e, t) {
                var n = "0x" + e.slice(1) - 65536;
                return t || (n < 0 ? String.fromCharCode(n + 65536) : String.fromCharCode((n >> 10) | 55296, (1023 & n) | 56320));
            },
            M = function () {
                V();
            },
            R = J(
                function (e) {
                    return !0 === e.disabled && fe(e, "fieldset");
                },
                { dir: "parentNode", next: "legend" }
            );
        try {
            k.apply((oe = ae.call(ye.childNodes)), ye.childNodes), oe[ye.childNodes.length].nodeType;
        } catch (e) {
            k = {
                apply: function (e, t) {
                    me.apply(e, ae.call(t));
                },
                call: function (e) {
                    me.apply(e, ae.call(arguments, 1));
                },
            };
        }
        function I(t, e, n, r) {
            var i,
                o,
                a,
                s,
                u,
                l,
                c,
                f = e && e.ownerDocument,
                p = e ? e.nodeType : 9;
            if (((n = n || []), "string" != typeof t || !t || (1 !== p && 9 !== p && 11 !== p))) return n;
            if (!r && (V(e), (e = e || T), C)) {
                if (11 !== p && (u = L.exec(t)))
                    if ((i = u[1])) {
                        if (9 === p) {
                            if (!(a = e.getElementById(i))) return n;
                            if (a.id === i) return k.call(n, a), n;
                        } else if (f && (a = f.getElementById(i)) && I.contains(e, a) && a.id === i) return k.call(n, a), n;
                    } else {
                        if (u[2]) return k.apply(n, e.getElementsByTagName(t)), n;
                        if ((i = u[3]) && e.getElementsByClassName) return k.apply(n, e.getElementsByClassName(i)), n;
                    }
                if (!(h[t + " "] || (d && d.test(t)))) {
                    if (((c = t), (f = e), 1 === p && (x.test(t) || m.test(t)))) {
                        ((f = (H.test(t) && U(e.parentNode)) || e) == e && le.scope) || ((s = e.getAttribute("id")) ? (s = ce.escapeSelector(s)) : e.setAttribute("id", (s = S))), (o = (l = Y(t)).length);
                        while (o--) l[o] = (s ? "#" + s : ":scope") + " " + Q(l[o]);
                        c = l.join(",");
                    }
                    try {
                        return k.apply(n, f.querySelectorAll(c)), n;
                    } catch (e) {
                        h(t, !0);
                    } finally {
                        s === S && e.removeAttribute("id");
                    }
                }
            }
            return re(t.replace(ve, "$1"), e, n, r);
        }
        function W() {
            var r = [];
            return function e(t, n) {
                return r.push(t + " ") > b.cacheLength && delete e[r.shift()], (e[t + " "] = n);
            };
        }
        function F(e) {
            return (e[S] = !0), e;
        }
        function $(e) {
            var t = T.createElement("fieldset");
            try {
                return !!e(t);
            } catch (e) {
                return !1;
            } finally {
                t.parentNode && t.parentNode.removeChild(t), (t = null);
            }
        }
        function B(t) {
            return function (e) {
                return fe(e, "input") && e.type === t;
            };
        }
        function _(t) {
            return function (e) {
                return (fe(e, "input") || fe(e, "button")) && e.type === t;
            };
        }
        function z(t) {
            return function (e) {
                return "form" in e
                    ? e.parentNode && !1 === e.disabled
                        ? "label" in e
                            ? "label" in e.parentNode
                                ? e.parentNode.disabled === t
                                : e.disabled === t
                            : e.isDisabled === t || (e.isDisabled !== !t && R(e) === t)
                        : e.disabled === t
                    : "label" in e && e.disabled === t;
            };
        }
        function X(a) {
            return F(function (o) {
                return (
                    (o = +o),
                        F(function (e, t) {
                            var n,
                                r = a([], e.length, o),
                                i = r.length;
                            while (i--) e[(n = r[i])] && (e[n] = !(t[n] = e[n]));
                        })
                );
            });
        }
        function U(e) {
            return e && "undefined" != typeof e.getElementsByTagName && e;
        }
        function V(e) {
            var t,
                n = e ? e.ownerDocument || e : ye;
            return (
                n != T &&
                9 === n.nodeType &&
                n.documentElement &&
                ((r = (T = n).documentElement),
                    (C = !ce.isXMLDoc(T)),
                    (i = r.matches || r.webkitMatchesSelector || r.msMatchesSelector),
                r.msMatchesSelector && ye != T && (t = T.defaultView) && t.top !== t && t.addEventListener("unload", M),
                    (le.getById = $(function (e) {
                        return (r.appendChild(e).id = ce.expando), !T.getElementsByName || !T.getElementsByName(ce.expando).length;
                    })),
                    (le.disconnectedMatch = $(function (e) {
                        return i.call(e, "*");
                    })),
                    (le.scope = $(function () {
                        return T.querySelectorAll(":scope");
                    })),
                    (le.cssHas = $(function () {
                        try {
                            return T.querySelector(":has(*,:jqfake)"), !1;
                        } catch (e) {
                            return !0;
                        }
                    })),
                    le.getById
                        ? ((b.filter.ID = function (e) {
                            var t = e.replace(O, P);
                            return function (e) {
                                return e.getAttribute("id") === t;
                            };
                        }),
                            (b.find.ID = function (e, t) {
                                if ("undefined" != typeof t.getElementById && C) {
                                    var n = t.getElementById(e);
                                    return n ? [n] : [];
                                }
                            }))
                        : ((b.filter.ID = function (e) {
                            var n = e.replace(O, P);
                            return function (e) {
                                var t = "undefined" != typeof e.getAttributeNode && e.getAttributeNode("id");
                                return t && t.value === n;
                            };
                        }),
                            (b.find.ID = function (e, t) {
                                if ("undefined" != typeof t.getElementById && C) {
                                    var n,
                                        r,
                                        i,
                                        o = t.getElementById(e);
                                    if (o) {
                                        if ((n = o.getAttributeNode("id")) && n.value === e) return [o];
                                        (i = t.getElementsByName(e)), (r = 0);
                                        while ((o = i[r++])) if ((n = o.getAttributeNode("id")) && n.value === e) return [o];
                                    }
                                    return [];
                                }
                            })),
                    (b.find.TAG = function (e, t) {
                        return "undefined" != typeof t.getElementsByTagName ? t.getElementsByTagName(e) : t.querySelectorAll(e);
                    }),
                    (b.find.CLASS = function (e, t) {
                        if ("undefined" != typeof t.getElementsByClassName && C) return t.getElementsByClassName(e);
                    }),
                    (d = []),
                    $(function (e) {
                        var t;
                        (r.appendChild(e).innerHTML = "<a id='" + S + "' href='' disabled='disabled'></a><select id='" + S + "-\r\\' disabled='disabled'><option selected=''></option></select>"),
                        e.querySelectorAll("[selected]").length || d.push("\\[" + ge + "*(?:value|" + f + ")"),
                        e.querySelectorAll("[id~=" + S + "-]").length || d.push("~="),
                        e.querySelectorAll("a#" + S + "+*").length || d.push(".#.+[+~]"),
                        e.querySelectorAll(":checked").length || d.push(":checked"),
                            (t = T.createElement("input")).setAttribute("type", "hidden"),
                            e.appendChild(t).setAttribute("name", "D"),
                            (r.appendChild(e).disabled = !0),
                        2 !== e.querySelectorAll(":disabled").length && d.push(":enabled", ":disabled"),
                            (t = T.createElement("input")).setAttribute("name", ""),
                            e.appendChild(t),
                        e.querySelectorAll("[name='']").length || d.push("\\[" + ge + "*name" + ge + "*=" + ge + "*(?:''|\"\")");
                    }),
                le.cssHas || d.push(":has"),
                    (d = d.length && new RegExp(d.join("|"))),
                    (l = function (e, t) {
                        if (e === t) return (a = !0), 0;
                        var n = !e.compareDocumentPosition - !t.compareDocumentPosition;
                        return (
                            n ||
                            (1 & (n = (e.ownerDocument || e) == (t.ownerDocument || t) ? e.compareDocumentPosition(t) : 1) || (!le.sortDetached && t.compareDocumentPosition(e) === n)
                                ? e === T || (e.ownerDocument == ye && I.contains(ye, e))
                                    ? -1
                                    : t === T || (t.ownerDocument == ye && I.contains(ye, t))
                                        ? 1
                                        : o
                                            ? se.call(o, e) - se.call(o, t)
                                            : 0
                                : 4 & n
                                    ? -1
                                    : 1)
                        );
                    })),
                    T
            );
        }
        for (e in ((I.matches = function (e, t) {
            return I(e, null, null, t);
        }),
            (I.matchesSelector = function (e, t) {
                if ((V(e), C && !h[t + " "] && (!d || !d.test(t))))
                    try {
                        var n = i.call(e, t);
                        if (n || le.disconnectedMatch || (e.document && 11 !== e.document.nodeType)) return n;
                    } catch (e) {
                        h(t, !0);
                    }
                return 0 < I(t, T, null, [e]).length;
            }),
            (I.contains = function (e, t) {
                return (e.ownerDocument || e) != T && V(e), ce.contains(e, t);
            }),
            (I.attr = function (e, t) {
                (e.ownerDocument || e) != T && V(e);
                var n = b.attrHandle[t.toLowerCase()],
                    r = n && ue.call(b.attrHandle, t.toLowerCase()) ? n(e, t, !C) : void 0;
                return void 0 !== r ? r : e.getAttribute(t);
            }),
            (I.error = function (e) {
                throw new Error("Syntax error, unrecognized expression: " + e);
            }),
            (ce.uniqueSort = function (e) {
                var t,
                    n = [],
                    r = 0,
                    i = 0;
                if (((a = !le.sortStable), (o = !le.sortStable && ae.call(e, 0)), de.call(e, l), a)) {
                    while ((t = e[i++])) t === e[i] && (r = n.push(i));
                    while (r--) he.call(e, n[r], 1);
                }
                return (o = null), e;
            }),
            (ce.fn.uniqueSort = function () {
                return this.pushStack(ce.uniqueSort(ae.apply(this)));
            }),
            ((b = ce.expr = {
                cacheLength: 50,
                createPseudo: F,
                match: D,
                attrHandle: {},
                find: {},
                relative: { ">": { dir: "parentNode", first: !0 }, " ": { dir: "parentNode" }, "+": { dir: "previousSibling", first: !0 }, "~": { dir: "previousSibling" } },
                preFilter: {
                    ATTR: function (e) {
                        return (e[1] = e[1].replace(O, P)), (e[3] = (e[3] || e[4] || e[5] || "").replace(O, P)), "~=" === e[2] && (e[3] = " " + e[3] + " "), e.slice(0, 4);
                    },
                    CHILD: function (e) {
                        return (
                            (e[1] = e[1].toLowerCase()),
                                "nth" === e[1].slice(0, 3) ? (e[3] || I.error(e[0]), (e[4] = +(e[4] ? e[5] + (e[6] || 1) : 2 * ("even" === e[3] || "odd" === e[3]))), (e[5] = +(e[7] + e[8] || "odd" === e[3]))) : e[3] && I.error(e[0]),
                                e
                        );
                    },
                    PSEUDO: function (e) {
                        var t,
                            n = !e[6] && e[2];
                        return D.CHILD.test(e[0])
                            ? null
                            : (e[3] ? (e[2] = e[4] || e[5] || "") : n && j.test(n) && (t = Y(n, !0)) && (t = n.indexOf(")", n.length - t) - n.length) && ((e[0] = e[0].slice(0, t)), (e[2] = n.slice(0, t))), e.slice(0, 3));
                    },
                },
                filter: {
                    TAG: function (e) {
                        var t = e.replace(O, P).toLowerCase();
                        return "*" === e
                            ? function () {
                                return !0;
                            }
                            : function (e) {
                                return fe(e, t);
                            };
                    },
                    CLASS: function (e) {
                        var t = s[e + " "];
                        return (
                            t ||
                            ((t = new RegExp("(^|" + ge + ")" + e + "(" + ge + "|$)")) &&
                                s(e, function (e) {
                                    return t.test(("string" == typeof e.className && e.className) || ("undefined" != typeof e.getAttribute && e.getAttribute("class")) || "");
                                }))
                        );
                    },
                    ATTR: function (n, r, i) {
                        return function (e) {
                            var t = I.attr(e, n);
                            return null == t
                                ? "!=" === r
                                : !r ||
                                ((t += ""),
                                    "=" === r
                                        ? t === i
                                        : "!=" === r
                                            ? t !== i
                                            : "^=" === r
                                                ? i && 0 === t.indexOf(i)
                                                : "*=" === r
                                                    ? i && -1 < t.indexOf(i)
                                                    : "$=" === r
                                                        ? i && t.slice(-i.length) === i
                                                        : "~=" === r
                                                            ? -1 < (" " + t.replace(v, " ") + " ").indexOf(i)
                                                            : "|=" === r && (t === i || t.slice(0, i.length + 1) === i + "-"));
                        };
                    },
                    CHILD: function (d, e, t, h, g) {
                        var v = "nth" !== d.slice(0, 3),
                            y = "last" !== d.slice(-4),
                            m = "of-type" === e;
                        return 1 === h && 0 === g
                            ? function (e) {
                                return !!e.parentNode;
                            }
                            : function (e, t, n) {
                                var r,
                                    i,
                                    o,
                                    a,
                                    s,
                                    u = v !== y ? "nextSibling" : "previousSibling",
                                    l = e.parentNode,
                                    c = m && e.nodeName.toLowerCase(),
                                    f = !n && !m,
                                    p = !1;
                                if (l) {
                                    if (v) {
                                        while (u) {
                                            o = e;
                                            while ((o = o[u])) if (m ? fe(o, c) : 1 === o.nodeType) return !1;
                                            s = u = "only" === d && !s && "nextSibling";
                                        }
                                        return !0;
                                    }
                                    if (((s = [y ? l.firstChild : l.lastChild]), y && f)) {
                                        (p = (a = (r = (i = l[S] || (l[S] = {}))[d] || [])[0] === E && r[1]) && r[2]), (o = a && l.childNodes[a]);
                                        while ((o = (++a && o && o[u]) || (p = a = 0) || s.pop()))
                                            if (1 === o.nodeType && ++p && o === e) {
                                                i[d] = [E, a, p];
                                                break;
                                            }
                                    } else if ((f && (p = a = (r = (i = e[S] || (e[S] = {}))[d] || [])[0] === E && r[1]), !1 === p))
                                        while ((o = (++a && o && o[u]) || (p = a = 0) || s.pop())) if ((m ? fe(o, c) : 1 === o.nodeType) && ++p && (f && ((i = o[S] || (o[S] = {}))[d] = [E, p]), o === e)) break;
                                    return (p -= g) === h || (p % h == 0 && 0 <= p / h);
                                }
                            };
                    },
                    PSEUDO: function (e, o) {
                        var t,
                            a = b.pseudos[e] || b.setFilters[e.toLowerCase()] || I.error("unsupported pseudo: " + e);
                        return a[S]
                            ? a(o)
                            : 1 < a.length
                                ? ((t = [e, e, "", o]),
                                    b.setFilters.hasOwnProperty(e.toLowerCase())
                                        ? F(function (e, t) {
                                            var n,
                                                r = a(e, o),
                                                i = r.length;
                                            while (i--) e[(n = se.call(e, r[i]))] = !(t[n] = r[i]);
                                        })
                                        : function (e) {
                                            return a(e, 0, t);
                                        })
                                : a;
                    },
                },
                pseudos: {
                    not: F(function (e) {
                        var r = [],
                            i = [],
                            s = ne(e.replace(ve, "$1"));
                        return s[S]
                            ? F(function (e, t, n, r) {
                                var i,
                                    o = s(e, null, r, []),
                                    a = e.length;
                                while (a--) (i = o[a]) && (e[a] = !(t[a] = i));
                            })
                            : function (e, t, n) {
                                return (r[0] = e), s(r, null, n, i), (r[0] = null), !i.pop();
                            };
                    }),
                    has: F(function (t) {
                        return function (e) {
                            return 0 < I(t, e).length;
                        };
                    }),
                    contains: F(function (t) {
                        return (
                            (t = t.replace(O, P)),
                                function (e) {
                                    return -1 < (e.textContent || ce.text(e)).indexOf(t);
                                }
                        );
                    }),
                    lang: F(function (n) {
                        return (
                            A.test(n || "") || I.error("unsupported lang: " + n),
                                (n = n.replace(O, P).toLowerCase()),
                                function (e) {
                                    var t;
                                    do {
                                        if ((t = C ? e.lang : e.getAttribute("xml:lang") || e.getAttribute("lang"))) return (t = t.toLowerCase()) === n || 0 === t.indexOf(n + "-");
                                    } while ((e = e.parentNode) && 1 === e.nodeType);
                                    return !1;
                                }
                        );
                    }),
                    target: function (e) {
                        var t = ie.location && ie.location.hash;
                        return t && t.slice(1) === e.id;
                    },
                    root: function (e) {
                        return e === r;
                    },
                    focus: function (e) {
                        return (
                            e ===
                            (function () {
                                try {
                                    return T.activeElement;
                                } catch (e) {}
                            })() &&
                            T.hasFocus() &&
                            !!(e.type || e.href || ~e.tabIndex)
                        );
                    },
                    enabled: z(!1),
                    disabled: z(!0),
                    checked: function (e) {
                        return (fe(e, "input") && !!e.checked) || (fe(e, "option") && !!e.selected);
                    },
                    selected: function (e) {
                        return e.parentNode && e.parentNode.selectedIndex, !0 === e.selected;
                    },
                    empty: function (e) {
                        for (e = e.firstChild; e; e = e.nextSibling) if (e.nodeType < 6) return !1;
                        return !0;
                    },
                    parent: function (e) {
                        return !b.pseudos.empty(e);
                    },
                    header: function (e) {
                        return q.test(e.nodeName);
                    },
                    input: function (e) {
                        return N.test(e.nodeName);
                    },
                    button: function (e) {
                        return (fe(e, "input") && "button" === e.type) || fe(e, "button");
                    },
                    text: function (e) {
                        var t;
                        return fe(e, "input") && "text" === e.type && (null == (t = e.getAttribute("type")) || "text" === t.toLowerCase());
                    },
                    first: X(function () {
                        return [0];
                    }),
                    last: X(function (e, t) {
                        return [t - 1];
                    }),
                    eq: X(function (e, t, n) {
                        return [n < 0 ? n + t : n];
                    }),
                    even: X(function (e, t) {
                        for (var n = 0; n < t; n += 2) e.push(n);
                        return e;
                    }),
                    odd: X(function (e, t) {
                        for (var n = 1; n < t; n += 2) e.push(n);
                        return e;
                    }),
                    lt: X(function (e, t, n) {
                        var r;
                        for (r = n < 0 ? n + t : t < n ? t : n; 0 <= --r; ) e.push(r);
                        return e;
                    }),
                    gt: X(function (e, t, n) {
                        for (var r = n < 0 ? n + t : n; ++r < t; ) e.push(r);
                        return e;
                    }),
                },
            }).pseudos.nth = b.pseudos.eq),
            { radio: !0, checkbox: !0, file: !0, password: !0, image: !0 }))
            b.pseudos[e] = B(e);
        for (e in { submit: !0, reset: !0 }) b.pseudos[e] = _(e);
        function G() {}
        function Y(e, t) {
            var n,
                r,
                i,
                o,
                a,
                s,
                u,
                l = c[e + " "];
            if (l) return t ? 0 : l.slice(0);
            (a = e), (s = []), (u = b.preFilter);
            while (a) {
                for (o in ((n && !(r = y.exec(a))) || (r && (a = a.slice(r[0].length) || a), s.push((i = []))),
                    (n = !1),
                (r = m.exec(a)) && ((n = r.shift()), i.push({ value: n, type: r[0].replace(ve, " ") }), (a = a.slice(n.length))),
                    b.filter))
                    !(r = D[o].exec(a)) || (u[o] && !(r = u[o](r))) || ((n = r.shift()), i.push({ value: n, type: o, matches: r }), (a = a.slice(n.length)));
                if (!n) break;
            }
            return t ? a.length : a ? I.error(e) : c(e, s).slice(0);
        }
        function Q(e) {
            for (var t = 0, n = e.length, r = ""; t < n; t++) r += e[t].value;
            return r;
        }
        function J(a, e, t) {
            var s = e.dir,
                u = e.next,
                l = u || s,
                c = t && "parentNode" === l,
                f = n++;
            return e.first
                ? function (e, t, n) {
                    while ((e = e[s])) if (1 === e.nodeType || c) return a(e, t, n);
                    return !1;
                }
                : function (e, t, n) {
                    var r,
                        i,
                        o = [E, f];
                    if (n) {
                        while ((e = e[s])) if ((1 === e.nodeType || c) && a(e, t, n)) return !0;
                    } else
                        while ((e = e[s]))
                            if (1 === e.nodeType || c)
                                if (((i = e[S] || (e[S] = {})), u && fe(e, u))) e = e[s] || e;
                                else {
                                    if ((r = i[l]) && r[0] === E && r[1] === f) return (o[2] = r[2]);
                                    if (((i[l] = o)[2] = a(e, t, n))) return !0;
                                }
                    return !1;
                };
        }
        function K(i) {
            return 1 < i.length
                ? function (e, t, n) {
                    var r = i.length;
                    while (r--) if (!i[r](e, t, n)) return !1;
                    return !0;
                }
                : i[0];
        }
        function Z(e, t, n, r, i) {
            for (var o, a = [], s = 0, u = e.length, l = null != t; s < u; s++) (o = e[s]) && ((n && !n(o, r, i)) || (a.push(o), l && t.push(s)));
            return a;
        }
        function ee(d, h, g, v, y, e) {
            return (
                v && !v[S] && (v = ee(v)),
                y && !y[S] && (y = ee(y, e)),
                    F(function (e, t, n, r) {
                        var i,
                            o,
                            a,
                            s,
                            u = [],
                            l = [],
                            c = t.length,
                            f =
                                e ||
                                (function (e, t, n) {
                                    for (var r = 0, i = t.length; r < i; r++) I(e, t[r], n);
                                    return n;
                                })(h || "*", n.nodeType ? [n] : n, []),
                            p = !d || (!e && h) ? f : Z(f, u, d, n, r);
                        if ((g ? g(p, (s = y || (e ? d : c || v) ? [] : t), n, r) : (s = p), v)) {
                            (i = Z(s, l)), v(i, [], n, r), (o = i.length);
                            while (o--) (a = i[o]) && (s[l[o]] = !(p[l[o]] = a));
                        }
                        if (e) {
                            if (y || d) {
                                if (y) {
                                    (i = []), (o = s.length);
                                    while (o--) (a = s[o]) && i.push((p[o] = a));
                                    y(null, (s = []), i, r);
                                }
                                o = s.length;
                                while (o--) (a = s[o]) && -1 < (i = y ? se.call(e, a) : u[o]) && (e[i] = !(t[i] = a));
                            }
                        } else (s = Z(s === t ? s.splice(c, s.length) : s)), y ? y(null, t, s, r) : k.apply(t, s);
                    })
            );
        }
        function te(e) {
            for (
                var i,
                    t,
                    n,
                    r = e.length,
                    o = b.relative[e[0].type],
                    a = o || b.relative[" "],
                    s = o ? 1 : 0,
                    u = J(
                        function (e) {
                            return e === i;
                        },
                        a,
                        !0
                    ),
                    l = J(
                        function (e) {
                            return -1 < se.call(i, e);
                        },
                        a,
                        !0
                    ),
                    c = [
                        function (e, t, n) {
                            var r = (!o && (n || t != w)) || ((i = t).nodeType ? u(e, t, n) : l(e, t, n));
                            return (i = null), r;
                        },
                    ];
                s < r;
                s++
            )
                if ((t = b.relative[e[s].type])) c = [J(K(c), t)];
                else {
                    if ((t = b.filter[e[s].type].apply(null, e[s].matches))[S]) {
                        for (n = ++s; n < r; n++) if (b.relative[e[n].type]) break;
                        return ee(1 < s && K(c), 1 < s && Q(e.slice(0, s - 1).concat({ value: " " === e[s - 2].type ? "*" : "" })).replace(ve, "$1"), t, s < n && te(e.slice(s, n)), n < r && te((e = e.slice(n))), n < r && Q(e));
                    }
                    c.push(t);
                }
            return K(c);
        }
        function ne(e, t) {
            var n,
                v,
                y,
                m,
                x,
                r,
                i = [],
                o = [],
                a = u[e + " "];
            if (!a) {
                t || (t = Y(e)), (n = t.length);
                while (n--) (a = te(t[n]))[S] ? i.push(a) : o.push(a);
                (a = u(
                    e,
                    ((v = o),
                        (m = 0 < (y = i).length),
                        (x = 0 < v.length),
                        (r = function (e, t, n, r, i) {
                            var o,
                                a,
                                s,
                                u = 0,
                                l = "0",
                                c = e && [],
                                f = [],
                                p = w,
                                d = e || (x && b.find.TAG("*", i)),
                                h = (E += null == p ? 1 : Math.random() || 0.1),
                                g = d.length;
                            for (i && (w = t == T || t || i); l !== g && null != (o = d[l]); l++) {
                                if (x && o) {
                                    (a = 0), t || o.ownerDocument == T || (V(o), (n = !C));
                                    while ((s = v[a++]))
                                        if (s(o, t || T, n)) {
                                            k.call(r, o);
                                            break;
                                        }
                                    i && (E = h);
                                }
                                m && ((o = !s && o) && u--, e && c.push(o));
                            }
                            if (((u += l), m && l !== u)) {
                                a = 0;
                                while ((s = y[a++])) s(c, f, t, n);
                                if (e) {
                                    if (0 < u) while (l--) c[l] || f[l] || (f[l] = pe.call(r));
                                    f = Z(f);
                                }
                                k.apply(r, f), i && !e && 0 < f.length && 1 < u + y.length && ce.uniqueSort(r);
                            }
                            return i && ((E = h), (w = p)), c;
                        }),
                        m ? F(r) : r)
                )).selector = e;
            }
            return a;
        }
        function re(e, t, n, r) {
            var i,
                o,
                a,
                s,
                u,
                l = "function" == typeof e && e,
                c = !r && Y((e = l.selector || e));
            if (((n = n || []), 1 === c.length)) {
                if (2 < (o = c[0] = c[0].slice(0)).length && "ID" === (a = o[0]).type && 9 === t.nodeType && C && b.relative[o[1].type]) {
                    if (!(t = (b.find.ID(a.matches[0].replace(O, P), t) || [])[0])) return n;
                    l && (t = t.parentNode), (e = e.slice(o.shift().value.length));
                }
                i = D.needsContext.test(e) ? 0 : o.length;
                while (i--) {
                    if (((a = o[i]), b.relative[(s = a.type)])) break;
                    if ((u = b.find[s]) && (r = u(a.matches[0].replace(O, P), (H.test(o[0].type) && U(t.parentNode)) || t))) {
                        if ((o.splice(i, 1), !(e = r.length && Q(o)))) return k.apply(n, r), n;
                        break;
                    }
                }
            }
            return (l || ne(e, c))(r, t, !C, n, !t || (H.test(e) && U(t.parentNode)) || t), n;
        }
        (G.prototype = b.filters = b.pseudos),
            (b.setFilters = new G()),
            (le.sortStable = S.split("").sort(l).join("") === S),
            V(),
            (le.sortDetached = $(function (e) {
                return 1 & e.compareDocumentPosition(T.createElement("fieldset"));
            })),
            (ce.find = I),
            (ce.expr[":"] = ce.expr.pseudos),
            (ce.unique = ce.uniqueSort),
            (I.compile = ne),
            (I.select = re),
            (I.setDocument = V),
            (I.tokenize = Y),
            (I.escape = ce.escapeSelector),
            (I.getText = ce.text),
            (I.isXML = ce.isXMLDoc),
            (I.selectors = ce.expr),
            (I.support = ce.support),
            (I.uniqueSort = ce.uniqueSort);
    })();
    var d = function (e, t, n) {
            var r = [],
                i = void 0 !== n;
            while ((e = e[t]) && 9 !== e.nodeType)
                if (1 === e.nodeType) {
                    if (i && ce(e).is(n)) break;
                    r.push(e);
                }
            return r;
        },
        h = function (e, t) {
            for (var n = []; e; e = e.nextSibling) 1 === e.nodeType && e !== t && n.push(e);
            return n;
        },
        b = ce.expr.match.needsContext,
        w = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;
    function T(e, n, r) {
        return v(n)
            ? ce.grep(e, function (e, t) {
                return !!n.call(e, t, e) !== r;
            })
            : n.nodeType
                ? ce.grep(e, function (e) {
                    return (e === n) !== r;
                })
                : "string" != typeof n
                    ? ce.grep(e, function (e) {
                        return -1 < se.call(n, e) !== r;
                    })
                    : ce.filter(n, e, r);
    }
    (ce.filter = function (e, t, n) {
        var r = t[0];
        return (
            n && (e = ":not(" + e + ")"),
                1 === t.length && 1 === r.nodeType
                    ? ce.find.matchesSelector(r, e)
                        ? [r]
                        : []
                    : ce.find.matches(
                        e,
                        ce.grep(t, function (e) {
                            return 1 === e.nodeType;
                        })
                    )
        );
    }),
        ce.fn.extend({
            find: function (e) {
                var t,
                    n,
                    r = this.length,
                    i = this;
                if ("string" != typeof e)
                    return this.pushStack(
                        ce(e).filter(function () {
                            for (t = 0; t < r; t++) if (ce.contains(i[t], this)) return !0;
                        })
                    );
                for (n = this.pushStack([]), t = 0; t < r; t++) ce.find(e, i[t], n);
                return 1 < r ? ce.uniqueSort(n) : n;
            },
            filter: function (e) {
                return this.pushStack(T(this, e || [], !1));
            },
            not: function (e) {
                return this.pushStack(T(this, e || [], !0));
            },
            is: function (e) {
                return !!T(this, "string" == typeof e && b.test(e) ? ce(e) : e || [], !1).length;
            },
        });
    var k,
        S = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;
    ((ce.fn.init = function (e, t, n) {
        var r, i;
        if (!e) return this;
        if (((n = n || k), "string" == typeof e)) {
            if (!(r = "<" === e[0] && ">" === e[e.length - 1] && 3 <= e.length ? [null, e, null] : S.exec(e)) || (!r[1] && t)) return !t || t.jquery ? (t || n).find(e) : this.constructor(t).find(e);
            if (r[1]) {
                if (((t = t instanceof ce ? t[0] : t), ce.merge(this, ce.parseHTML(r[1], t && t.nodeType ? t.ownerDocument || t : C, !0)), w.test(r[1]) && ce.isPlainObject(t))) for (r in t) v(this[r]) ? this[r](t[r]) : this.attr(r, t[r]);
                return this;
            }
            return (i = C.getElementById(r[2])) && ((this[0] = i), (this.length = 1)), this;
        }
        return e.nodeType ? ((this[0] = e), (this.length = 1), this) : v(e) ? (void 0 !== n.ready ? n.ready(e) : e(ce)) : ce.makeArray(e, this);
    }).prototype = ce.fn),
        (k = ce(C));
    var E = /^(?:parents|prev(?:Until|All))/,
        j = { children: !0, contents: !0, next: !0, prev: !0 };
    function A(e, t) {
        while ((e = e[t]) && 1 !== e.nodeType);
        return e;
    }
    ce.fn.extend({
        has: function (e) {
            var t = ce(e, this),
                n = t.length;
            return this.filter(function () {
                for (var e = 0; e < n; e++) if (ce.contains(this, t[e])) return !0;
            });
        },
        closest: function (e, t) {
            var n,
                r = 0,
                i = this.length,
                o = [],
                a = "string" != typeof e && ce(e);
            if (!b.test(e))
                for (; r < i; r++)
                    for (n = this[r]; n && n !== t; n = n.parentNode)
                        if (n.nodeType < 11 && (a ? -1 < a.index(n) : 1 === n.nodeType && ce.find.matchesSelector(n, e))) {
                            o.push(n);
                            break;
                        }
            return this.pushStack(1 < o.length ? ce.uniqueSort(o) : o);
        },
        index: function (e) {
            return e ? ("string" == typeof e ? se.call(ce(e), this[0]) : se.call(this, e.jquery ? e[0] : e)) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
        },
        add: function (e, t) {
            return this.pushStack(ce.uniqueSort(ce.merge(this.get(), ce(e, t))));
        },
        addBack: function (e) {
            return this.add(null == e ? this.prevObject : this.prevObject.filter(e));
        },
    }),
        ce.each(
            {
                parent: function (e) {
                    var t = e.parentNode;
                    return t && 11 !== t.nodeType ? t : null;
                },
                parents: function (e) {
                    return d(e, "parentNode");
                },
                parentsUntil: function (e, t, n) {
                    return d(e, "parentNode", n);
                },
                next: function (e) {
                    return A(e, "nextSibling");
                },
                prev: function (e) {
                    return A(e, "previousSibling");
                },
                nextAll: function (e) {
                    return d(e, "nextSibling");
                },
                prevAll: function (e) {
                    return d(e, "previousSibling");
                },
                nextUntil: function (e, t, n) {
                    return d(e, "nextSibling", n);
                },
                prevUntil: function (e, t, n) {
                    return d(e, "previousSibling", n);
                },
                siblings: function (e) {
                    return h((e.parentNode || {}).firstChild, e);
                },
                children: function (e) {
                    return h(e.firstChild);
                },
                contents: function (e) {
                    return null != e.contentDocument && r(e.contentDocument) ? e.contentDocument : (fe(e, "template") && (e = e.content || e), ce.merge([], e.childNodes));
                },
            },
            function (r, i) {
                ce.fn[r] = function (e, t) {
                    var n = ce.map(this, i, e);
                    return "Until" !== r.slice(-5) && (t = e), t && "string" == typeof t && (n = ce.filter(t, n)), 1 < this.length && (j[r] || ce.uniqueSort(n), E.test(r) && n.reverse()), this.pushStack(n);
                };
            }
        );
    var D = /[^\x20\t\r\n\f]+/g;
    function N(e) {
        return e;
    }
    function q(e) {
        throw e;
    }
    function L(e, t, n, r) {
        var i;
        try {
            e && v((i = e.promise)) ? i.call(e).done(t).fail(n) : e && v((i = e.then)) ? i.call(e, t, n) : t.apply(void 0, [e].slice(r));
        } catch (e) {
            n.apply(void 0, [e]);
        }
    }
    (ce.Callbacks = function (r) {
        var e, n;
        r =
            "string" == typeof r
                ? ((e = r),
                    (n = {}),
                    ce.each(e.match(D) || [], function (e, t) {
                        n[t] = !0;
                    }),
                    n)
                : ce.extend({}, r);
        var i,
            t,
            o,
            a,
            s = [],
            u = [],
            l = -1,
            c = function () {
                for (a = a || r.once, o = i = !0; u.length; l = -1) {
                    t = u.shift();
                    while (++l < s.length) !1 === s[l].apply(t[0], t[1]) && r.stopOnFalse && ((l = s.length), (t = !1));
                }
                r.memory || (t = !1), (i = !1), a && (s = t ? [] : "");
            },
            f = {
                add: function () {
                    return (
                        s &&
                        (t && !i && ((l = s.length - 1), u.push(t)),
                            (function n(e) {
                                ce.each(e, function (e, t) {
                                    v(t) ? (r.unique && f.has(t)) || s.push(t) : t && t.length && "string" !== x(t) && n(t);
                                });
                            })(arguments),
                        t && !i && c()),
                            this
                    );
                },
                remove: function () {
                    return (
                        ce.each(arguments, function (e, t) {
                            var n;
                            while (-1 < (n = ce.inArray(t, s, n))) s.splice(n, 1), n <= l && l--;
                        }),
                            this
                    );
                },
                has: function (e) {
                    return e ? -1 < ce.inArray(e, s) : 0 < s.length;
                },
                empty: function () {
                    return s && (s = []), this;
                },
                disable: function () {
                    return (a = u = []), (s = t = ""), this;
                },
                disabled: function () {
                    return !s;
                },
                lock: function () {
                    return (a = u = []), t || i || (s = t = ""), this;
                },
                locked: function () {
                    return !!a;
                },
                fireWith: function (e, t) {
                    return a || ((t = [e, (t = t || []).slice ? t.slice() : t]), u.push(t), i || c()), this;
                },
                fire: function () {
                    return f.fireWith(this, arguments), this;
                },
                fired: function () {
                    return !!o;
                },
            };
        return f;
    }),
        ce.extend({
            Deferred: function (e) {
                var o = [
                        ["notify", "progress", ce.Callbacks("memory"), ce.Callbacks("memory"), 2],
                        ["resolve", "done", ce.Callbacks("once memory"), ce.Callbacks("once memory"), 0, "resolved"],
                        ["reject", "fail", ce.Callbacks("once memory"), ce.Callbacks("once memory"), 1, "rejected"],
                    ],
                    i = "pending",
                    a = {
                        state: function () {
                            return i;
                        },
                        always: function () {
                            return s.done(arguments).fail(arguments), this;
                        },
                        catch: function (e) {
                            return a.then(null, e);
                        },
                        pipe: function () {
                            var i = arguments;
                            return ce
                                .Deferred(function (r) {
                                    ce.each(o, function (e, t) {
                                        var n = v(i[t[4]]) && i[t[4]];
                                        s[t[1]](function () {
                                            var e = n && n.apply(this, arguments);
                                            e && v(e.promise) ? e.promise().progress(r.notify).done(r.resolve).fail(r.reject) : r[t[0] + "With"](this, n ? [e] : arguments);
                                        });
                                    }),
                                        (i = null);
                                })
                                .promise();
                        },
                        then: function (t, n, r) {
                            var u = 0;
                            function l(i, o, a, s) {
                                return function () {
                                    var n = this,
                                        r = arguments,
                                        e = function () {
                                            var e, t;
                                            if (!(i < u)) {
                                                if ((e = a.apply(n, r)) === o.promise()) throw new TypeError("Thenable self-resolution");
                                                (t = e && ("object" == typeof e || "function" == typeof e) && e.then),
                                                    v(t)
                                                        ? s
                                                            ? t.call(e, l(u, o, N, s), l(u, o, q, s))
                                                            : (u++, t.call(e, l(u, o, N, s), l(u, o, q, s), l(u, o, N, o.notifyWith)))
                                                        : (a !== N && ((n = void 0), (r = [e])), (s || o.resolveWith)(n, r));
                                            }
                                        },
                                        t = s
                                            ? e
                                            : function () {
                                                try {
                                                    e();
                                                } catch (e) {
                                                    ce.Deferred.exceptionHook && ce.Deferred.exceptionHook(e, t.error), u <= i + 1 && (a !== q && ((n = void 0), (r = [e])), o.rejectWith(n, r));
                                                }
                                            };
                                    i ? t() : (ce.Deferred.getErrorHook ? (t.error = ce.Deferred.getErrorHook()) : ce.Deferred.getStackHook && (t.error = ce.Deferred.getStackHook()), ie.setTimeout(t));
                                };
                            }
                            return ce
                                .Deferred(function (e) {
                                    o[0][3].add(l(0, e, v(r) ? r : N, e.notifyWith)), o[1][3].add(l(0, e, v(t) ? t : N)), o[2][3].add(l(0, e, v(n) ? n : q));
                                })
                                .promise();
                        },
                        promise: function (e) {
                            return null != e ? ce.extend(e, a) : a;
                        },
                    },
                    s = {};
                return (
                    ce.each(o, function (e, t) {
                        var n = t[2],
                            r = t[5];
                        (a[t[1]] = n.add),
                        r &&
                        n.add(
                            function () {
                                i = r;
                            },
                            o[3 - e][2].disable,
                            o[3 - e][3].disable,
                            o[0][2].lock,
                            o[0][3].lock
                        ),
                            n.add(t[3].fire),
                            (s[t[0]] = function () {
                                return s[t[0] + "With"](this === s ? void 0 : this, arguments), this;
                            }),
                            (s[t[0] + "With"] = n.fireWith);
                    }),
                        a.promise(s),
                    e && e.call(s, s),
                        s
                );
            },
            when: function (e) {
                var n = arguments.length,
                    t = n,
                    r = Array(t),
                    i = ae.call(arguments),
                    o = ce.Deferred(),
                    a = function (t) {
                        return function (e) {
                            (r[t] = this), (i[t] = 1 < arguments.length ? ae.call(arguments) : e), --n || o.resolveWith(r, i);
                        };
                    };
                if (n <= 1 && (L(e, o.done(a(t)).resolve, o.reject, !n), "pending" === o.state() || v(i[t] && i[t].then))) return o.then();
                while (t--) L(i[t], a(t), o.reject);
                return o.promise();
            },
        });
    var H = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
    (ce.Deferred.exceptionHook = function (e, t) {
        ie.console && ie.console.warn && e && H.test(e.name) && ie.console.warn("jQuery.Deferred exception: " + e.message, e.stack, t);
    }),
        (ce.readyException = function (e) {
            ie.setTimeout(function () {
                throw e;
            });
        });
    var O = ce.Deferred();
    function P() {
        C.removeEventListener("DOMContentLoaded", P), ie.removeEventListener("load", P), ce.ready();
    }
    (ce.fn.ready = function (e) {
        return (
            O.then(e)["catch"](function (e) {
                ce.readyException(e);
            }),
                this
        );
    }),
        ce.extend({
            isReady: !1,
            readyWait: 1,
            ready: function (e) {
                (!0 === e ? --ce.readyWait : ce.isReady) || ((ce.isReady = !0) !== e && 0 < --ce.readyWait) || O.resolveWith(C, [ce]);
            },
        }),
        (ce.ready.then = O.then),
        "complete" === C.readyState || ("loading" !== C.readyState && !C.documentElement.doScroll) ? ie.setTimeout(ce.ready) : (C.addEventListener("DOMContentLoaded", P), ie.addEventListener("load", P));
    var M = function (e, t, n, r, i, o, a) {
            var s = 0,
                u = e.length,
                l = null == n;
            if ("object" === x(n)) for (s in ((i = !0), n)) M(e, t, s, n[s], !0, o, a);
            else if (
                void 0 !== r &&
                ((i = !0),
                v(r) || (a = !0),
                l &&
                (a
                    ? (t.call(e, r), (t = null))
                    : ((l = t),
                        (t = function (e, t, n) {
                            return l.call(ce(e), n);
                        }))),
                    t)
            )
                for (; s < u; s++) t(e[s], n, a ? r : r.call(e[s], s, t(e[s], n)));
            return i ? e : l ? t.call(e) : u ? t(e[0], n) : o;
        },
        R = /^-ms-/,
        I = /-([a-z])/g;
    function W(e, t) {
        return t.toUpperCase();
    }
    function F(e) {
        return e.replace(R, "ms-").replace(I, W);
    }
    var $ = function (e) {
        return 1 === e.nodeType || 9 === e.nodeType || !+e.nodeType;
    };
    function B() {
        this.expando = ce.expando + B.uid++;
    }
    (B.uid = 1),
        (B.prototype = {
            cache: function (e) {
                var t = e[this.expando];
                return t || ((t = {}), $(e) && (e.nodeType ? (e[this.expando] = t) : Object.defineProperty(e, this.expando, { value: t, configurable: !0 }))), t;
            },
            set: function (e, t, n) {
                var r,
                    i = this.cache(e);
                if ("string" == typeof t) i[F(t)] = n;
                else for (r in t) i[F(r)] = t[r];
                return i;
            },
            get: function (e, t) {
                return void 0 === t ? this.cache(e) : e[this.expando] && e[this.expando][F(t)];
            },
            access: function (e, t, n) {
                return void 0 === t || (t && "string" == typeof t && void 0 === n) ? this.get(e, t) : (this.set(e, t, n), void 0 !== n ? n : t);
            },
            remove: function (e, t) {
                var n,
                    r = e[this.expando];
                if (void 0 !== r) {
                    if (void 0 !== t) {
                        n = (t = Array.isArray(t) ? t.map(F) : (t = F(t)) in r ? [t] : t.match(D) || []).length;
                        while (n--) delete r[t[n]];
                    }
                    (void 0 === t || ce.isEmptyObject(r)) && (e.nodeType ? (e[this.expando] = void 0) : delete e[this.expando]);
                }
            },
            hasData: function (e) {
                var t = e[this.expando];
                return void 0 !== t && !ce.isEmptyObject(t);
            },
        });
    var _ = new B(),
        z = new B(),
        X = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
        U = /[A-Z]/g;
    function V(e, t, n) {
        var r, i;
        if (void 0 === n && 1 === e.nodeType)
            if (((r = "data-" + t.replace(U, "-$&").toLowerCase()), "string" == typeof (n = e.getAttribute(r)))) {
                try {
                    n = "true" === (i = n) || ("false" !== i && ("null" === i ? null : i === +i + "" ? +i : X.test(i) ? JSON.parse(i) : i));
                } catch (e) {}
                z.set(e, t, n);
            } else n = void 0;
        return n;
    }
    ce.extend({
        hasData: function (e) {
            return z.hasData(e) || _.hasData(e);
        },
        data: function (e, t, n) {
            return z.access(e, t, n);
        },
        removeData: function (e, t) {
            z.remove(e, t);
        },
        _data: function (e, t, n) {
            return _.access(e, t, n);
        },
        _removeData: function (e, t) {
            _.remove(e, t);
        },
    }),
        ce.fn.extend({
            data: function (n, e) {
                var t,
                    r,
                    i,
                    o = this[0],
                    a = o && o.attributes;
                if (void 0 === n) {
                    if (this.length && ((i = z.get(o)), 1 === o.nodeType && !_.get(o, "hasDataAttrs"))) {
                        t = a.length;
                        while (t--) a[t] && 0 === (r = a[t].name).indexOf("data-") && ((r = F(r.slice(5))), V(o, r, i[r]));
                        _.set(o, "hasDataAttrs", !0);
                    }
                    return i;
                }
                return "object" == typeof n
                    ? this.each(function () {
                        z.set(this, n);
                    })
                    : M(
                        this,
                        function (e) {
                            var t;
                            if (o && void 0 === e) return void 0 !== (t = z.get(o, n)) ? t : void 0 !== (t = V(o, n)) ? t : void 0;
                            this.each(function () {
                                z.set(this, n, e);
                            });
                        },
                        null,
                        e,
                        1 < arguments.length,
                        null,
                        !0
                    );
            },
            removeData: function (e) {
                return this.each(function () {
                    z.remove(this, e);
                });
            },
        }),
        ce.extend({
            queue: function (e, t, n) {
                var r;
                if (e) return (t = (t || "fx") + "queue"), (r = _.get(e, t)), n && (!r || Array.isArray(n) ? (r = _.access(e, t, ce.makeArray(n))) : r.push(n)), r || [];
            },
            dequeue: function (e, t) {
                t = t || "fx";
                var n = ce.queue(e, t),
                    r = n.length,
                    i = n.shift(),
                    o = ce._queueHooks(e, t);
                "inprogress" === i && ((i = n.shift()), r--),
                i &&
                ("fx" === t && n.unshift("inprogress"),
                    delete o.stop,
                    i.call(
                        e,
                        function () {
                            ce.dequeue(e, t);
                        },
                        o
                    )),
                !r && o && o.empty.fire();
            },
            _queueHooks: function (e, t) {
                var n = t + "queueHooks";
                return (
                    _.get(e, n) ||
                    _.access(e, n, {
                        empty: ce.Callbacks("once memory").add(function () {
                            _.remove(e, [t + "queue", n]);
                        }),
                    })
                );
            },
        }),
        ce.fn.extend({
            queue: function (t, n) {
                var e = 2;
                return (
                    "string" != typeof t && ((n = t), (t = "fx"), e--),
                        arguments.length < e
                            ? ce.queue(this[0], t)
                            : void 0 === n
                                ? this
                                : this.each(function () {
                                    var e = ce.queue(this, t, n);
                                    ce._queueHooks(this, t), "fx" === t && "inprogress" !== e[0] && ce.dequeue(this, t);
                                })
                );
            },
            dequeue: function (e) {
                return this.each(function () {
                    ce.dequeue(this, e);
                });
            },
            clearQueue: function (e) {
                return this.queue(e || "fx", []);
            },
            promise: function (e, t) {
                var n,
                    r = 1,
                    i = ce.Deferred(),
                    o = this,
                    a = this.length,
                    s = function () {
                        --r || i.resolveWith(o, [o]);
                    };
                "string" != typeof e && ((t = e), (e = void 0)), (e = e || "fx");
                while (a--) (n = _.get(o[a], e + "queueHooks")) && n.empty && (r++, n.empty.add(s));
                return s(), i.promise(t);
            },
        });
    var G = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
        Y = new RegExp("^(?:([+-])=|)(" + G + ")([a-z%]*)$", "i"),
        Q = ["Top", "Right", "Bottom", "Left"],
        J = C.documentElement,
        K = function (e) {
            return ce.contains(e.ownerDocument, e);
        },
        Z = { composed: !0 };
    J.getRootNode &&
    (K = function (e) {
        return ce.contains(e.ownerDocument, e) || e.getRootNode(Z) === e.ownerDocument;
    });
    var ee = function (e, t) {
        return "none" === (e = t || e).style.display || ("" === e.style.display && K(e) && "none" === ce.css(e, "display"));
    };
    function te(e, t, n, r) {
        var i,
            o,
            a = 20,
            s = r
                ? function () {
                    return r.cur();
                }
                : function () {
                    return ce.css(e, t, "");
                },
            u = s(),
            l = (n && n[3]) || (ce.cssNumber[t] ? "" : "px"),
            c = e.nodeType && (ce.cssNumber[t] || ("px" !== l && +u)) && Y.exec(ce.css(e, t));
        if (c && c[3] !== l) {
            (u /= 2), (l = l || c[3]), (c = +u || 1);
            while (a--) ce.style(e, t, c + l), (1 - o) * (1 - (o = s() / u || 0.5)) <= 0 && (a = 0), (c /= o);
            (c *= 2), ce.style(e, t, c + l), (n = n || []);
        }
        return n && ((c = +c || +u || 0), (i = n[1] ? c + (n[1] + 1) * n[2] : +n[2]), r && ((r.unit = l), (r.start = c), (r.end = i))), i;
    }
    var ne = {};
    function re(e, t) {
        for (var n, r, i, o, a, s, u, l = [], c = 0, f = e.length; c < f; c++)
            (r = e[c]).style &&
            ((n = r.style.display),
                t
                    ? ("none" === n && ((l[c] = _.get(r, "display") || null), l[c] || (r.style.display = "")),
                    "" === r.style.display &&
                    ee(r) &&
                    (l[c] =
                        ((u = a = o = void 0),
                            (a = (i = r).ownerDocument),
                            (s = i.nodeName),
                        (u = ne[s]) || ((o = a.body.appendChild(a.createElement(s))), (u = ce.css(o, "display")), o.parentNode.removeChild(o), "none" === u && (u = "block"), (ne[s] = u)))))
                    : "none" !== n && ((l[c] = "none"), _.set(r, "display", n)));
        for (c = 0; c < f; c++) null != l[c] && (e[c].style.display = l[c]);
        return e;
    }
    ce.fn.extend({
        show: function () {
            return re(this, !0);
        },
        hide: function () {
            return re(this);
        },
        toggle: function (e) {
            return "boolean" == typeof e
                ? e
                    ? this.show()
                    : this.hide()
                : this.each(function () {
                    ee(this) ? ce(this).show() : ce(this).hide();
                });
        },
    });
    var xe,
        be,
        we = /^(?:checkbox|radio)$/i,
        Te = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i,
        Ce = /^$|^module$|\/(?:java|ecma)script/i;
    (xe = C.createDocumentFragment().appendChild(C.createElement("div"))),
        (be = C.createElement("input")).setAttribute("type", "radio"),
        be.setAttribute("checked", "checked"),
        be.setAttribute("name", "t"),
        xe.appendChild(be),
        (le.checkClone = xe.cloneNode(!0).cloneNode(!0).lastChild.checked),
        (xe.innerHTML = "<textarea>x</textarea>"),
        (le.noCloneChecked = !!xe.cloneNode(!0).lastChild.defaultValue),
        (xe.innerHTML = "<option></option>"),
        (le.option = !!xe.lastChild);
    var ke = { thead: [1, "<table>", "</table>"], col: [2, "<table><colgroup>", "</colgroup></table>"], tr: [2, "<table><tbody>", "</tbody></table>"], td: [3, "<table><tbody><tr>", "</tr></tbody></table>"], _default: [0, "", ""] };
    function Se(e, t) {
        var n;
        return (n = "undefined" != typeof e.getElementsByTagName ? e.getElementsByTagName(t || "*") : "undefined" != typeof e.querySelectorAll ? e.querySelectorAll(t || "*") : []), void 0 === t || (t && fe(e, t)) ? ce.merge([e], n) : n;
    }
    function Ee(e, t) {
        for (var n = 0, r = e.length; n < r; n++) _.set(e[n], "globalEval", !t || _.get(t[n], "globalEval"));
    }
    (ke.tbody = ke.tfoot = ke.colgroup = ke.caption = ke.thead), (ke.th = ke.td), le.option || (ke.optgroup = ke.option = [1, "<select multiple='multiple'>", "</select>"]);
    var je = /<|&#?\w+;/;
    function Ae(e, t, n, r, i) {
        for (var o, a, s, u, l, c, f = t.createDocumentFragment(), p = [], d = 0, h = e.length; d < h; d++)
            if ((o = e[d]) || 0 === o)
                if ("object" === x(o)) ce.merge(p, o.nodeType ? [o] : o);
                else if (je.test(o)) {
                    (a = a || f.appendChild(t.createElement("div"))), (s = (Te.exec(o) || ["", ""])[1].toLowerCase()), (u = ke[s] || ke._default), (a.innerHTML = u[1] + ce.htmlPrefilter(o) + u[2]), (c = u[0]);
                    while (c--) a = a.lastChild;
                    ce.merge(p, a.childNodes), ((a = f.firstChild).textContent = "");
                } else p.push(t.createTextNode(o));
        (f.textContent = ""), (d = 0);
        while ((o = p[d++]))
            if (r && -1 < ce.inArray(o, r)) i && i.push(o);
            else if (((l = K(o)), (a = Se(f.appendChild(o), "script")), l && Ee(a), n)) {
                c = 0;
                while ((o = a[c++])) Ce.test(o.type || "") && n.push(o);
            }
        return f;
    }
    var De = /^([^.]*)(?:\.(.+)|)/;
    function Ne() {
        return !0;
    }
    function qe() {
        return !1;
    }
    function Le(e, t, n, r, i, o) {
        var a, s;
        if ("object" == typeof t) {
            for (s in ("string" != typeof n && ((r = r || n), (n = void 0)), t)) Le(e, s, n, r, t[s], o);
            return e;
        }
        if ((null == r && null == i ? ((i = n), (r = n = void 0)) : null == i && ("string" == typeof n ? ((i = r), (r = void 0)) : ((i = r), (r = n), (n = void 0))), !1 === i)) i = qe;
        else if (!i) return e;
        return (
            1 === o &&
            ((a = i),
                ((i = function (e) {
                    return ce().off(e), a.apply(this, arguments);
                }).guid = a.guid || (a.guid = ce.guid++))),
                e.each(function () {
                    ce.event.add(this, t, i, r, n);
                })
        );
    }
    function He(e, r, t) {
        t
            ? (_.set(e, r, !1),
                ce.event.add(e, r, {
                    namespace: !1,
                    handler: function (e) {
                        var t,
                            n = _.get(this, r);
                        if (1 & e.isTrigger && this[r]) {
                            if (n) (ce.event.special[r] || {}).delegateType && e.stopPropagation();
                            else if (((n = ae.call(arguments)), _.set(this, r, n), this[r](), (t = _.get(this, r)), _.set(this, r, !1), n !== t)) return e.stopImmediatePropagation(), e.preventDefault(), t;
                        } else n && (_.set(this, r, ce.event.trigger(n[0], n.slice(1), this)), e.stopPropagation(), (e.isImmediatePropagationStopped = Ne));
                    },
                }))
            : void 0 === _.get(e, r) && ce.event.add(e, r, Ne);
    }
    (ce.event = {
        global: {},
        add: function (t, e, n, r, i) {
            var o,
                a,
                s,
                u,
                l,
                c,
                f,
                p,
                d,
                h,
                g,
                v = _.get(t);
            if ($(t)) {
                n.handler && ((n = (o = n).handler), (i = o.selector)),
                i && ce.find.matchesSelector(J, i),
                n.guid || (n.guid = ce.guid++),
                (u = v.events) || (u = v.events = Object.create(null)),
                (a = v.handle) ||
                (a = v.handle = function (e) {
                    return "undefined" != typeof ce && ce.event.triggered !== e.type ? ce.event.dispatch.apply(t, arguments) : void 0;
                }),
                    (l = (e = (e || "").match(D) || [""]).length);
                while (l--)
                    (d = g = (s = De.exec(e[l]) || [])[1]),
                        (h = (s[2] || "").split(".").sort()),
                    d &&
                    ((f = ce.event.special[d] || {}),
                        (d = (i ? f.delegateType : f.bindType) || d),
                        (f = ce.event.special[d] || {}),
                        (c = ce.extend({ type: d, origType: g, data: r, handler: n, guid: n.guid, selector: i, needsContext: i && ce.expr.match.needsContext.test(i), namespace: h.join(".") }, o)),
                    (p = u[d]) || (((p = u[d] = []).delegateCount = 0), (f.setup && !1 !== f.setup.call(t, r, h, a)) || (t.addEventListener && t.addEventListener(d, a))),
                    f.add && (f.add.call(t, c), c.handler.guid || (c.handler.guid = n.guid)),
                        i ? p.splice(p.delegateCount++, 0, c) : p.push(c),
                        (ce.event.global[d] = !0));
            }
        },
        remove: function (e, t, n, r, i) {
            var o,
                a,
                s,
                u,
                l,
                c,
                f,
                p,
                d,
                h,
                g,
                v = _.hasData(e) && _.get(e);
            if (v && (u = v.events)) {
                l = (t = (t || "").match(D) || [""]).length;
                while (l--)
                    if (((d = g = (s = De.exec(t[l]) || [])[1]), (h = (s[2] || "").split(".").sort()), d)) {
                        (f = ce.event.special[d] || {}), (p = u[(d = (r ? f.delegateType : f.bindType) || d)] || []), (s = s[2] && new RegExp("(^|\\.)" + h.join("\\.(?:.*\\.|)") + "(\\.|$)")), (a = o = p.length);
                        while (o--)
                            (c = p[o]),
                            (!i && g !== c.origType) ||
                            (n && n.guid !== c.guid) ||
                            (s && !s.test(c.namespace)) ||
                            (r && r !== c.selector && ("**" !== r || !c.selector)) ||
                            (p.splice(o, 1), c.selector && p.delegateCount--, f.remove && f.remove.call(e, c));
                        a && !p.length && ((f.teardown && !1 !== f.teardown.call(e, h, v.handle)) || ce.removeEvent(e, d, v.handle), delete u[d]);
                    } else for (d in u) ce.event.remove(e, d + t[l], n, r, !0);
                ce.isEmptyObject(u) && _.remove(e, "handle events");
            }
        },
        dispatch: function (e) {
            var t,
                n,
                r,
                i,
                o,
                a,
                s = new Array(arguments.length),
                u = ce.event.fix(e),
                l = (_.get(this, "events") || Object.create(null))[u.type] || [],
                c = ce.event.special[u.type] || {};
            for (s[0] = u, t = 1; t < arguments.length; t++) s[t] = arguments[t];
            if (((u.delegateTarget = this), !c.preDispatch || !1 !== c.preDispatch.call(this, u))) {
                (a = ce.event.handlers.call(this, u, l)), (t = 0);
                while ((i = a[t++]) && !u.isPropagationStopped()) {
                    (u.currentTarget = i.elem), (n = 0);
                    while ((o = i.handlers[n++]) && !u.isImmediatePropagationStopped())
                        (u.rnamespace && !1 !== o.namespace && !u.rnamespace.test(o.namespace)) ||
                        ((u.handleObj = o), (u.data = o.data), void 0 !== (r = ((ce.event.special[o.origType] || {}).handle || o.handler).apply(i.elem, s)) && !1 === (u.result = r) && (u.preventDefault(), u.stopPropagation()));
                }
                return c.postDispatch && c.postDispatch.call(this, u), u.result;
            }
        },
        handlers: function (e, t) {
            var n,
                r,
                i,
                o,
                a,
                s = [],
                u = t.delegateCount,
                l = e.target;
            if (u && l.nodeType && !("click" === e.type && 1 <= e.button))
                for (; l !== this; l = l.parentNode || this)
                    if (1 === l.nodeType && ("click" !== e.type || !0 !== l.disabled)) {
                        for (o = [], a = {}, n = 0; n < u; n++) void 0 === a[(i = (r = t[n]).selector + " ")] && (a[i] = r.needsContext ? -1 < ce(i, this).index(l) : ce.find(i, this, null, [l]).length), a[i] && o.push(r);
                        o.length && s.push({ elem: l, handlers: o });
                    }
            return (l = this), u < t.length && s.push({ elem: l, handlers: t.slice(u) }), s;
        },
        addProp: function (t, e) {
            Object.defineProperty(ce.Event.prototype, t, {
                enumerable: !0,
                configurable: !0,
                get: v(e)
                    ? function () {
                        if (this.originalEvent) return e(this.originalEvent);
                    }
                    : function () {
                        if (this.originalEvent) return this.originalEvent[t];
                    },
                set: function (e) {
                    Object.defineProperty(this, t, { enumerable: !0, configurable: !0, writable: !0, value: e });
                },
            });
        },
        fix: function (e) {
            return e[ce.expando] ? e : new ce.Event(e);
        },
        special: {
            load: { noBubble: !0 },
            click: {
                setup: function (e) {
                    var t = this || e;
                    return we.test(t.type) && t.click && fe(t, "input") && He(t, "click", !0), !1;
                },
                trigger: function (e) {
                    var t = this || e;
                    return we.test(t.type) && t.click && fe(t, "input") && He(t, "click"), !0;
                },
                _default: function (e) {
                    var t = e.target;
                    return (we.test(t.type) && t.click && fe(t, "input") && _.get(t, "click")) || fe(t, "a");
                },
            },
            beforeunload: {
                postDispatch: function (e) {
                    void 0 !== e.result && e.originalEvent && (e.originalEvent.returnValue = e.result);
                },
            },
        },
    }),
        (ce.removeEvent = function (e, t, n) {
            e.removeEventListener && e.removeEventListener(t, n);
        }),
        (ce.Event = function (e, t) {
            if (!(this instanceof ce.Event)) return new ce.Event(e, t);
            e && e.type
                ? ((this.originalEvent = e),
                    (this.type = e.type),
                    (this.isDefaultPrevented = e.defaultPrevented || (void 0 === e.defaultPrevented && !1 === e.returnValue) ? Ne : qe),
                    (this.target = e.target && 3 === e.target.nodeType ? e.target.parentNode : e.target),
                    (this.currentTarget = e.currentTarget),
                    (this.relatedTarget = e.relatedTarget))
                : (this.type = e),
            t && ce.extend(this, t),
                (this.timeStamp = (e && e.timeStamp) || Date.now()),
                (this[ce.expando] = !0);
        }),
        (ce.Event.prototype = {
            constructor: ce.Event,
            isDefaultPrevented: qe,
            isPropagationStopped: qe,
            isImmediatePropagationStopped: qe,
            isSimulated: !1,
            preventDefault: function () {
                var e = this.originalEvent;
                (this.isDefaultPrevented = Ne), e && !this.isSimulated && e.preventDefault();
            },
            stopPropagation: function () {
                var e = this.originalEvent;
                (this.isPropagationStopped = Ne), e && !this.isSimulated && e.stopPropagation();
            },
            stopImmediatePropagation: function () {
                var e = this.originalEvent;
                (this.isImmediatePropagationStopped = Ne), e && !this.isSimulated && e.stopImmediatePropagation(), this.stopPropagation();
            },
        }),
        ce.each(
            {
                altKey: !0,
                bubbles: !0,
                cancelable: !0,
                changedTouches: !0,
                ctrlKey: !0,
                detail: !0,
                eventPhase: !0,
                metaKey: !0,
                pageX: !0,
                pageY: !0,
                shiftKey: !0,
                view: !0,
                char: !0,
                code: !0,
                charCode: !0,
                key: !0,
                keyCode: !0,
                button: !0,
                buttons: !0,
                clientX: !0,
                clientY: !0,
                offsetX: !0,
                offsetY: !0,
                pointerId: !0,
                pointerType: !0,
                screenX: !0,
                screenY: !0,
                targetTouches: !0,
                toElement: !0,
                touches: !0,
                which: !0,
            },
            ce.event.addProp
        ),
        ce.each({ focus: "focusin", blur: "focusout" }, function (r, i) {
            function o(e) {
                if (C.documentMode) {
                    var t = _.get(this, "handle"),
                        n = ce.event.fix(e);
                    (n.type = "focusin" === e.type ? "focus" : "blur"), (n.isSimulated = !0), t(e), n.target === n.currentTarget && t(n);
                } else ce.event.simulate(i, e.target, ce.event.fix(e));
            }
            (ce.event.special[r] = {
                setup: function () {
                    var e;
                    if ((He(this, r, !0), !C.documentMode)) return !1;
                    (e = _.get(this, i)) || this.addEventListener(i, o), _.set(this, i, (e || 0) + 1);
                },
                trigger: function () {
                    return He(this, r), !0;
                },
                teardown: function () {
                    var e;
                    if (!C.documentMode) return !1;
                    (e = _.get(this, i) - 1) ? _.set(this, i, e) : (this.removeEventListener(i, o), _.remove(this, i));
                },
                _default: function (e) {
                    return _.get(e.target, r);
                },
                delegateType: i,
            }),
                (ce.event.special[i] = {
                    setup: function () {
                        var e = this.ownerDocument || this.document || this,
                            t = C.documentMode ? this : e,
                            n = _.get(t, i);
                        n || (C.documentMode ? this.addEventListener(i, o) : e.addEventListener(r, o, !0)), _.set(t, i, (n || 0) + 1);
                    },
                    teardown: function () {
                        var e = this.ownerDocument || this.document || this,
                            t = C.documentMode ? this : e,
                            n = _.get(t, i) - 1;
                        n ? _.set(t, i, n) : (C.documentMode ? this.removeEventListener(i, o) : e.removeEventListener(r, o, !0), _.remove(t, i));
                    },
                });
        }),
        ce.each({ mouseenter: "mouseover", mouseleave: "mouseout", pointerenter: "pointerover", pointerleave: "pointerout" }, function (e, i) {
            ce.event.special[e] = {
                delegateType: i,
                bindType: i,
                handle: function (e) {
                    var t,
                        n = e.relatedTarget,
                        r = e.handleObj;
                    return (n && (n === this || ce.contains(this, n))) || ((e.type = r.origType), (t = r.handler.apply(this, arguments)), (e.type = i)), t;
                },
            };
        }),
        ce.fn.extend({
            on: function (e, t, n, r) {
                return Le(this, e, t, n, r);
            },
            one: function (e, t, n, r) {
                return Le(this, e, t, n, r, 1);
            },
            off: function (e, t, n) {
                var r, i;
                if (e && e.preventDefault && e.handleObj) return (r = e.handleObj), ce(e.delegateTarget).off(r.namespace ? r.origType + "." + r.namespace : r.origType, r.selector, r.handler), this;
                if ("object" == typeof e) {
                    for (i in e) this.off(i, t, e[i]);
                    return this;
                }
                return (
                    (!1 !== t && "function" != typeof t) || ((n = t), (t = void 0)),
                    !1 === n && (n = qe),
                        this.each(function () {
                            ce.event.remove(this, e, n, t);
                        })
                );
            },
        });
    var Oe = /<script|<style|<link/i,
        Pe = /checked\s*(?:[^=]|=\s*.checked.)/i,
        Me = /^\s*<!\[CDATA\[|\]\]>\s*$/g;
    function Re(e, t) {
        return (fe(e, "table") && fe(11 !== t.nodeType ? t : t.firstChild, "tr") && ce(e).children("tbody")[0]) || e;
    }
    function Ie(e) {
        return (e.type = (null !== e.getAttribute("type")) + "/" + e.type), e;
    }
    function We(e) {
        return "true/" === (e.type || "").slice(0, 5) ? (e.type = e.type.slice(5)) : e.removeAttribute("type"), e;
    }
    function Fe(e, t) {
        var n, r, i, o, a, s;
        if (1 === t.nodeType) {
            if (_.hasData(e) && (s = _.get(e).events)) for (i in (_.remove(t, "handle events"), s)) for (n = 0, r = s[i].length; n < r; n++) ce.event.add(t, i, s[i][n]);
            z.hasData(e) && ((o = z.access(e)), (a = ce.extend({}, o)), z.set(t, a));
        }
    }
    function $e(n, r, i, o) {
        r = g(r);
        var e,
            t,
            a,
            s,
            u,
            l,
            c = 0,
            f = n.length,
            p = f - 1,
            d = r[0],
            h = v(d);
        if (h || (1 < f && "string" == typeof d && !le.checkClone && Pe.test(d)))
            return n.each(function (e) {
                var t = n.eq(e);
                h && (r[0] = d.call(this, e, t.html())), $e(t, r, i, o);
            });
        if (f && ((t = (e = Ae(r, n[0].ownerDocument, !1, n, o)).firstChild), 1 === e.childNodes.length && (e = t), t || o)) {
            for (s = (a = ce.map(Se(e, "script"), Ie)).length; c < f; c++) (u = e), c !== p && ((u = ce.clone(u, !0, !0)), s && ce.merge(a, Se(u, "script"))), i.call(n[c], u, c);
            if (s)
                for (l = a[a.length - 1].ownerDocument, ce.map(a, We), c = 0; c < s; c++)
                    (u = a[c]),
                    Ce.test(u.type || "") &&
                    !_.access(u, "globalEval") &&
                    ce.contains(l, u) &&
                    (u.src && "module" !== (u.type || "").toLowerCase() ? ce._evalUrl && !u.noModule && ce._evalUrl(u.src, { nonce: u.nonce || u.getAttribute("nonce") }, l) : m(u.textContent.replace(Me, ""), u, l));
        }
        return n;
    }
    function Be(e, t, n) {
        for (var r, i = t ? ce.filter(t, e) : e, o = 0; null != (r = i[o]); o++) n || 1 !== r.nodeType || ce.cleanData(Se(r)), r.parentNode && (n && K(r) && Ee(Se(r, "script")), r.parentNode.removeChild(r));
        return e;
    }
    ce.extend({
        htmlPrefilter: function (e) {
            return e;
        },
        clone: function (e, t, n) {
            var r,
                i,
                o,
                a,
                s,
                u,
                l,
                c = e.cloneNode(!0),
                f = K(e);
            if (!(le.noCloneChecked || (1 !== e.nodeType && 11 !== e.nodeType) || ce.isXMLDoc(e)))
                for (a = Se(c), r = 0, i = (o = Se(e)).length; r < i; r++)
                    (s = o[r]), (u = a[r]), void 0, "input" === (l = u.nodeName.toLowerCase()) && we.test(s.type) ? (u.checked = s.checked) : ("input" !== l && "textarea" !== l) || (u.defaultValue = s.defaultValue);
            if (t)
                if (n) for (o = o || Se(e), a = a || Se(c), r = 0, i = o.length; r < i; r++) Fe(o[r], a[r]);
                else Fe(e, c);
            return 0 < (a = Se(c, "script")).length && Ee(a, !f && Se(e, "script")), c;
        },
        cleanData: function (e) {
            for (var t, n, r, i = ce.event.special, o = 0; void 0 !== (n = e[o]); o++)
                if ($(n)) {
                    if ((t = n[_.expando])) {
                        if (t.events) for (r in t.events) i[r] ? ce.event.remove(n, r) : ce.removeEvent(n, r, t.handle);
                        n[_.expando] = void 0;
                    }
                    n[z.expando] && (n[z.expando] = void 0);
                }
        },
    }),
        ce.fn.extend({
            detach: function (e) {
                return Be(this, e, !0);
            },
            remove: function (e) {
                return Be(this, e);
            },
            text: function (e) {
                return M(
                    this,
                    function (e) {
                        return void 0 === e
                            ? ce.text(this)
                            : this.empty().each(function () {
                                (1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType) || (this.textContent = e);
                            });
                    },
                    null,
                    e,
                    arguments.length
                );
            },
            append: function () {
                return $e(this, arguments, function (e) {
                    (1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType) || Re(this, e).appendChild(e);
                });
            },
            prepend: function () {
                return $e(this, arguments, function (e) {
                    if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                        var t = Re(this, e);
                        t.insertBefore(e, t.firstChild);
                    }
                });
            },
            before: function () {
                return $e(this, arguments, function (e) {
                    this.parentNode && this.parentNode.insertBefore(e, this);
                });
            },
            after: function () {
                return $e(this, arguments, function (e) {
                    this.parentNode && this.parentNode.insertBefore(e, this.nextSibling);
                });
            },
            empty: function () {
                for (var e, t = 0; null != (e = this[t]); t++) 1 === e.nodeType && (ce.cleanData(Se(e, !1)), (e.textContent = ""));
                return this;
            },
            clone: function (e, t) {
                return (
                    (e = null != e && e),
                        (t = null == t ? e : t),
                        this.map(function () {
                            return ce.clone(this, e, t);
                        })
                );
            },
            html: function (e) {
                return M(
                    this,
                    function (e) {
                        var t = this[0] || {},
                            n = 0,
                            r = this.length;
                        if (void 0 === e && 1 === t.nodeType) return t.innerHTML;
                        if ("string" == typeof e && !Oe.test(e) && !ke[(Te.exec(e) || ["", ""])[1].toLowerCase()]) {
                            e = ce.htmlPrefilter(e);
                            try {
                                for (; n < r; n++) 1 === (t = this[n] || {}).nodeType && (ce.cleanData(Se(t, !1)), (t.innerHTML = e));
                                t = 0;
                            } catch (e) {}
                        }
                        t && this.empty().append(e);
                    },
                    null,
                    e,
                    arguments.length
                );
            },
            replaceWith: function () {
                var n = [];
                return $e(
                    this,
                    arguments,
                    function (e) {
                        var t = this.parentNode;
                        ce.inArray(this, n) < 0 && (ce.cleanData(Se(this)), t && t.replaceChild(e, this));
                    },
                    n
                );
            },
        }),
        ce.each({ appendTo: "append", prependTo: "prepend", insertBefore: "before", insertAfter: "after", replaceAll: "replaceWith" }, function (e, a) {
            ce.fn[e] = function (e) {
                for (var t, n = [], r = ce(e), i = r.length - 1, o = 0; o <= i; o++) (t = o === i ? this : this.clone(!0)), ce(r[o])[a](t), s.apply(n, t.get());
                return this.pushStack(n);
            };
        });
    var _e = new RegExp("^(" + G + ")(?!px)[a-z%]+$", "i"),
        ze = /^--/,
        Xe = function (e) {
            var t = e.ownerDocument.defaultView;
            return (t && t.opener) || (t = ie), t.getComputedStyle(e);
        },
        Ue = function (e, t, n) {
            var r,
                i,
                o = {};
            for (i in t) (o[i] = e.style[i]), (e.style[i] = t[i]);
            for (i in ((r = n.call(e)), t)) e.style[i] = o[i];
            return r;
        },
        Ve = new RegExp(Q.join("|"), "i");
    function Ge(e, t, n) {
        var r,
            i,
            o,
            a,
            s = ze.test(t),
            u = e.style;
        return (
            (n = n || Xe(e)) &&
            ((a = n.getPropertyValue(t) || n[t]),
            s && a && (a = a.replace(ve, "$1") || void 0),
            "" !== a || K(e) || (a = ce.style(e, t)),
            !le.pixelBoxStyles() && _e.test(a) && Ve.test(t) && ((r = u.width), (i = u.minWidth), (o = u.maxWidth), (u.minWidth = u.maxWidth = u.width = a), (a = n.width), (u.width = r), (u.minWidth = i), (u.maxWidth = o))),
                void 0 !== a ? a + "" : a
        );
    }
    function Ye(e, t) {
        return {
            get: function () {
                if (!e()) return (this.get = t).apply(this, arguments);
                delete this.get;
            },
        };
    }
    !(function () {
        function e() {
            if (l) {
                (u.style.cssText = "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0"),
                    (l.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%"),
                    J.appendChild(u).appendChild(l);
                var e = ie.getComputedStyle(l);
                (n = "1%" !== e.top), (s = 12 === t(e.marginLeft)), (l.style.right = "60%"), (o = 36 === t(e.right)), (r = 36 === t(e.width)), (l.style.position = "absolute"), (i = 12 === t(l.offsetWidth / 3)), J.removeChild(u), (l = null);
            }
        }
        function t(e) {
            return Math.round(parseFloat(e));
        }
        var n,
            r,
            i,
            o,
            a,
            s,
            u = C.createElement("div"),
            l = C.createElement("div");
        l.style &&
        ((l.style.backgroundClip = "content-box"),
            (l.cloneNode(!0).style.backgroundClip = ""),
            (le.clearCloneStyle = "content-box" === l.style.backgroundClip),
            ce.extend(le, {
                boxSizingReliable: function () {
                    return e(), r;
                },
                pixelBoxStyles: function () {
                    return e(), o;
                },
                pixelPosition: function () {
                    return e(), n;
                },
                reliableMarginLeft: function () {
                    return e(), s;
                },
                scrollboxSize: function () {
                    return e(), i;
                },
                reliableTrDimensions: function () {
                    var e, t, n, r;
                    return (
                        null == a &&
                        ((e = C.createElement("table")),
                            (t = C.createElement("tr")),
                            (n = C.createElement("div")),
                            (e.style.cssText = "position:absolute;left:-11111px;border-collapse:separate"),
                            (t.style.cssText = "box-sizing:content-box;border:1px solid"),
                            (t.style.height = "1px"),
                            (n.style.height = "9px"),
                            (n.style.display = "block"),
                            J.appendChild(e).appendChild(t).appendChild(n),
                            (r = ie.getComputedStyle(t)),
                            (a = parseInt(r.height, 10) + parseInt(r.borderTopWidth, 10) + parseInt(r.borderBottomWidth, 10) === t.offsetHeight),
                            J.removeChild(e)),
                            a
                    );
                },
            }));
    })();
    var Qe = ["Webkit", "Moz", "ms"],
        Je = C.createElement("div").style,
        Ke = {};
    function Ze(e) {
        var t = ce.cssProps[e] || Ke[e];
        return (
            t ||
            (e in Je
                ? e
                : (Ke[e] =
                    (function (e) {
                        var t = e[0].toUpperCase() + e.slice(1),
                            n = Qe.length;
                        while (n--) if ((e = Qe[n] + t) in Je) return e;
                    })(e) || e))
        );
    }
    var et = /^(none|table(?!-c[ea]).+)/,
        tt = { position: "absolute", visibility: "hidden", display: "block" },
        nt = { letterSpacing: "0", fontWeight: "400" };
    function rt(e, t, n) {
        var r = Y.exec(t);
        return r ? Math.max(0, r[2] - (n || 0)) + (r[3] || "px") : t;
    }
    function it(e, t, n, r, i, o) {
        var a = "width" === t ? 1 : 0,
            s = 0,
            u = 0,
            l = 0;
        if (n === (r ? "border" : "content")) return 0;
        for (; a < 4; a += 2)
            "margin" === n && (l += ce.css(e, n + Q[a], !0, i)),
                r
                    ? ("content" === n && (u -= ce.css(e, "padding" + Q[a], !0, i)), "margin" !== n && (u -= ce.css(e, "border" + Q[a] + "Width", !0, i)))
                    : ((u += ce.css(e, "padding" + Q[a], !0, i)), "padding" !== n ? (u += ce.css(e, "border" + Q[a] + "Width", !0, i)) : (s += ce.css(e, "border" + Q[a] + "Width", !0, i)));
        return !r && 0 <= o && (u += Math.max(0, Math.ceil(e["offset" + t[0].toUpperCase() + t.slice(1)] - o - u - s - 0.5)) || 0), u + l;
    }
    function ot(e, t, n) {
        var r = Xe(e),
            i = (!le.boxSizingReliable() || n) && "border-box" === ce.css(e, "boxSizing", !1, r),
            o = i,
            a = Ge(e, t, r),
            s = "offset" + t[0].toUpperCase() + t.slice(1);
        if (_e.test(a)) {
            if (!n) return a;
            a = "auto";
        }
        return (
            ((!le.boxSizingReliable() && i) || (!le.reliableTrDimensions() && fe(e, "tr")) || "auto" === a || (!parseFloat(a) && "inline" === ce.css(e, "display", !1, r))) &&
            e.getClientRects().length &&
            ((i = "border-box" === ce.css(e, "boxSizing", !1, r)), (o = s in e) && (a = e[s])),
            (a = parseFloat(a) || 0) + it(e, t, n || (i ? "border" : "content"), o, r, a) + "px"
        );
    }
    function at(e, t, n, r, i) {
        return new at.prototype.init(e, t, n, r, i);
    }
    ce.extend({
        cssHooks: {
            opacity: {
                get: function (e, t) {
                    if (t) {
                        var n = Ge(e, "opacity");
                        return "" === n ? "1" : n;
                    }
                },
            },
        },
        cssNumber: {
            animationIterationCount: !0,
            aspectRatio: !0,
            borderImageSlice: !0,
            columnCount: !0,
            flexGrow: !0,
            flexShrink: !0,
            fontWeight: !0,
            gridArea: !0,
            gridColumn: !0,
            gridColumnEnd: !0,
            gridColumnStart: !0,
            gridRow: !0,
            gridRowEnd: !0,
            gridRowStart: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            scale: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0,
            fillOpacity: !0,
            floodOpacity: !0,
            stopOpacity: !0,
            strokeMiterlimit: !0,
            strokeOpacity: !0,
        },
        cssProps: {},
        style: function (e, t, n, r) {
            if (e && 3 !== e.nodeType && 8 !== e.nodeType && e.style) {
                var i,
                    o,
                    a,
                    s = F(t),
                    u = ze.test(t),
                    l = e.style;
                if ((u || (t = Ze(s)), (a = ce.cssHooks[t] || ce.cssHooks[s]), void 0 === n)) return a && "get" in a && void 0 !== (i = a.get(e, !1, r)) ? i : l[t];
                "string" === (o = typeof n) && (i = Y.exec(n)) && i[1] && ((n = te(e, t, i)), (o = "number")),
                null != n &&
                n == n &&
                ("number" !== o || u || (n += (i && i[3]) || (ce.cssNumber[s] ? "" : "px")),
                le.clearCloneStyle || "" !== n || 0 !== t.indexOf("background") || (l[t] = "inherit"),
                (a && "set" in a && void 0 === (n = a.set(e, n, r))) || (u ? l.setProperty(t, n) : (l[t] = n)));
            }
        },
        css: function (e, t, n, r) {
            var i,
                o,
                a,
                s = F(t);
            return (
                ze.test(t) || (t = Ze(s)),
                (a = ce.cssHooks[t] || ce.cssHooks[s]) && "get" in a && (i = a.get(e, !0, n)),
                void 0 === i && (i = Ge(e, t, r)),
                "normal" === i && t in nt && (i = nt[t]),
                    "" === n || n ? ((o = parseFloat(i)), !0 === n || isFinite(o) ? o || 0 : i) : i
            );
        },
    }),
        ce.each(["height", "width"], function (e, u) {
            ce.cssHooks[u] = {
                get: function (e, t, n) {
                    if (t)
                        return !et.test(ce.css(e, "display")) || (e.getClientRects().length && e.getBoundingClientRect().width)
                            ? ot(e, u, n)
                            : Ue(e, tt, function () {
                                return ot(e, u, n);
                            });
                },
                set: function (e, t, n) {
                    var r,
                        i = Xe(e),
                        o = !le.scrollboxSize() && "absolute" === i.position,
                        a = (o || n) && "border-box" === ce.css(e, "boxSizing", !1, i),
                        s = n ? it(e, u, n, a, i) : 0;
                    return (
                        a && o && (s -= Math.ceil(e["offset" + u[0].toUpperCase() + u.slice(1)] - parseFloat(i[u]) - it(e, u, "border", !1, i) - 0.5)),
                        s && (r = Y.exec(t)) && "px" !== (r[3] || "px") && ((e.style[u] = t), (t = ce.css(e, u))),
                            rt(0, t, s)
                    );
                },
            };
        }),
        (ce.cssHooks.marginLeft = Ye(le.reliableMarginLeft, function (e, t) {
            if (t)
                return (
                    (parseFloat(Ge(e, "marginLeft")) ||
                        e.getBoundingClientRect().left -
                        Ue(e, { marginLeft: 0 }, function () {
                            return e.getBoundingClientRect().left;
                        })) + "px"
                );
        })),
        ce.each({ margin: "", padding: "", border: "Width" }, function (i, o) {
            (ce.cssHooks[i + o] = {
                expand: function (e) {
                    for (var t = 0, n = {}, r = "string" == typeof e ? e.split(" ") : [e]; t < 4; t++) n[i + Q[t] + o] = r[t] || r[t - 2] || r[0];
                    return n;
                },
            }),
            "margin" !== i && (ce.cssHooks[i + o].set = rt);
        }),
        ce.fn.extend({
            css: function (e, t) {
                return M(
                    this,
                    function (e, t, n) {
                        var r,
                            i,
                            o = {},
                            a = 0;
                        if (Array.isArray(t)) {
                            for (r = Xe(e), i = t.length; a < i; a++) o[t[a]] = ce.css(e, t[a], !1, r);
                            return o;
                        }
                        return void 0 !== n ? ce.style(e, t, n) : ce.css(e, t);
                    },
                    e,
                    t,
                    1 < arguments.length
                );
            },
        }),
        (((ce.Tween = at).prototype = {
            constructor: at,
            init: function (e, t, n, r, i, o) {
                (this.elem = e), (this.prop = n), (this.easing = i || ce.easing._default), (this.options = t), (this.start = this.now = this.cur()), (this.end = r), (this.unit = o || (ce.cssNumber[n] ? "" : "px"));
            },
            cur: function () {
                var e = at.propHooks[this.prop];
                return e && e.get ? e.get(this) : at.propHooks._default.get(this);
            },
            run: function (e) {
                var t,
                    n = at.propHooks[this.prop];
                return (
                    this.options.duration ? (this.pos = t = ce.easing[this.easing](e, this.options.duration * e, 0, 1, this.options.duration)) : (this.pos = t = e),
                        (this.now = (this.end - this.start) * t + this.start),
                    this.options.step && this.options.step.call(this.elem, this.now, this),
                        n && n.set ? n.set(this) : at.propHooks._default.set(this),
                        this
                );
            },
        }).init.prototype = at.prototype),
        ((at.propHooks = {
            _default: {
                get: function (e) {
                    var t;
                    return 1 !== e.elem.nodeType || (null != e.elem[e.prop] && null == e.elem.style[e.prop]) ? e.elem[e.prop] : (t = ce.css(e.elem, e.prop, "")) && "auto" !== t ? t : 0;
                },
                set: function (e) {
                    ce.fx.step[e.prop] ? ce.fx.step[e.prop](e) : 1 !== e.elem.nodeType || (!ce.cssHooks[e.prop] && null == e.elem.style[Ze(e.prop)]) ? (e.elem[e.prop] = e.now) : ce.style(e.elem, e.prop, e.now + e.unit);
                },
            },
        }).scrollTop = at.propHooks.scrollLeft = {
            set: function (e) {
                e.elem.nodeType && e.elem.parentNode && (e.elem[e.prop] = e.now);
            },
        }),
        (ce.easing = {
            linear: function (e) {
                return e;
            },
            swing: function (e) {
                return 0.5 - Math.cos(e * Math.PI) / 2;
            },
            _default: "swing",
        }),
        (ce.fx = at.prototype.init),
        (ce.fx.step = {});
    var st,
        ut,
        lt,
        ct,
        ft = /^(?:toggle|show|hide)$/,
        pt = /queueHooks$/;
    function dt() {
        ut && (!1 === C.hidden && ie.requestAnimationFrame ? ie.requestAnimationFrame(dt) : ie.setTimeout(dt, ce.fx.interval), ce.fx.tick());
    }
    function ht() {
        return (
            ie.setTimeout(function () {
                st = void 0;
            }),
                (st = Date.now())
        );
    }
    function gt(e, t) {
        var n,
            r = 0,
            i = { height: e };
        for (t = t ? 1 : 0; r < 4; r += 2 - t) i["margin" + (n = Q[r])] = i["padding" + n] = e;
        return t && (i.opacity = i.width = e), i;
    }
    function vt(e, t, n) {
        for (var r, i = (yt.tweeners[t] || []).concat(yt.tweeners["*"]), o = 0, a = i.length; o < a; o++) if ((r = i[o].call(n, t, e))) return r;
    }
    function yt(o, e, t) {
        var n,
            a,
            r = 0,
            i = yt.prefilters.length,
            s = ce.Deferred().always(function () {
                delete u.elem;
            }),
            u = function () {
                if (a) return !1;
                for (var e = st || ht(), t = Math.max(0, l.startTime + l.duration - e), n = 1 - (t / l.duration || 0), r = 0, i = l.tweens.length; r < i; r++) l.tweens[r].run(n);
                return s.notifyWith(o, [l, n, t]), n < 1 && i ? t : (i || s.notifyWith(o, [l, 1, 0]), s.resolveWith(o, [l]), !1);
            },
            l = s.promise({
                elem: o,
                props: ce.extend({}, e),
                opts: ce.extend(!0, { specialEasing: {}, easing: ce.easing._default }, t),
                originalProperties: e,
                originalOptions: t,
                startTime: st || ht(),
                duration: t.duration,
                tweens: [],
                createTween: function (e, t) {
                    var n = ce.Tween(o, l.opts, e, t, l.opts.specialEasing[e] || l.opts.easing);
                    return l.tweens.push(n), n;
                },
                stop: function (e) {
                    var t = 0,
                        n = e ? l.tweens.length : 0;
                    if (a) return this;
                    for (a = !0; t < n; t++) l.tweens[t].run(1);
                    return e ? (s.notifyWith(o, [l, 1, 0]), s.resolveWith(o, [l, e])) : s.rejectWith(o, [l, e]), this;
                },
            }),
            c = l.props;
        for (
            !(function (e, t) {
                var n, r, i, o, a;
                for (n in e)
                    if (((i = t[(r = F(n))]), (o = e[n]), Array.isArray(o) && ((i = o[1]), (o = e[n] = o[0])), n !== r && ((e[r] = o), delete e[n]), (a = ce.cssHooks[r]) && ("expand" in a)))
                        for (n in ((o = a.expand(o)), delete e[r], o)) (n in e) || ((e[n] = o[n]), (t[n] = i));
                    else t[r] = i;
            })(c, l.opts.specialEasing);
            r < i;
            r++
        )
            if ((n = yt.prefilters[r].call(l, o, c, l.opts))) return v(n.stop) && (ce._queueHooks(l.elem, l.opts.queue).stop = n.stop.bind(n)), n;
        return (
            ce.map(c, vt, l),
            v(l.opts.start) && l.opts.start.call(o, l),
                l.progress(l.opts.progress).done(l.opts.done, l.opts.complete).fail(l.opts.fail).always(l.opts.always),
                ce.fx.timer(ce.extend(u, { elem: o, anim: l, queue: l.opts.queue })),
                l
        );
    }
    (ce.Animation = ce.extend(yt, {
        tweeners: {
            "*": [
                function (e, t) {
                    var n = this.createTween(e, t);
                    return te(n.elem, e, Y.exec(t), n), n;
                },
            ],
        },
        tweener: function (e, t) {
            v(e) ? ((t = e), (e = ["*"])) : (e = e.match(D));
            for (var n, r = 0, i = e.length; r < i; r++) (n = e[r]), (yt.tweeners[n] = yt.tweeners[n] || []), yt.tweeners[n].unshift(t);
        },
        prefilters: [
            function (e, t, n) {
                var r,
                    i,
                    o,
                    a,
                    s,
                    u,
                    l,
                    c,
                    f = "width" in t || "height" in t,
                    p = this,
                    d = {},
                    h = e.style,
                    g = e.nodeType && ee(e),
                    v = _.get(e, "fxshow");
                for (r in (n.queue ||
                (null == (a = ce._queueHooks(e, "fx")).unqueued &&
                ((a.unqueued = 0),
                    (s = a.empty.fire),
                    (a.empty.fire = function () {
                        a.unqueued || s();
                    })),
                    a.unqueued++,
                    p.always(function () {
                        p.always(function () {
                            a.unqueued--, ce.queue(e, "fx").length || a.empty.fire();
                        });
                    })),
                    t))
                    if (((i = t[r]), ft.test(i))) {
                        if ((delete t[r], (o = o || "toggle" === i), i === (g ? "hide" : "show"))) {
                            if ("show" !== i || !v || void 0 === v[r]) continue;
                            g = !0;
                        }
                        d[r] = (v && v[r]) || ce.style(e, r);
                    }
                if ((u = !ce.isEmptyObject(t)) || !ce.isEmptyObject(d))
                    for (r in (f &&
                    1 === e.nodeType &&
                    ((n.overflow = [h.overflow, h.overflowX, h.overflowY]),
                    null == (l = v && v.display) && (l = _.get(e, "display")),
                    "none" === (c = ce.css(e, "display")) && (l ? (c = l) : (re([e], !0), (l = e.style.display || l), (c = ce.css(e, "display")), re([e]))),
                    ("inline" === c || ("inline-block" === c && null != l)) &&
                    "none" === ce.css(e, "float") &&
                    (u ||
                    (p.done(function () {
                        h.display = l;
                    }),
                    null == l && ((c = h.display), (l = "none" === c ? "" : c))),
                        (h.display = "inline-block"))),
                    n.overflow &&
                    ((h.overflow = "hidden"),
                        p.always(function () {
                            (h.overflow = n.overflow[0]), (h.overflowX = n.overflow[1]), (h.overflowY = n.overflow[2]);
                        })),
                        (u = !1),
                        d))
                        u ||
                        (v ? "hidden" in v && (g = v.hidden) : (v = _.access(e, "fxshow", { display: l })),
                        o && (v.hidden = !g),
                        g && re([e], !0),
                            p.done(function () {
                                for (r in (g || re([e]), _.remove(e, "fxshow"), d)) ce.style(e, r, d[r]);
                            })),
                            (u = vt(g ? v[r] : 0, r, p)),
                        r in v || ((v[r] = u.start), g && ((u.end = u.start), (u.start = 0)));
            },
        ],
        prefilter: function (e, t) {
            t ? yt.prefilters.unshift(e) : yt.prefilters.push(e);
        },
    })),
        (ce.speed = function (e, t, n) {
            var r = e && "object" == typeof e ? ce.extend({}, e) : { complete: n || (!n && t) || (v(e) && e), duration: e, easing: (n && t) || (t && !v(t) && t) };
            return (
                ce.fx.off ? (r.duration = 0) : "number" != typeof r.duration && (r.duration in ce.fx.speeds ? (r.duration = ce.fx.speeds[r.duration]) : (r.duration = ce.fx.speeds._default)),
                (null != r.queue && !0 !== r.queue) || (r.queue = "fx"),
                    (r.old = r.complete),
                    (r.complete = function () {
                        v(r.old) && r.old.call(this), r.queue && ce.dequeue(this, r.queue);
                    }),
                    r
            );
        }),
        ce.fn.extend({
            fadeTo: function (e, t, n, r) {
                return this.filter(ee).css("opacity", 0).show().end().animate({ opacity: t }, e, n, r);
            },
            animate: function (t, e, n, r) {
                var i = ce.isEmptyObject(t),
                    o = ce.speed(e, n, r),
                    a = function () {
                        var e = yt(this, ce.extend({}, t), o);
                        (i || _.get(this, "finish")) && e.stop(!0);
                    };
                return (a.finish = a), i || !1 === o.queue ? this.each(a) : this.queue(o.queue, a);
            },
            stop: function (i, e, o) {
                var a = function (e) {
                    var t = e.stop;
                    delete e.stop, t(o);
                };
                return (
                    "string" != typeof i && ((o = e), (e = i), (i = void 0)),
                    e && this.queue(i || "fx", []),
                        this.each(function () {
                            var e = !0,
                                t = null != i && i + "queueHooks",
                                n = ce.timers,
                                r = _.get(this);
                            if (t) r[t] && r[t].stop && a(r[t]);
                            else for (t in r) r[t] && r[t].stop && pt.test(t) && a(r[t]);
                            for (t = n.length; t--; ) n[t].elem !== this || (null != i && n[t].queue !== i) || (n[t].anim.stop(o), (e = !1), n.splice(t, 1));
                            (!e && o) || ce.dequeue(this, i);
                        })
                );
            },
            finish: function (a) {
                return (
                    !1 !== a && (a = a || "fx"),
                        this.each(function () {
                            var e,
                                t = _.get(this),
                                n = t[a + "queue"],
                                r = t[a + "queueHooks"],
                                i = ce.timers,
                                o = n ? n.length : 0;
                            for (t.finish = !0, ce.queue(this, a, []), r && r.stop && r.stop.call(this, !0), e = i.length; e--; ) i[e].elem === this && i[e].queue === a && (i[e].anim.stop(!0), i.splice(e, 1));
                            for (e = 0; e < o; e++) n[e] && n[e].finish && n[e].finish.call(this);
                            delete t.finish;
                        })
                );
            },
        }),
        ce.each(["toggle", "show", "hide"], function (e, r) {
            var i = ce.fn[r];
            ce.fn[r] = function (e, t, n) {
                return null == e || "boolean" == typeof e ? i.apply(this, arguments) : this.animate(gt(r, !0), e, t, n);
            };
        }),
        ce.each({ slideDown: gt("show"), slideUp: gt("hide"), slideToggle: gt("toggle"), fadeIn: { opacity: "show" }, fadeOut: { opacity: "hide" }, fadeToggle: { opacity: "toggle" } }, function (e, r) {
            ce.fn[e] = function (e, t, n) {
                return this.animate(r, e, t, n);
            };
        }),
        (ce.timers = []),
        (ce.fx.tick = function () {
            var e,
                t = 0,
                n = ce.timers;
            for (st = Date.now(); t < n.length; t++) (e = n[t])() || n[t] !== e || n.splice(t--, 1);
            n.length || ce.fx.stop(), (st = void 0);
        }),
        (ce.fx.timer = function (e) {
            ce.timers.push(e), ce.fx.start();
        }),
        (ce.fx.interval = 13),
        (ce.fx.start = function () {
            ut || ((ut = !0), dt());
        }),
        (ce.fx.stop = function () {
            ut = null;
        }),
        (ce.fx.speeds = { slow: 600, fast: 200, _default: 400 }),
        (ce.fn.delay = function (r, e) {
            return (
                (r = (ce.fx && ce.fx.speeds[r]) || r),
                    (e = e || "fx"),
                    this.queue(e, function (e, t) {
                        var n = ie.setTimeout(e, r);
                        t.stop = function () {
                            ie.clearTimeout(n);
                        };
                    })
            );
        }),
        (lt = C.createElement("input")),
        (ct = C.createElement("select").appendChild(C.createElement("option"))),
        (lt.type = "checkbox"),
        (le.checkOn = "" !== lt.value),
        (le.optSelected = ct.selected),
        ((lt = C.createElement("input")).value = "t"),
        (lt.type = "radio"),
        (le.radioValue = "t" === lt.value);
    var mt,
        xt = ce.expr.attrHandle;
    ce.fn.extend({
        attr: function (e, t) {
            return M(this, ce.attr, e, t, 1 < arguments.length);
        },
        removeAttr: function (e) {
            return this.each(function () {
                ce.removeAttr(this, e);
            });
        },
    }),
        ce.extend({
            attr: function (e, t, n) {
                var r,
                    i,
                    o = e.nodeType;
                if (3 !== o && 8 !== o && 2 !== o)
                    return "undefined" == typeof e.getAttribute
                        ? ce.prop(e, t, n)
                        : ((1 === o && ce.isXMLDoc(e)) || (i = ce.attrHooks[t.toLowerCase()] || (ce.expr.match.bool.test(t) ? mt : void 0)),
                            void 0 !== n
                                ? null === n
                                    ? void ce.removeAttr(e, t)
                                    : i && "set" in i && void 0 !== (r = i.set(e, n, t))
                                        ? r
                                        : (e.setAttribute(t, n + ""), n)
                                : i && "get" in i && null !== (r = i.get(e, t))
                                    ? r
                                    : null == (r = ce.find.attr(e, t))
                                        ? void 0
                                        : r);
            },
            attrHooks: {
                type: {
                    set: function (e, t) {
                        if (!le.radioValue && "radio" === t && fe(e, "input")) {
                            var n = e.value;
                            return e.setAttribute("type", t), n && (e.value = n), t;
                        }
                    },
                },
            },
            removeAttr: function (e, t) {
                var n,
                    r = 0,
                    i = t && t.match(D);
                if (i && 1 === e.nodeType) while ((n = i[r++])) e.removeAttribute(n);
            },
        }),
        (mt = {
            set: function (e, t, n) {
                return !1 === t ? ce.removeAttr(e, n) : e.setAttribute(n, n), n;
            },
        }),
        ce.each(ce.expr.match.bool.source.match(/\w+/g), function (e, t) {
            var a = xt[t] || ce.find.attr;
            xt[t] = function (e, t, n) {
                var r,
                    i,
                    o = t.toLowerCase();
                return n || ((i = xt[o]), (xt[o] = r), (r = null != a(e, t, n) ? o : null), (xt[o] = i)), r;
            };
        });
    var bt = /^(?:input|select|textarea|button)$/i,
        wt = /^(?:a|area)$/i;
    function Tt(e) {
        return (e.match(D) || []).join(" ");
    }
    function Ct(e) {
        return (e.getAttribute && e.getAttribute("class")) || "";
    }
    function kt(e) {
        return Array.isArray(e) ? e : ("string" == typeof e && e.match(D)) || [];
    }
    ce.fn.extend({
        prop: function (e, t) {
            return M(this, ce.prop, e, t, 1 < arguments.length);
        },
        removeProp: function (e) {
            return this.each(function () {
                delete this[ce.propFix[e] || e];
            });
        },
    }),
        ce.extend({
            prop: function (e, t, n) {
                var r,
                    i,
                    o = e.nodeType;
                if (3 !== o && 8 !== o && 2 !== o)
                    return (
                        (1 === o && ce.isXMLDoc(e)) || ((t = ce.propFix[t] || t), (i = ce.propHooks[t])),
                            void 0 !== n ? (i && "set" in i && void 0 !== (r = i.set(e, n, t)) ? r : (e[t] = n)) : i && "get" in i && null !== (r = i.get(e, t)) ? r : e[t]
                    );
            },
            propHooks: {
                tabIndex: {
                    get: function (e) {
                        var t = ce.find.attr(e, "tabindex");
                        return t ? parseInt(t, 10) : bt.test(e.nodeName) || (wt.test(e.nodeName) && e.href) ? 0 : -1;
                    },
                },
            },
            propFix: { for: "htmlFor", class: "className" },
        }),
    le.optSelected ||
    (ce.propHooks.selected = {
        get: function (e) {
            var t = e.parentNode;
            return t && t.parentNode && t.parentNode.selectedIndex, null;
        },
        set: function (e) {
            var t = e.parentNode;
            t && (t.selectedIndex, t.parentNode && t.parentNode.selectedIndex);
        },
    }),
        ce.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function () {
            ce.propFix[this.toLowerCase()] = this;
        }),
        ce.fn.extend({
            addClass: function (t) {
                var e, n, r, i, o, a;
                return v(t)
                    ? this.each(function (e) {
                        ce(this).addClass(t.call(this, e, Ct(this)));
                    })
                    : (e = kt(t)).length
                        ? this.each(function () {
                            if (((r = Ct(this)), (n = 1 === this.nodeType && " " + Tt(r) + " "))) {
                                for (o = 0; o < e.length; o++) (i = e[o]), n.indexOf(" " + i + " ") < 0 && (n += i + " ");
                                (a = Tt(n)), r !== a && this.setAttribute("class", a);
                            }
                        })
                        : this;
            },
            removeClass: function (t) {
                var e, n, r, i, o, a;
                return v(t)
                    ? this.each(function (e) {
                        ce(this).removeClass(t.call(this, e, Ct(this)));
                    })
                    : arguments.length
                        ? (e = kt(t)).length
                            ? this.each(function () {
                                if (((r = Ct(this)), (n = 1 === this.nodeType && " " + Tt(r) + " "))) {
                                    for (o = 0; o < e.length; o++) {
                                        i = e[o];
                                        while (-1 < n.indexOf(" " + i + " ")) n = n.replace(" " + i + " ", " ");
                                    }
                                    (a = Tt(n)), r !== a && this.setAttribute("class", a);
                                }
                            })
                            : this
                        : this.attr("class", "");
            },
            toggleClass: function (t, n) {
                var e,
                    r,
                    i,
                    o,
                    a = typeof t,
                    s = "string" === a || Array.isArray(t);
                return v(t)
                    ? this.each(function (e) {
                        ce(this).toggleClass(t.call(this, e, Ct(this), n), n);
                    })
                    : "boolean" == typeof n && s
                        ? n
                            ? this.addClass(t)
                            : this.removeClass(t)
                        : ((e = kt(t)),
                            this.each(function () {
                                if (s) for (o = ce(this), i = 0; i < e.length; i++) (r = e[i]), o.hasClass(r) ? o.removeClass(r) : o.addClass(r);
                                else (void 0 !== t && "boolean" !== a) || ((r = Ct(this)) && _.set(this, "__className__", r), this.setAttribute && this.setAttribute("class", r || !1 === t ? "" : _.get(this, "__className__") || ""));
                            }));
            },
            hasClass: function (e) {
                var t,
                    n,
                    r = 0;
                t = " " + e + " ";
                while ((n = this[r++])) if (1 === n.nodeType && -1 < (" " + Tt(Ct(n)) + " ").indexOf(t)) return !0;
                return !1;
            },
        });
    var St = /\r/g;
    ce.fn.extend({
        val: function (n) {
            var r,
                e,
                i,
                t = this[0];
            return arguments.length
                ? ((i = v(n)),
                    this.each(function (e) {
                        var t;
                        1 === this.nodeType &&
                        (null == (t = i ? n.call(this, e, ce(this).val()) : n)
                            ? (t = "")
                            : "number" == typeof t
                                ? (t += "")
                                : Array.isArray(t) &&
                                (t = ce.map(t, function (e) {
                                    return null == e ? "" : e + "";
                                })),
                        ((r = ce.valHooks[this.type] || ce.valHooks[this.nodeName.toLowerCase()]) && "set" in r && void 0 !== r.set(this, t, "value")) || (this.value = t));
                    }))
                : t
                    ? (r = ce.valHooks[t.type] || ce.valHooks[t.nodeName.toLowerCase()]) && "get" in r && void 0 !== (e = r.get(t, "value"))
                        ? e
                        : "string" == typeof (e = t.value)
                            ? e.replace(St, "")
                            : null == e
                                ? ""
                                : e
                    : void 0;
        },
    }),
        ce.extend({
            valHooks: {
                option: {
                    get: function (e) {
                        var t = ce.find.attr(e, "value");
                        return null != t ? t : Tt(ce.text(e));
                    },
                },
                select: {
                    get: function (e) {
                        var t,
                            n,
                            r,
                            i = e.options,
                            o = e.selectedIndex,
                            a = "select-one" === e.type,
                            s = a ? null : [],
                            u = a ? o + 1 : i.length;
                        for (r = o < 0 ? u : a ? o : 0; r < u; r++)
                            if (((n = i[r]).selected || r === o) && !n.disabled && (!n.parentNode.disabled || !fe(n.parentNode, "optgroup"))) {
                                if (((t = ce(n).val()), a)) return t;
                                s.push(t);
                            }
                        return s;
                    },
                    set: function (e, t) {
                        var n,
                            r,
                            i = e.options,
                            o = ce.makeArray(t),
                            a = i.length;
                        while (a--) ((r = i[a]).selected = -1 < ce.inArray(ce.valHooks.option.get(r), o)) && (n = !0);
                        return n || (e.selectedIndex = -1), o;
                    },
                },
            },
        }),
        ce.each(["radio", "checkbox"], function () {
            (ce.valHooks[this] = {
                set: function (e, t) {
                    if (Array.isArray(t)) return (e.checked = -1 < ce.inArray(ce(e).val(), t));
                },
            }),
            le.checkOn ||
            (ce.valHooks[this].get = function (e) {
                return null === e.getAttribute("value") ? "on" : e.value;
            });
        });
    var Et = ie.location,
        jt = { guid: Date.now() },
        At = /\?/;
    ce.parseXML = function (e) {
        var t, n;
        if (!e || "string" != typeof e) return null;
        try {
            t = new ie.DOMParser().parseFromString(e, "text/xml");
        } catch (e) {}
        return (
            (n = t && t.getElementsByTagName("parsererror")[0]),
            (t && !n) ||
            ce.error(
                "Invalid XML: " +
                (n
                    ? ce
                        .map(n.childNodes, function (e) {
                            return e.textContent;
                        })
                        .join("\n")
                    : e)
            ),
                t
        );
    };
    var Dt = /^(?:focusinfocus|focusoutblur)$/,
        Nt = function (e) {
            e.stopPropagation();
        };
    ce.extend(ce.event, {
        trigger: function (e, t, n, r) {
            var i,
                o,
                a,
                s,
                u,
                l,
                c,
                f,
                p = [n || C],
                d = ue.call(e, "type") ? e.type : e,
                h = ue.call(e, "namespace") ? e.namespace.split(".") : [];
            if (
                ((o = f = a = n = n || C),
                3 !== n.nodeType &&
                8 !== n.nodeType &&
                !Dt.test(d + ce.event.triggered) &&
                (-1 < d.indexOf(".") && ((d = (h = d.split(".")).shift()), h.sort()),
                    (u = d.indexOf(":") < 0 && "on" + d),
                    ((e = e[ce.expando] ? e : new ce.Event(d, "object" == typeof e && e)).isTrigger = r ? 2 : 3),
                    (e.namespace = h.join(".")),
                    (e.rnamespace = e.namespace ? new RegExp("(^|\\.)" + h.join("\\.(?:.*\\.|)") + "(\\.|$)") : null),
                    (e.result = void 0),
                e.target || (e.target = n),
                    (t = null == t ? [e] : ce.makeArray(t, [e])),
                    (c = ce.event.special[d] || {}),
                r || !c.trigger || !1 !== c.trigger.apply(n, t)))
            ) {
                if (!r && !c.noBubble && !y(n)) {
                    for (s = c.delegateType || d, Dt.test(s + d) || (o = o.parentNode); o; o = o.parentNode) p.push(o), (a = o);
                    a === (n.ownerDocument || C) && p.push(a.defaultView || a.parentWindow || ie);
                }
                i = 0;
                while ((o = p[i++]) && !e.isPropagationStopped())
                    (f = o),
                        (e.type = 1 < i ? s : c.bindType || d),
                    (l = (_.get(o, "events") || Object.create(null))[e.type] && _.get(o, "handle")) && l.apply(o, t),
                    (l = u && o[u]) && l.apply && $(o) && ((e.result = l.apply(o, t)), !1 === e.result && e.preventDefault());
                return (
                    (e.type = d),
                    r ||
                    e.isDefaultPrevented() ||
                    (c._default && !1 !== c._default.apply(p.pop(), t)) ||
                    !$(n) ||
                    (u &&
                        v(n[d]) &&
                        !y(n) &&
                        ((a = n[u]) && (n[u] = null),
                            (ce.event.triggered = d),
                        e.isPropagationStopped() && f.addEventListener(d, Nt),
                            n[d](),
                        e.isPropagationStopped() && f.removeEventListener(d, Nt),
                            (ce.event.triggered = void 0),
                        a && (n[u] = a))),
                        e.result
                );
            }
        },
        simulate: function (e, t, n) {
            var r = ce.extend(new ce.Event(), n, { type: e, isSimulated: !0 });
            ce.event.trigger(r, null, t);
        },
    }),
        ce.fn.extend({
            trigger: function (e, t) {
                return this.each(function () {
                    ce.event.trigger(e, t, this);
                });
            },
            triggerHandler: function (e, t) {
                var n = this[0];
                if (n) return ce.event.trigger(e, t, n, !0);
            },
        });
    var qt = /\[\]$/,
        Lt = /\r?\n/g,
        Ht = /^(?:submit|button|image|reset|file)$/i,
        Ot = /^(?:input|select|textarea|keygen)/i;
    function Pt(n, e, r, i) {
        var t;
        if (Array.isArray(e))
            ce.each(e, function (e, t) {
                r || qt.test(n) ? i(n, t) : Pt(n + "[" + ("object" == typeof t && null != t ? e : "") + "]", t, r, i);
            });
        else if (r || "object" !== x(e)) i(n, e);
        else for (t in e) Pt(n + "[" + t + "]", e[t], r, i);
    }
    (ce.param = function (e, t) {
        var n,
            r = [],
            i = function (e, t) {
                var n = v(t) ? t() : t;
                r[r.length] = encodeURIComponent(e) + "=" + encodeURIComponent(null == n ? "" : n);
            };
        if (null == e) return "";
        if (Array.isArray(e) || (e.jquery && !ce.isPlainObject(e)))
            ce.each(e, function () {
                i(this.name, this.value);
            });
        else for (n in e) Pt(n, e[n], t, i);
        return r.join("&");
    }),
        ce.fn.extend({
            serialize: function () {
                return ce.param(this.serializeArray());
            },
            serializeArray: function () {
                return this.map(function () {
                    var e = ce.prop(this, "elements");
                    return e ? ce.makeArray(e) : this;
                })
                    .filter(function () {
                        var e = this.type;
                        return this.name && !ce(this).is(":disabled") && Ot.test(this.nodeName) && !Ht.test(e) && (this.checked || !we.test(e));
                    })
                    .map(function (e, t) {
                        var n = ce(this).val();
                        return null == n
                            ? null
                            : Array.isArray(n)
                                ? ce.map(n, function (e) {
                                    return { name: t.name, value: e.replace(Lt, "\r\n") };
                                })
                                : { name: t.name, value: n.replace(Lt, "\r\n") };
                    })
                    .get();
            },
        });
    var Mt = /%20/g,
        Rt = /#.*$/,
        It = /([?&])_=[^&]*/,
        Wt = /^(.*?):[ \t]*([^\r\n]*)$/gm,
        Ft = /^(?:GET|HEAD)$/,
        $t = /^\/\//,
        Bt = {},
        _t = {},
        zt = "*/".concat("*"),
        Xt = C.createElement("a");
    function Ut(o) {
        return function (e, t) {
            "string" != typeof e && ((t = e), (e = "*"));
            var n,
                r = 0,
                i = e.toLowerCase().match(D) || [];
            if (v(t)) while ((n = i[r++])) "+" === n[0] ? ((n = n.slice(1) || "*"), (o[n] = o[n] || []).unshift(t)) : (o[n] = o[n] || []).push(t);
        };
    }
    function Vt(t, i, o, a) {
        var s = {},
            u = t === _t;
        function l(e) {
            var r;
            return (
                (s[e] = !0),
                    ce.each(t[e] || [], function (e, t) {
                        var n = t(i, o, a);
                        return "string" != typeof n || u || s[n] ? (u ? !(r = n) : void 0) : (i.dataTypes.unshift(n), l(n), !1);
                    }),
                    r
            );
        }
        return l(i.dataTypes[0]) || (!s["*"] && l("*"));
    }
    function Gt(e, t) {
        var n,
            r,
            i = ce.ajaxSettings.flatOptions || {};
        for (n in t) void 0 !== t[n] && ((i[n] ? e : r || (r = {}))[n] = t[n]);
        return r && ce.extend(!0, e, r), e;
    }
    (Xt.href = Et.href),
        ce.extend({
            active: 0,
            lastModified: {},
            etag: {},
            ajaxSettings: {
                url: Et.href,
                type: "GET",
                isLocal: /^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(Et.protocol),
                global: !0,
                processData: !0,
                async: !0,
                contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                accepts: { "*": zt, text: "text/plain", html: "text/html", xml: "application/xml, text/xml", json: "application/json, text/javascript" },
                contents: { xml: /\bxml\b/, html: /\bhtml/, json: /\bjson\b/ },
                responseFields: { xml: "responseXML", text: "responseText", json: "responseJSON" },
                converters: { "* text": String, "text html": !0, "text json": JSON.parse, "text xml": ce.parseXML },
                flatOptions: { url: !0, context: !0 },
            },
            ajaxSetup: function (e, t) {
                return t ? Gt(Gt(e, ce.ajaxSettings), t) : Gt(ce.ajaxSettings, e);
            },
            ajaxPrefilter: Ut(Bt),
            ajaxTransport: Ut(_t),
            ajax: function (e, t) {
                "object" == typeof e && ((t = e), (e = void 0)), (t = t || {});
                var c,
                    f,
                    p,
                    n,
                    d,
                    r,
                    h,
                    g,
                    i,
                    o,
                    v = ce.ajaxSetup({}, t),
                    y = v.context || v,
                    m = v.context && (y.nodeType || y.jquery) ? ce(y) : ce.event,
                    x = ce.Deferred(),
                    b = ce.Callbacks("once memory"),
                    w = v.statusCode || {},
                    a = {},
                    s = {},
                    u = "canceled",
                    T = {
                        readyState: 0,
                        getResponseHeader: function (e) {
                            var t;
                            if (h) {
                                if (!n) {
                                    n = {};
                                    while ((t = Wt.exec(p))) n[t[1].toLowerCase() + " "] = (n[t[1].toLowerCase() + " "] || []).concat(t[2]);
                                }
                                t = n[e.toLowerCase() + " "];
                            }
                            return null == t ? null : t.join(", ");
                        },
                        getAllResponseHeaders: function () {
                            return h ? p : null;
                        },
                        setRequestHeader: function (e, t) {
                            return null == h && ((e = s[e.toLowerCase()] = s[e.toLowerCase()] || e), (a[e] = t)), this;
                        },
                        overrideMimeType: function (e) {
                            return null == h && (v.mimeType = e), this;
                        },
                        statusCode: function (e) {
                            var t;
                            if (e)
                                if (h) T.always(e[T.status]);
                                else for (t in e) w[t] = [w[t], e[t]];
                            return this;
                        },
                        abort: function (e) {
                            var t = e || u;
                            return c && c.abort(t), l(0, t), this;
                        },
                    };
                if (
                    (x.promise(T),
                        (v.url = ((e || v.url || Et.href) + "").replace($t, Et.protocol + "//")),
                        (v.type = t.method || t.type || v.method || v.type),
                        (v.dataTypes = (v.dataType || "*").toLowerCase().match(D) || [""]),
                    null == v.crossDomain)
                ) {
                    r = C.createElement("a");
                    try {
                        (r.href = v.url), (r.href = r.href), (v.crossDomain = Xt.protocol + "//" + Xt.host != r.protocol + "//" + r.host);
                    } catch (e) {
                        v.crossDomain = !0;
                    }
                }
                if ((v.data && v.processData && "string" != typeof v.data && (v.data = ce.param(v.data, v.traditional)), Vt(Bt, v, t, T), h)) return T;
                for (i in ((g = ce.event && v.global) && 0 == ce.active++ && ce.event.trigger("ajaxStart"),
                    (v.type = v.type.toUpperCase()),
                    (v.hasContent = !Ft.test(v.type)),
                    (f = v.url.replace(Rt, "")),
                    v.hasContent
                        ? v.data && v.processData && 0 === (v.contentType || "").indexOf("application/x-www-form-urlencoded") && (v.data = v.data.replace(Mt, "+"))
                        : ((o = v.url.slice(f.length)),
                        v.data && (v.processData || "string" == typeof v.data) && ((f += (At.test(f) ? "&" : "?") + v.data), delete v.data),
                        !1 === v.cache && ((f = f.replace(It, "$1")), (o = (At.test(f) ? "&" : "?") + "_=" + jt.guid++ + o)),
                            (v.url = f + o)),
                v.ifModified && (ce.lastModified[f] && T.setRequestHeader("If-Modified-Since", ce.lastModified[f]), ce.etag[f] && T.setRequestHeader("If-None-Match", ce.etag[f])),
                ((v.data && v.hasContent && !1 !== v.contentType) || t.contentType) && T.setRequestHeader("Content-Type", v.contentType),
                    T.setRequestHeader("Accept", v.dataTypes[0] && v.accepts[v.dataTypes[0]] ? v.accepts[v.dataTypes[0]] + ("*" !== v.dataTypes[0] ? ", " + zt + "; q=0.01" : "") : v.accepts["*"]),
                    v.headers))
                    T.setRequestHeader(i, v.headers[i]);
                if (v.beforeSend && (!1 === v.beforeSend.call(y, T, v) || h)) return T.abort();
                if (((u = "abort"), b.add(v.complete), T.done(v.success), T.fail(v.error), (c = Vt(_t, v, t, T)))) {
                    if (((T.readyState = 1), g && m.trigger("ajaxSend", [T, v]), h)) return T;
                    v.async &&
                    0 < v.timeout &&
                    (d = ie.setTimeout(function () {
                        T.abort("timeout");
                    }, v.timeout));
                    try {
                        (h = !1), c.send(a, l);
                    } catch (e) {
                        if (h) throw e;
                        l(-1, e);
                    }
                } else l(-1, "No Transport");
                function l(e, t, n, r) {
                    var i,
                        o,
                        a,
                        s,
                        u,
                        l = t;
                    h ||
                    ((h = !0),
                    d && ie.clearTimeout(d),
                        (c = void 0),
                        (p = r || ""),
                        (T.readyState = 0 < e ? 4 : 0),
                        (i = (200 <= e && e < 300) || 304 === e),
                    n &&
                    (s = (function (e, t, n) {
                        var r,
                            i,
                            o,
                            a,
                            s = e.contents,
                            u = e.dataTypes;
                        while ("*" === u[0]) u.shift(), void 0 === r && (r = e.mimeType || t.getResponseHeader("Content-Type"));
                        if (r)
                            for (i in s)
                                if (s[i] && s[i].test(r)) {
                                    u.unshift(i);
                                    break;
                                }
                        if (u[0] in n) o = u[0];
                        else {
                            for (i in n) {
                                if (!u[0] || e.converters[i + " " + u[0]]) {
                                    o = i;
                                    break;
                                }
                                a || (a = i);
                            }
                            o = o || a;
                        }
                        if (o) return o !== u[0] && u.unshift(o), n[o];
                    })(v, T, n)),
                    !i && -1 < ce.inArray("script", v.dataTypes) && ce.inArray("json", v.dataTypes) < 0 && (v.converters["text script"] = function () {}),
                        (s = (function (e, t, n, r) {
                            var i,
                                o,
                                a,
                                s,
                                u,
                                l = {},
                                c = e.dataTypes.slice();
                            if (c[1]) for (a in e.converters) l[a.toLowerCase()] = e.converters[a];
                            o = c.shift();
                            while (o)
                                if ((e.responseFields[o] && (n[e.responseFields[o]] = t), !u && r && e.dataFilter && (t = e.dataFilter(t, e.dataType)), (u = o), (o = c.shift())))
                                    if ("*" === o) o = u;
                                    else if ("*" !== u && u !== o) {
                                        if (!(a = l[u + " " + o] || l["* " + o]))
                                            for (i in l)
                                                if ((s = i.split(" "))[1] === o && (a = l[u + " " + s[0]] || l["* " + s[0]])) {
                                                    !0 === a ? (a = l[i]) : !0 !== l[i] && ((o = s[0]), c.unshift(s[1]));
                                                    break;
                                                }
                                        if (!0 !== a)
                                            if (a && e["throws"]) t = a(t);
                                            else
                                                try {
                                                    t = a(t);
                                                } catch (e) {
                                                    return { state: "parsererror", error: a ? e : "No conversion from " + u + " to " + o };
                                                }
                                    }
                            return { state: "success", data: t };
                        })(v, s, T, i)),
                        i
                            ? (v.ifModified && ((u = T.getResponseHeader("Last-Modified")) && (ce.lastModified[f] = u), (u = T.getResponseHeader("etag")) && (ce.etag[f] = u)),
                                204 === e || "HEAD" === v.type ? (l = "nocontent") : 304 === e ? (l = "notmodified") : ((l = s.state), (o = s.data), (i = !(a = s.error))))
                            : ((a = l), (!e && l) || ((l = "error"), e < 0 && (e = 0))),
                        (T.status = e),
                        (T.statusText = (t || l) + ""),
                        i ? x.resolveWith(y, [o, l, T]) : x.rejectWith(y, [T, l, a]),
                        T.statusCode(w),
                        (w = void 0),
                    g && m.trigger(i ? "ajaxSuccess" : "ajaxError", [T, v, i ? o : a]),
                        b.fireWith(y, [T, l]),
                    g && (m.trigger("ajaxComplete", [T, v]), --ce.active || ce.event.trigger("ajaxStop")));
                }
                return T;
            },
            getJSON: function (e, t, n) {
                return ce.get(e, t, n, "json");
            },
            getScript: function (e, t) {
                return ce.get(e, void 0, t, "script");
            },
        }),
        ce.each(["get", "post"], function (e, i) {
            ce[i] = function (e, t, n, r) {
                return v(t) && ((r = r || n), (n = t), (t = void 0)), ce.ajax(ce.extend({ url: e, type: i, dataType: r, data: t, success: n }, ce.isPlainObject(e) && e));
            };
        }),
        ce.ajaxPrefilter(function (e) {
            var t;
            for (t in e.headers) "content-type" === t.toLowerCase() && (e.contentType = e.headers[t] || "");
        }),
        (ce._evalUrl = function (e, t, n) {
            return ce.ajax({
                url: e,
                type: "GET",
                dataType: "script",
                cache: !0,
                async: !1,
                global: !1,
                converters: { "text script": function () {} },
                dataFilter: function (e) {
                    ce.globalEval(e, t, n);
                },
            });
        }),
        ce.fn.extend({
            wrapAll: function (e) {
                var t;
                return (
                    this[0] &&
                    (v(e) && (e = e.call(this[0])),
                        (t = ce(e, this[0].ownerDocument).eq(0).clone(!0)),
                    this[0].parentNode && t.insertBefore(this[0]),
                        t
                            .map(function () {
                                var e = this;
                                while (e.firstElementChild) e = e.firstElementChild;
                                return e;
                            })
                            .append(this)),
                        this
                );
            },
            wrapInner: function (n) {
                return v(n)
                    ? this.each(function (e) {
                        ce(this).wrapInner(n.call(this, e));
                    })
                    : this.each(function () {
                        var e = ce(this),
                            t = e.contents();
                        t.length ? t.wrapAll(n) : e.append(n);
                    });
            },
            wrap: function (t) {
                var n = v(t);
                return this.each(function (e) {
                    ce(this).wrapAll(n ? t.call(this, e) : t);
                });
            },
            unwrap: function (e) {
                return (
                    this.parent(e)
                        .not("body")
                        .each(function () {
                            ce(this).replaceWith(this.childNodes);
                        }),
                        this
                );
            },
        }),
        (ce.expr.pseudos.hidden = function (e) {
            return !ce.expr.pseudos.visible(e);
        }),
        (ce.expr.pseudos.visible = function (e) {
            return !!(e.offsetWidth || e.offsetHeight || e.getClientRects().length);
        }),
        (ce.ajaxSettings.xhr = function () {
            try {
                return new ie.XMLHttpRequest();
            } catch (e) {}
        });
    var Yt = { 0: 200, 1223: 204 },
        Qt = ce.ajaxSettings.xhr();
    (le.cors = !!Qt && "withCredentials" in Qt),
        (le.ajax = Qt = !!Qt),
        ce.ajaxTransport(function (i) {
            var o, a;
            if (le.cors || (Qt && !i.crossDomain))
                return {
                    send: function (e, t) {
                        var n,
                            r = i.xhr();
                        if ((r.open(i.type, i.url, i.async, i.username, i.password), i.xhrFields)) for (n in i.xhrFields) r[n] = i.xhrFields[n];
                        for (n in (i.mimeType && r.overrideMimeType && r.overrideMimeType(i.mimeType), i.crossDomain || e["X-Requested-With"] || (e["X-Requested-With"] = "XMLHttpRequest"), e)) r.setRequestHeader(n, e[n]);
                        (o = function (e) {
                            return function () {
                                o &&
                                ((o = a = r.onload = r.onerror = r.onabort = r.ontimeout = r.onreadystatechange = null),
                                    "abort" === e
                                        ? r.abort()
                                        : "error" === e
                                            ? "number" != typeof r.status
                                                ? t(0, "error")
                                                : t(r.status, r.statusText)
                                            : t(Yt[r.status] || r.status, r.statusText, "text" !== (r.responseType || "text") || "string" != typeof r.responseText ? { binary: r.response } : { text: r.responseText }, r.getAllResponseHeaders()));
                            };
                        }),
                            (r.onload = o()),
                            (a = r.onerror = r.ontimeout = o("error")),
                            void 0 !== r.onabort
                                ? (r.onabort = a)
                                : (r.onreadystatechange = function () {
                                    4 === r.readyState &&
                                    ie.setTimeout(function () {
                                        o && a();
                                    });
                                }),
                            (o = o("abort"));
                        try {
                            r.send((i.hasContent && i.data) || null);
                        } catch (e) {
                            if (o) throw e;
                        }
                    },
                    abort: function () {
                        o && o();
                    },
                };
        }),
        ce.ajaxPrefilter(function (e) {
            e.crossDomain && (e.contents.script = !1);
        }),
        ce.ajaxSetup({
            accepts: { script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript" },
            contents: { script: /\b(?:java|ecma)script\b/ },
            converters: {
                "text script": function (e) {
                    return ce.globalEval(e), e;
                },
            },
        }),
        ce.ajaxPrefilter("script", function (e) {
            void 0 === e.cache && (e.cache = !1), e.crossDomain && (e.type = "GET");
        }),
        ce.ajaxTransport("script", function (n) {
            var r, i;
            if (n.crossDomain || n.scriptAttrs)
                return {
                    send: function (e, t) {
                        (r = ce("<script>")
                            .attr(n.scriptAttrs || {})
                            .prop({ charset: n.scriptCharset, src: n.url })
                            .on(
                                "load error",
                                (i = function (e) {
                                    r.remove(), (i = null), e && t("error" === e.type ? 404 : 200, e.type);
                                })
                            )),
                            C.head.appendChild(r[0]);
                    },
                    abort: function () {
                        i && i();
                    },
                };
        });
    var Jt,
        Kt = [],
        Zt = /(=)\?(?=&|$)|\?\?/;
    ce.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function () {
            var e = Kt.pop() || ce.expando + "_" + jt.guid++;
            return (this[e] = !0), e;
        },
    }),
        ce.ajaxPrefilter("json jsonp", function (e, t, n) {
            var r,
                i,
                o,
                a = !1 !== e.jsonp && (Zt.test(e.url) ? "url" : "string" == typeof e.data && 0 === (e.contentType || "").indexOf("application/x-www-form-urlencoded") && Zt.test(e.data) && "data");
            if (a || "jsonp" === e.dataTypes[0])
                return (
                    (r = e.jsonpCallback = v(e.jsonpCallback) ? e.jsonpCallback() : e.jsonpCallback),
                        a ? (e[a] = e[a].replace(Zt, "$1" + r)) : !1 !== e.jsonp && (e.url += (At.test(e.url) ? "&" : "?") + e.jsonp + "=" + r),
                        (e.converters["script json"] = function () {
                            return o || ce.error(r + " was not called"), o[0];
                        }),
                        (e.dataTypes[0] = "json"),
                        (i = ie[r]),
                        (ie[r] = function () {
                            o = arguments;
                        }),
                        n.always(function () {
                            void 0 === i ? ce(ie).removeProp(r) : (ie[r] = i), e[r] && ((e.jsonpCallback = t.jsonpCallback), Kt.push(r)), o && v(i) && i(o[0]), (o = i = void 0);
                        }),
                        "script"
                );
        }),
        (le.createHTMLDocument = (((Jt = C.implementation.createHTMLDocument("").body).innerHTML = "<form></form><form></form>"), 2 === Jt.childNodes.length)),
        (ce.parseHTML = function (e, t, n) {
            return "string" != typeof e
                ? []
                : ("boolean" == typeof t && ((n = t), (t = !1)),
                t || (le.createHTMLDocument ? (((r = (t = C.implementation.createHTMLDocument("")).createElement("base")).href = C.location.href), t.head.appendChild(r)) : (t = C)),
                    (o = !n && []),
                    (i = w.exec(e)) ? [t.createElement(i[1])] : ((i = Ae([e], t, o)), o && o.length && ce(o).remove(), ce.merge([], i.childNodes)));
            var r, i, o;
        }),
        (ce.fn.load = function (e, t, n) {
            var r,
                i,
                o,
                a = this,
                s = e.indexOf(" ");
            return (
                -1 < s && ((r = Tt(e.slice(s))), (e = e.slice(0, s))),
                    v(t) ? ((n = t), (t = void 0)) : t && "object" == typeof t && (i = "POST"),
                0 < a.length &&
                ce
                    .ajax({ url: e, type: i || "GET", dataType: "html", data: t })
                    .done(function (e) {
                        (o = arguments), a.html(r ? ce("<div>").append(ce.parseHTML(e)).find(r) : e);
                    })
                    .always(
                        n &&
                        function (e, t) {
                            a.each(function () {
                                n.apply(this, o || [e.responseText, t, e]);
                            });
                        }
                    ),
                    this
            );
        }),
        (ce.expr.pseudos.animated = function (t) {
            return ce.grep(ce.timers, function (e) {
                return t === e.elem;
            }).length;
        }),
        (ce.offset = {
            setOffset: function (e, t, n) {
                var r,
                    i,
                    o,
                    a,
                    s,
                    u,
                    l = ce.css(e, "position"),
                    c = ce(e),
                    f = {};
                "static" === l && (e.style.position = "relative"),
                    (s = c.offset()),
                    (o = ce.css(e, "top")),
                    (u = ce.css(e, "left")),
                    ("absolute" === l || "fixed" === l) && -1 < (o + u).indexOf("auto") ? ((a = (r = c.position()).top), (i = r.left)) : ((a = parseFloat(o) || 0), (i = parseFloat(u) || 0)),
                v(t) && (t = t.call(e, n, ce.extend({}, s))),
                null != t.top && (f.top = t.top - s.top + a),
                null != t.left && (f.left = t.left - s.left + i),
                    "using" in t ? t.using.call(e, f) : c.css(f);
            },
        }),
        ce.fn.extend({
            offset: function (t) {
                if (arguments.length)
                    return void 0 === t
                        ? this
                        : this.each(function (e) {
                            ce.offset.setOffset(this, t, e);
                        });
                var e,
                    n,
                    r = this[0];
                return r ? (r.getClientRects().length ? ((e = r.getBoundingClientRect()), (n = r.ownerDocument.defaultView), { top: e.top + n.pageYOffset, left: e.left + n.pageXOffset }) : { top: 0, left: 0 }) : void 0;
            },
            position: function () {
                if (this[0]) {
                    var e,
                        t,
                        n,
                        r = this[0],
                        i = { top: 0, left: 0 };
                    if ("fixed" === ce.css(r, "position")) t = r.getBoundingClientRect();
                    else {
                        (t = this.offset()), (n = r.ownerDocument), (e = r.offsetParent || n.documentElement);
                        while (e && (e === n.body || e === n.documentElement) && "static" === ce.css(e, "position")) e = e.parentNode;
                        e && e !== r && 1 === e.nodeType && (((i = ce(e).offset()).top += ce.css(e, "borderTopWidth", !0)), (i.left += ce.css(e, "borderLeftWidth", !0)));
                    }
                    return { top: t.top - i.top - ce.css(r, "marginTop", !0), left: t.left - i.left - ce.css(r, "marginLeft", !0) };
                }
            },
            offsetParent: function () {
                return this.map(function () {
                    var e = this.offsetParent;
                    while (e && "static" === ce.css(e, "position")) e = e.offsetParent;
                    return e || J;
                });
            },
        }),
        ce.each({ scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function (t, i) {
            var o = "pageYOffset" === i;
            ce.fn[t] = function (e) {
                return M(
                    this,
                    function (e, t, n) {
                        var r;
                        if ((y(e) ? (r = e) : 9 === e.nodeType && (r = e.defaultView), void 0 === n)) return r ? r[i] : e[t];
                        r ? r.scrollTo(o ? r.pageXOffset : n, o ? n : r.pageYOffset) : (e[t] = n);
                    },
                    t,
                    e,
                    arguments.length
                );
            };
        }),
        ce.each(["top", "left"], function (e, n) {
            ce.cssHooks[n] = Ye(le.pixelPosition, function (e, t) {
                if (t) return (t = Ge(e, n)), _e.test(t) ? ce(e).position()[n] + "px" : t;
            });
        }),
        ce.each({ Height: "height", Width: "width" }, function (a, s) {
            ce.each({ padding: "inner" + a, content: s, "": "outer" + a }, function (r, o) {
                ce.fn[o] = function (e, t) {
                    var n = arguments.length && (r || "boolean" != typeof e),
                        i = r || (!0 === e || !0 === t ? "margin" : "border");
                    return M(
                        this,
                        function (e, t, n) {
                            var r;
                            return y(e)
                                ? 0 === o.indexOf("outer")
                                    ? e["inner" + a]
                                    : e.document.documentElement["client" + a]
                                : 9 === e.nodeType
                                    ? ((r = e.documentElement), Math.max(e.body["scroll" + a], r["scroll" + a], e.body["offset" + a], r["offset" + a], r["client" + a]))
                                    : void 0 === n
                                        ? ce.css(e, t, i)
                                        : ce.style(e, t, n, i);
                        },
                        s,
                        n ? e : void 0,
                        n
                    );
                };
            });
        }),
        ce.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function (e, t) {
            ce.fn[t] = function (e) {
                return this.on(t, e);
            };
        }),
        ce.fn.extend({
            bind: function (e, t, n) {
                return this.on(e, null, t, n);
            },
            unbind: function (e, t) {
                return this.off(e, null, t);
            },
            delegate: function (e, t, n, r) {
                return this.on(t, e, n, r);
            },
            undelegate: function (e, t, n) {
                return 1 === arguments.length ? this.off(e, "**") : this.off(t, e || "**", n);
            },
            hover: function (e, t) {
                return this.on("mouseenter", e).on("mouseleave", t || e);
            },
        }),
        ce.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function (e, n) {
            ce.fn[n] = function (e, t) {
                return 0 < arguments.length ? this.on(n, null, e, t) : this.trigger(n);
            };
        });
    var en = /^[\s\uFEFF\xA0]+|([^\s\uFEFF\xA0])[\s\uFEFF\xA0]+$/g;
    (ce.proxy = function (e, t) {
        var n, r, i;
        if (("string" == typeof t && ((n = e[t]), (t = e), (e = n)), v(e)))
            return (
                (r = ae.call(arguments, 2)),
                    ((i = function () {
                        return e.apply(t || this, r.concat(ae.call(arguments)));
                    }).guid = e.guid = e.guid || ce.guid++),
                    i
            );
    }),
        (ce.holdReady = function (e) {
            e ? ce.readyWait++ : ce.ready(!0);
        }),
        (ce.isArray = Array.isArray),
        (ce.parseJSON = JSON.parse),
        (ce.nodeName = fe),
        (ce.isFunction = v),
        (ce.isWindow = y),
        (ce.camelCase = F),
        (ce.type = x),
        (ce.now = Date.now),
        (ce.isNumeric = function (e) {
            var t = ce.type(e);
            return ("number" === t || "string" === t) && !isNaN(e - parseFloat(e));
        }),
        (ce.trim = function (e) {
            return null == e ? "" : (e + "").replace(en, "$1");
        }),
    "function" == typeof define &&
    define.amd &&
    define("jquery", [], function () {
        return ce;
    });
    var tn = ie.jQuery,
        nn = ie.$;
    return (
        (ce.noConflict = function (e) {
            return ie.$ === ce && (ie.$ = nn), e && ie.jQuery === ce && (ie.jQuery = tn), ce;
        }),
        "undefined" == typeof e && (ie.jQuery = ie.$ = ce),
            ce
    );
});
/*! jQuery UI - v1.14.0 - 2024-09-19
 * https://jqueryui.com
 * Includes: focusable.js, keycode.js, tabbable.js, widgets/datepicker.js
 * Copyright OpenJS Foundation and other contributors; Licensed MIT */ !(function (e) {
    "function" == typeof define && define.amd ? define(["jquery"], e) : e(jQuery);
})(function (V) {
    V.ui = V.ui || {};
    var n;
    (V.ui.version = "1.14.0"),
        (V.ui.focusable = function (e, t) {
            var a,
                i,
                s,
                r = e.nodeName.toLowerCase();
            return "area" === r
                ? ((s = (a = e.parentNode).name), !(!e.href || !s || "map" !== a.nodeName.toLowerCase()) && 0 < (a = V("img[usemap='#" + s + "']")).length && a.is(":visible"))
                : (/^(input|select|textarea|button|object)$/.test(r) ? (i = !e.disabled) && (s = V(e).closest("fieldset")[0]) && (i = !s.disabled) : (i = ("a" === r && e.href) || t),
                i && V(e).is(":visible") && "visible" === V(e).css("visibility"));
        }),
        V.extend(V.expr.pseudos, {
            focusable: function (e) {
                return V.ui.focusable(e, null != V.attr(e, "tabindex"));
            },
        }),
        V.ui.focusable,
        (V.ui.keyCode = { BACKSPACE: 8, COMMA: 188, DELETE: 46, DOWN: 40, END: 35, ENTER: 13, ESCAPE: 27, HOME: 36, LEFT: 37, PAGE_DOWN: 34, PAGE_UP: 33, PERIOD: 190, RIGHT: 39, SPACE: 32, TAB: 9, UP: 38 }),
        V.extend(V.expr.pseudos, {
            tabbable: function (e) {
                var t = V.attr(e, "tabindex"),
                    a = null != t;
                return (!a || 0 <= t) && V.ui.focusable(e, a);
            },
        });
    function e() {
        (this._curInst = null),
            (this._keyEvent = !1),
            (this._disabledInputs = []),
            (this._datepickerShowing = !1),
            (this._inDialog = !1),
            (this._mainDivId = "ui-datepicker-div"),
            (this._inlineClass = "ui-datepicker-inline"),
            (this._appendClass = "ui-datepicker-append"),
            (this._triggerClass = "ui-datepicker-trigger"),
            (this._dialogClass = "ui-datepicker-dialog"),
            (this._disableClass = "ui-datepicker-disabled"),
            (this._unselectableClass = "ui-datepicker-unselectable"),
            (this._currentClass = "ui-datepicker-current-day"),
            (this._dayOverClass = "ui-datepicker-days-cell-over"),
            (this.regional = []),
            (this.regional[""] = {
                closeText: "Done",
                prevText: "Prev",
                nextText: "Next",
                currentText: "Today",
                monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
                monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
                dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
                weekHeader: "Wk",
                dateFormat: "mm/dd/yy",
                firstDay: 0,
                isRTL: !1,
                showMonthAfterYear: !1,
                yearSuffix: "",
                selectMonthLabel: "Select month",
                selectYearLabel: "Select year",
            }),
            (this._defaults = {
                showOn: "focus",
                showAnim: "fadeIn",
                showOptions: {},
                defaultDate: null,
                appendText: "",
                buttonText: "...",
                buttonImage: "",
                buttonImageOnly: !1,
                hideIfNoPrevNext: !1,
                navigationAsDateFormat: !1,
                gotoCurrent: !1,
                changeMonth: !1,
                changeYear: !1,
                yearRange: "c-10:c+10",
                showOtherMonths: !1,
                selectOtherMonths: !1,
                showWeek: !1,
                calculateWeek: this.iso8601Week,
                shortYearCutoff: "+10",
                minDate: null,
                maxDate: null,
                duration: "fast",
                beforeShowDay: null,
                beforeShow: null,
                onSelect: null,
                onChangeMonthYear: null,
                onClose: null,
                onUpdateDatepicker: null,
                numberOfMonths: 1,
                showCurrentAtPos: 0,
                stepMonths: 1,
                stepBigMonths: 12,
                altField: "",
                altFormat: "",
                constrainInput: !0,
                showButtonPanel: !1,
                autoSize: !1,
                disabled: !1,
            }),
            V.extend(this._defaults, this.regional[""]),
            (this.regional.en = V.extend(!0, {}, this.regional[""])),
            (this.regional["en-US"] = V.extend(!0, {}, this.regional.en)),
            (this.dpDiv = a(V("<div id='" + this._mainDivId + "' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>")));
    }
    function a(e) {
        var t = "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";
        return e
            .on("mouseout", t, function () {
                V(this).removeClass("ui-state-hover"),
                -1 !== this.className.indexOf("ui-datepicker-prev") && V(this).removeClass("ui-datepicker-prev-hover"),
                -1 !== this.className.indexOf("ui-datepicker-next") && V(this).removeClass("ui-datepicker-next-hover");
            })
            .on("mouseover", t, d);
    }
    function d() {
        V.datepicker._isDisabledDatepicker((n.inline ? n.dpDiv.parent() : n.input)[0]) ||
        (V(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"),
            V(this).addClass("ui-state-hover"),
        -1 !== this.className.indexOf("ui-datepicker-prev") && V(this).addClass("ui-datepicker-prev-hover"),
        -1 !== this.className.indexOf("ui-datepicker-next") && V(this).addClass("ui-datepicker-next-hover"));
    }
    function o(e, t) {
        for (var a in (V.extend(e, t), t)) null == t[a] && (e[a] = t[a]);
    }
    V.extend(V.ui, { datepicker: { version: "1.14.0" } }),
        V.extend(e.prototype, {
            markerClassName: "hasDatepicker",
            maxRows: 4,
            _widgetDatepicker: function () {
                return this.dpDiv;
            },
            setDefaults: function (e) {
                return o(this._defaults, e || {}), this;
            },
            _attachDatepicker: function (e, t) {
                var a,
                    i = e.nodeName.toLowerCase(),
                    s = "div" === i || "span" === i;
                e.id || ((this.uuid += 1), (e.id = "dp" + this.uuid)), ((a = this._newInst(V(e), s)).settings = V.extend({}, t || {})), "input" === i ? this._connectDatepicker(e, a) : s && this._inlineDatepicker(e, a);
            },
            _newInst: function (e, t) {
                return {
                    id: e[0].id.replace(/([^A-Za-z0-9_\-])/g, "\\\\$1"),
                    input: e,
                    selectedDay: 0,
                    selectedMonth: 0,
                    selectedYear: 0,
                    drawMonth: 0,
                    drawYear: 0,
                    inline: t,
                    dpDiv: t ? a(V("<div class='" + this._inlineClass + " ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>")) : this.dpDiv,
                };
            },
            _connectDatepicker: function (e, t) {
                var a = V(e);
                (t.append = V([])),
                    (t.trigger = V([])),
                a.hasClass(this.markerClassName) ||
                (this._attachments(a, t),
                    a.addClass(this.markerClassName).on("keydown", this._doKeyDown).on("keypress", this._doKeyPress).on("keyup", this._doKeyUp),
                    this._autoSize(t),
                    V.data(e, "datepicker", t),
                t.settings.disabled && this._disableDatepicker(e));
            },
            _attachments: function (e, t) {
                var a,
                    i = this._get(t, "appendText"),
                    s = this._get(t, "isRTL");
                t.append && t.append.remove(),
                i && ((t.append = V("<span>").addClass(this._appendClass).text(i)), e[s ? "before" : "after"](t.append)),
                    e.off("focus", this._showDatepicker),
                t.trigger && t.trigger.remove(),
                ("focus" !== (i = this._get(t, "showOn")) && "both" !== i) || e.on("focus", this._showDatepicker),
                ("button" !== i && "both" !== i) ||
                ((i = this._get(t, "buttonText")),
                    (a = this._get(t, "buttonImage")),
                    this._get(t, "buttonImageOnly")
                        ? (t.trigger = V("<img>").addClass(this._triggerClass).attr({ src: a, alt: i, title: i }))
                        : ((t.trigger = V("<button type='button'>").addClass(this._triggerClass)), a ? t.trigger.html(V("<img>").attr({ src: a, alt: i, title: i })) : t.trigger.text(i)),
                    e[s ? "before" : "after"](t.trigger),
                    t.trigger.on("click", function () {
                        return (
                            V.datepicker._datepickerShowing && V.datepicker._lastInput === e[0]
                                ? V.datepicker._hideDatepicker()
                                : (V.datepicker._datepickerShowing && V.datepicker._lastInput !== e[0] && V.datepicker._hideDatepicker(), V.datepicker._showDatepicker(e[0])),
                                !1
                        );
                    }));
            },
            _autoSize: function (e) {
                var t, a, i, s, r, n;
                this._get(e, "autoSize") &&
                !e.inline &&
                ((r = new Date(2009, 11, 20)),
                (n = this._get(e, "dateFormat")).match(/[DM]/) &&
                (r.setMonth(
                    (t = function (e) {
                        for (s = i = a = 0; s < e.length; s++) e[s].length > a && ((a = e[s].length), (i = s));
                        return i;
                    })(this._get(e, n.match(/MM/) ? "monthNames" : "monthNamesShort"))
                ),
                    r.setDate(t(this._get(e, n.match(/DD/) ? "dayNames" : "dayNamesShort")) + 20 - r.getDay())),
                    e.input.attr("size", this._formatDate(e, r).length));
            },
            _inlineDatepicker: function (e, t) {
                var a = V(e);
                a.hasClass(this.markerClassName) ||
                (a.addClass(this.markerClassName).append(t.dpDiv),
                    V.data(e, "datepicker", t),
                    this._setDate(t, this._getDefaultDate(t), !0),
                    this._updateDatepicker(t),
                    this._updateAlternate(t),
                t.settings.disabled && this._disableDatepicker(e),
                    t.dpDiv.css("display", "block"));
            },
            _dialogDatepicker: function (e, t, a, i, s) {
                var r,
                    n = this._dialogInst;
                return (
                    n ||
                    ((this.uuid += 1),
                        (r = "dp" + this.uuid),
                        (this._dialogInput = V("<input type='text' id='" + r + "' style='position: absolute; top: -100px; width: 0px;'/>")),
                        this._dialogInput.on("keydown", this._doKeyDown),
                        V("body").append(this._dialogInput),
                        ((n = this._dialogInst = this._newInst(this._dialogInput, !1)).settings = {}),
                        V.data(this._dialogInput[0], "datepicker", n)),
                        o(n.settings, i || {}),
                        (t = t && t.constructor === Date ? this._formatDate(n, t) : t),
                        this._dialogInput.val(t),
                        (this._pos = s ? (s.length ? s : [s.pageX, s.pageY]) : null),
                    this._pos ||
                    ((r = document.documentElement.clientWidth),
                        (i = document.documentElement.clientHeight),
                        (t = document.documentElement.scrollLeft || document.body.scrollLeft),
                        (s = document.documentElement.scrollTop || document.body.scrollTop),
                        (this._pos = [r / 2 - 100 + t, i / 2 - 150 + s])),
                        this._dialogInput.css("left", this._pos[0] + 20 + "px").css("top", this._pos[1] + "px"),
                        (n.settings.onSelect = a),
                        (this._inDialog = !0),
                        this.dpDiv.addClass(this._dialogClass),
                        this._showDatepicker(this._dialogInput[0]),
                    V.blockUI && V.blockUI(this.dpDiv),
                        V.data(this._dialogInput[0], "datepicker", n),
                        this
                );
            },
            _destroyDatepicker: function (e) {
                var t,
                    a = V(e),
                    i = V.data(e, "datepicker");
                a.hasClass(this.markerClassName) &&
                ((t = e.nodeName.toLowerCase()),
                    V.removeData(e, "datepicker"),
                    "input" === t
                        ? (i.append.remove(), i.trigger.remove(), a.removeClass(this.markerClassName).off("focus", this._showDatepicker).off("keydown", this._doKeyDown).off("keypress", this._doKeyPress).off("keyup", this._doKeyUp))
                        : ("div" !== t && "span" !== t) || a.removeClass(this.markerClassName).empty(),
                    V.datepicker._hideDatepicker(),
                n === i) &&
                ((n = null), (this._curInst = null));
            },
            _enableDatepicker: function (t) {
                var e,
                    a = V(t),
                    i = V.data(t, "datepicker");
                a.hasClass(this.markerClassName) &&
                ("input" === (e = t.nodeName.toLowerCase())
                    ? ((t.disabled = !1),
                        i.trigger
                            .filter("button")
                            .each(function () {
                                this.disabled = !1;
                            })
                            .end()
                            .filter("img")
                            .css({ opacity: "1.0", cursor: "" }))
                    : ("div" !== e && "span" !== e) || ((i = a.children("." + this._inlineClass)).children().removeClass("ui-state-disabled"), i.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled", !1)),
                    (this._disabledInputs = V.map(this._disabledInputs, function (e) {
                        return e === t ? null : e;
                    })));
            },
            _disableDatepicker: function (t) {
                var e,
                    a = V(t),
                    i = V.data(t, "datepicker");
                a.hasClass(this.markerClassName) &&
                ("input" === (e = t.nodeName.toLowerCase())
                    ? ((t.disabled = !0),
                        i.trigger
                            .filter("button")
                            .each(function () {
                                this.disabled = !0;
                            })
                            .end()
                            .filter("img")
                            .css({ opacity: "0.5", cursor: "default" }))
                    : ("div" !== e && "span" !== e) || ((i = a.children("." + this._inlineClass)).children().addClass("ui-state-disabled"), i.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled", !0)),
                    (this._disabledInputs = V.map(this._disabledInputs, function (e) {
                        return e === t ? null : e;
                    })),
                    (this._disabledInputs[this._disabledInputs.length] = t));
            },
            _isDisabledDatepicker: function (e) {
                if (e) for (var t = 0; t < this._disabledInputs.length; t++) if (this._disabledInputs[t] === e) return !0;
                return !1;
            },
            _getInst: function (e) {
                try {
                    return V.data(e, "datepicker");
                } catch (e) {
                    throw "Missing instance data for this datepicker";
                }
            },
            _optionDatepicker: function (e, t, a) {
                var i,
                    s,
                    r = this._getInst(e);
                if (2 === arguments.length && "string" == typeof t) return "defaults" === t ? V.extend({}, V.datepicker._defaults) : r ? ("all" === t ? V.extend({}, r.settings) : this._get(r, t)) : null;
                (i = t || {}),
                "string" == typeof t && ((i = {})[t] = a),
                r &&
                (this._curInst === r && this._hideDatepicker(),
                    (t = this._getDateDatepicker(e, !0)),
                    (a = this._getMinMaxDate(r, "min")),
                    (s = this._getMinMaxDate(r, "max")),
                    o(r.settings, i),
                null !== a && void 0 !== i.dateFormat && void 0 === i.minDate && (r.settings.minDate = this._formatDate(r, a)),
                null !== s && void 0 !== i.dateFormat && void 0 === i.maxDate && (r.settings.maxDate = this._formatDate(r, s)),
                "disabled" in i && (i.disabled ? this._disableDatepicker(e) : this._enableDatepicker(e)),
                    this._attachments(V(e), r),
                    this._autoSize(r),
                    this._setDate(r, t),
                    this._updateAlternate(r),
                    this._updateDatepicker(r));
            },
            _changeDatepicker: function (e, t, a) {
                this._optionDatepicker(e, t, a);
            },
            _refreshDatepicker: function (e) {
                e = this._getInst(e);
                e && this._updateDatepicker(e);
            },
            _setDateDatepicker: function (e, t) {
                e = this._getInst(e);
                e && (this._setDate(e, t), this._updateDatepicker(e), this._updateAlternate(e));
            },
            _getDateDatepicker: function (e, t) {
                e = this._getInst(e);
                return e && !e.inline && this._setDateFromField(e, t), e ? this._getDate(e) : null;
            },
            _doKeyDown: function (e) {
                var t,
                    a,
                    i = V.datepicker._getInst(e.target),
                    s = !0,
                    r = i.dpDiv.is(".ui-datepicker-rtl");
                if (((i._keyEvent = !0), V.datepicker._datepickerShowing))
                    switch (e.keyCode) {
                        case 9:
                            V.datepicker._hideDatepicker(), (s = !1);
                            break;
                        case 13:
                            return (
                                (a = V("td." + V.datepicker._dayOverClass + ":not(." + V.datepicker._currentClass + ")", i.dpDiv))[0] && V.datepicker._selectDay(e.target, i.selectedMonth, i.selectedYear, a[0]),
                                    (a = V.datepicker._get(i, "onSelect")) ? ((t = V.datepicker._formatDate(i)), a.apply(i.input ? i.input[0] : null, [t, i])) : V.datepicker._hideDatepicker(),
                                    !1
                            );
                        case 27:
                            V.datepicker._hideDatepicker();
                            break;
                        case 33:
                            V.datepicker._adjustDate(e.target, e.ctrlKey ? -V.datepicker._get(i, "stepBigMonths") : -V.datepicker._get(i, "stepMonths"), "M");
                            break;
                        case 34:
                            V.datepicker._adjustDate(e.target, e.ctrlKey ? +V.datepicker._get(i, "stepBigMonths") : +V.datepicker._get(i, "stepMonths"), "M");
                            break;
                        case 35:
                            (e.ctrlKey || e.metaKey) && V.datepicker._clearDate(e.target), (s = e.ctrlKey || e.metaKey);
                            break;
                        case 36:
                            (e.ctrlKey || e.metaKey) && V.datepicker._gotoToday(e.target), (s = e.ctrlKey || e.metaKey);
                            break;
                        case 37:
                            (e.ctrlKey || e.metaKey) && V.datepicker._adjustDate(e.target, r ? 1 : -1, "D"),
                                (s = e.ctrlKey || e.metaKey),
                            e.originalEvent.altKey && V.datepicker._adjustDate(e.target, e.ctrlKey ? -V.datepicker._get(i, "stepBigMonths") : -V.datepicker._get(i, "stepMonths"), "M");
                            break;
                        case 38:
                            (e.ctrlKey || e.metaKey) && V.datepicker._adjustDate(e.target, -7, "D"), (s = e.ctrlKey || e.metaKey);
                            break;
                        case 39:
                            (e.ctrlKey || e.metaKey) && V.datepicker._adjustDate(e.target, r ? -1 : 1, "D"),
                                (s = e.ctrlKey || e.metaKey),
                            e.originalEvent.altKey && V.datepicker._adjustDate(e.target, e.ctrlKey ? +V.datepicker._get(i, "stepBigMonths") : +V.datepicker._get(i, "stepMonths"), "M");
                            break;
                        case 40:
                            (e.ctrlKey || e.metaKey) && V.datepicker._adjustDate(e.target, 7, "D"), (s = e.ctrlKey || e.metaKey);
                            break;
                        default:
                            s = !1;
                    }
                else 36 === e.keyCode && e.ctrlKey ? V.datepicker._showDatepicker(this) : (s = !1);
                s && (e.preventDefault(), e.stopPropagation());
            },
            _doKeyPress: function (e) {
                var t,
                    a = V.datepicker._getInst(e.target);
                if (V.datepicker._get(a, "constrainInput"))
                    return (a = V.datepicker._possibleChars(V.datepicker._get(a, "dateFormat"))), (t = String.fromCharCode(null == e.charCode ? e.keyCode : e.charCode)), e.ctrlKey || e.metaKey || t < " " || !a || -1 < a.indexOf(t);
            },
            _doKeyUp: function (e) {
                e = V.datepicker._getInst(e.target);
                if (e.input.val() !== e.lastVal)
                    try {
                        V.datepicker.parseDate(V.datepicker._get(e, "dateFormat"), e.input ? e.input.val() : null, V.datepicker._getFormatConfig(e)) &&
                        (V.datepicker._setDateFromField(e), V.datepicker._updateAlternate(e), V.datepicker._updateDatepicker(e));
                    } catch (e) {}
                return !0;
            },
            _showDatepicker: function (e) {
                var t, a, i, s;
                "input" !== (e = e.target || e).nodeName.toLowerCase() && (e = V("input", e.parentNode)[0]),
                V.datepicker._isDisabledDatepicker(e) ||
                V.datepicker._lastInput === e ||
                ((s = V.datepicker._getInst(e)),
                V.datepicker._curInst && V.datepicker._curInst !== s && (V.datepicker._curInst.dpDiv.stop(!0, !0), s) && V.datepicker._datepickerShowing && V.datepicker._hideDatepicker(V.datepicker._curInst.input[0]),
                !1 === (a = (a = V.datepicker._get(s, "beforeShow")) ? a.apply(e, [e, s]) : {})) ||
                (o(s.settings, a),
                    (s.lastVal = null),
                    (V.datepicker._lastInput = e),
                    V.datepicker._setDateFromField(s),
                V.datepicker._inDialog && (e.value = ""),
                V.datepicker._pos || ((V.datepicker._pos = V.datepicker._findPos(e)), (V.datepicker._pos[1] += e.offsetHeight)),
                    (t = !1),
                    V(e)
                        .parents()
                        .each(function () {
                            return !(t |= "fixed" === V(this).css("position"));
                        }),
                    (a = { left: V.datepicker._pos[0], top: V.datepicker._pos[1] }),
                    (V.datepicker._pos = null),
                    s.dpDiv.empty(),
                    s.dpDiv.css({ position: "absolute", display: "block", top: "-1000px" }),
                    V.datepicker._updateDatepicker(s),
                    (a = V.datepicker._checkOffset(s, a, t)),
                    s.dpDiv.css({ position: V.datepicker._inDialog && V.blockUI ? "static" : t ? "fixed" : "absolute", display: "none", left: a.left + "px", top: a.top + "px" }),
                    s.inline) ||
                ((a = V.datepicker._get(s, "showAnim")),
                    (i = V.datepicker._get(s, "duration")),
                    s.dpDiv.css(
                        "z-index",
                        (function (e) {
                            for (var t; e.length && e[0] !== document; ) {
                                if (("absolute" === (t = e.css("position")) || "relative" === t || "fixed" === t) && ((t = parseInt(e.css("zIndex"), 10)), !isNaN(t)) && 0 !== t) return t;
                                e = e.parent();
                            }
                            return 0;
                        })(V(e)) + 1
                    ),
                    (V.datepicker._datepickerShowing = !0),
                    V.effects && V.effects.effect[a] ? s.dpDiv.show(a, V.datepicker._get(s, "showOptions"), i) : s.dpDiv[a || "show"](a ? i : null),
                V.datepicker._shouldFocusInput(s) && s.input.trigger("focus"),
                    (V.datepicker._curInst = s));
            },
            _updateDatepicker: function (e) {
                (this.maxRows = 4), (n = e).dpDiv.empty().append(this._generateHTML(e)), this._attachHandlers(e);
                var t,
                    a = this._getNumberOfMonths(e),
                    i = a[1],
                    s = e.dpDiv.find("." + this._dayOverClass + " a"),
                    r = V.datepicker._get(e, "onUpdateDatepicker");
                0 < s.length && d.apply(s.get(0)),
                    e.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""),
                1 < i && e.dpDiv.addClass("ui-datepicker-multi-" + i).css("width", 17 * i + "em"),
                    e.dpDiv[(1 !== a[0] || 1 !== a[1] ? "add" : "remove") + "Class"]("ui-datepicker-multi"),
                    e.dpDiv[(this._get(e, "isRTL") ? "add" : "remove") + "Class"]("ui-datepicker-rtl"),
                e === V.datepicker._curInst && V.datepicker._datepickerShowing && V.datepicker._shouldFocusInput(e) && e.input.trigger("focus"),
                e.yearshtml &&
                ((t = e.yearshtml),
                    setTimeout(function () {
                        t === e.yearshtml && e.yearshtml && e.dpDiv.find("select.ui-datepicker-year").first().replaceWith(e.yearshtml), (t = e.yearshtml = null);
                    }, 0)),
                r && r.apply(e.input ? e.input[0] : null, [e]);
            },
            _shouldFocusInput: function (e) {
                return e.input && e.input.is(":visible") && !e.input.is(":disabled");
            },
            _checkOffset: function (e, t, a) {
                var i = e.dpDiv.outerWidth(),
                    s = e.dpDiv.outerHeight(),
                    r = e.input ? e.input.outerWidth() : 0,
                    n = e.input ? e.input.outerHeight() : 0,
                    d = document.documentElement.clientWidth + (a ? 0 : V(document).scrollLeft()),
                    o = document.documentElement.clientHeight + (a ? 0 : V(document).scrollTop());
                return (
                    (t.left -= this._get(e, "isRTL") ? i - r : 0),
                        (t.left -= a && t.left === e.input.offset().left ? V(document).scrollLeft() : 0),
                        (t.top -= a && t.top === e.input.offset().top + n ? V(document).scrollTop() : 0),
                        (t.left -= Math.min(t.left, d < t.left + i && i < d ? Math.abs(t.left + i - d) : 0)),
                        (t.top -= Math.min(t.top, o < t.top + s && s < o ? Math.abs(s + n) : 0)),
                        t
                );
            },
            _findPos: function (e) {
                for (var t = this._getInst(e), a = this._get(t, "isRTL"); e && ("hidden" === e.type || 1 !== e.nodeType || V.expr.pseudos.hidden(e)); ) e = e[a ? "previousSibling" : "nextSibling"];
                return [(t = V(e).offset()).left, t.top];
            },
            _hideDatepicker: function (e) {
                var t,
                    a,
                    i = this._curInst;
                !i ||
                (e && i !== V.data(e, "datepicker")) ||
                (this._datepickerShowing &&
                    ((e = this._get(i, "showAnim")),
                        (a = this._get(i, "duration")),
                        (t = function () {
                            V.datepicker._tidyDialog(i);
                        }),
                        V.effects && V.effects.effect[e] ? i.dpDiv.hide(e, V.datepicker._get(i, "showOptions"), a, t) : i.dpDiv["slideDown" === e ? "slideUp" : "fadeIn" === e ? "fadeOut" : "hide"](e ? a : null, t),
                    e || t(),
                        (this._datepickerShowing = !1),
                    (a = this._get(i, "onClose")) && a.apply(i.input ? i.input[0] : null, [i.input ? i.input.val() : "", i]),
                        (this._lastInput = null),
                    this._inDialog && (this._dialogInput.css({ position: "absolute", left: "0", top: "-100px" }), V.blockUI) && (V.unblockUI(), V("body").append(this.dpDiv)),
                        (this._inDialog = !1)));
            },
            _tidyDialog: function (e) {
                e.dpDiv.removeClass(this._dialogClass).off(".ui-datepicker-calendar");
            },
            _checkExternalClick: function (e) {
                var t;
                V.datepicker._curInst &&
                ((e = V(e.target)),
                    (t = V.datepicker._getInst(e[0])),
                !(
                    e[0].id === V.datepicker._mainDivId ||
                    0 !== e.parents("#" + V.datepicker._mainDivId).length ||
                    e.hasClass(V.datepicker.markerClassName) ||
                    e.closest("." + V.datepicker._triggerClass).length ||
                    !V.datepicker._datepickerShowing ||
                    (V.datepicker._inDialog && V.blockUI)
                ) ||
                (e.hasClass(V.datepicker.markerClassName) && V.datepicker._curInst !== t)) &&
                V.datepicker._hideDatepicker();
            },
            _adjustDate: function (e, t, a) {
                var e = V(e),
                    i = this._getInst(e[0]);
                this._isDisabledDatepicker(e[0]) || (this._adjustInstDate(i, t, a), this._updateDatepicker(i));
            },
            _gotoToday: function (e) {
                var t,
                    e = V(e),
                    a = this._getInst(e[0]);
                this._get(a, "gotoCurrent") && a.currentDay
                    ? ((a.selectedDay = a.currentDay), (a.drawMonth = a.selectedMonth = a.currentMonth), (a.drawYear = a.selectedYear = a.currentYear))
                    : ((t = new Date()), (a.selectedDay = t.getDate()), (a.drawMonth = a.selectedMonth = t.getMonth()), (a.drawYear = a.selectedYear = t.getFullYear())),
                    this._notifyChange(a),
                    this._adjustDate(e);
            },
            _selectMonthYear: function (e, t, a) {
                var e = V(e),
                    i = this._getInst(e[0]);
                (i["selected" + ("M" === a ? "Month" : "Year")] = i["draw" + ("M" === a ? "Month" : "Year")] = parseInt(t.options[t.selectedIndex].value, 10)), this._notifyChange(i), this._adjustDate(e);
            },
            _selectDay: function (e, t, a, i) {
                var s = V(e);
                V(i).hasClass(this._unselectableClass) ||
                this._isDisabledDatepicker(s[0]) ||
                (((s = this._getInst(s[0])).selectedDay = s.currentDay = parseInt(V("a", i).attr("data-date"))),
                    (s.selectedMonth = s.currentMonth = t),
                    (s.selectedYear = s.currentYear = a),
                    this._selectDate(e, this._formatDate(s, s.currentDay, s.currentMonth, s.currentYear)));
            },
            _clearDate: function (e) {
                e = V(e);
                this._selectDate(e, "");
            },
            _selectDate: function (e, t) {
                var a,
                    e = V(e),
                    e = this._getInst(e[0]);
                (t = null != t ? t : this._formatDate(e)),
                e.input && e.input.val(t),
                    this._updateAlternate(e),
                    (a = this._get(e, "onSelect")) ? a.apply(e.input ? e.input[0] : null, [t, e]) : e.input && e.input.trigger("change"),
                    e.inline ? this._updateDatepicker(e) : (this._hideDatepicker(), (this._lastInput = e.input[0]), "object" != typeof e.input[0] && e.input.trigger("focus"), (this._lastInput = null));
            },
            _updateAlternate: function (e) {
                var t,
                    a,
                    i = this._get(e, "altField");
                i && ((a = this._get(e, "altFormat") || this._get(e, "dateFormat")), (t = this._getDate(e)), (a = this.formatDate(a, t, this._getFormatConfig(e))), V(document).find(i).val(a));
            },
            noWeekends: function (e) {
                e = e.getDay();
                return [0 < e && e < 6, ""];
            },
            iso8601Week: function (e) {
                var t,
                    e = new Date(e.getTime());
                return e.setDate(e.getDate() + 4 - (e.getDay() || 7)), (t = e.getTime()), e.setMonth(0), e.setDate(1), Math.floor(Math.round((t - e) / 864e5) / 7) + 1;
            },
            parseDate: function (t, s, e) {
                if (null == t || null == s) throw "Invalid arguments";
                if ("" === (s = "object" == typeof s ? s.toString() : s + "")) return null;
                for (
                    var a,
                        i,
                        r = 0,
                        n = (e ? e.shortYearCutoff : null) || this._defaults.shortYearCutoff,
                        n = "string" != typeof n ? n : (new Date().getFullYear() % 100) + parseInt(n, 10),
                        d = (e ? e.dayNamesShort : null) || this._defaults.dayNamesShort,
                        o = (e ? e.dayNames : null) || this._defaults.dayNames,
                        c = (e ? e.monthNamesShort : null) || this._defaults.monthNamesShort,
                        l = (e ? e.monthNames : null) || this._defaults.monthNames,
                        u = -1,
                        h = -1,
                        p = -1,
                        g = -1,
                        _ = !1,
                        f = function (e) {
                            e = y + 1 < t.length && t.charAt(y + 1) === e;
                            return e && y++, e;
                        },
                        k = function (e) {
                            var t = f(e),
                                t = "@" === e ? 14 : "!" === e ? 20 : "y" === e && t ? 4 : "o" === e ? 3 : 2,
                                e = new RegExp("^\\d{" + ("y" === e ? t : 1) + "," + t + "}"),
                                t = s.substring(r).match(e);
                            if (t) return (r += t[0].length), parseInt(t[0], 10);
                            throw "Missing number at position " + r;
                        },
                        D = function (e, t, a) {
                            var i = -1,
                                e = V.map(f(e) ? a : t, function (e, t) {
                                    return [[t, e]];
                                }).sort(function (e, t) {
                                    return -(e[1].length - t[1].length);
                                });
                            if (
                                (V.each(e, function (e, t) {
                                    var a = t[1];
                                    if (s.substr(r, a.length).toLowerCase() === a.toLowerCase()) return (i = t[0]), (r += a.length), !1;
                                }),
                                -1 !== i)
                            )
                                return i + 1;
                            throw "Unknown name at position " + r;
                        },
                        m = function () {
                            if (s.charAt(r) !== t.charAt(y)) throw "Unexpected literal at position " + r;
                            r++;
                        },
                        y = 0;
                    y < t.length;
                    y++
                )
                    if (_) "'" !== t.charAt(y) || f("'") ? m() : (_ = !1);
                    else
                        switch (t.charAt(y)) {
                            case "d":
                                p = k("d");
                                break;
                            case "D":
                                D("D", d, o);
                                break;
                            case "o":
                                g = k("o");
                                break;
                            case "m":
                                h = k("m");
                                break;
                            case "M":
                                h = D("M", c, l);
                                break;
                            case "y":
                                u = k("y");
                                break;
                            case "@":
                                (u = (i = new Date(k("@"))).getFullYear()), (h = i.getMonth() + 1), (p = i.getDate());
                                break;
                            case "!":
                                (u = (i = new Date((k("!") - this._ticksTo1970) / 1e4)).getFullYear()), (h = i.getMonth() + 1), (p = i.getDate());
                                break;
                            case "'":
                                f("'") ? m() : (_ = !0);
                                break;
                            default:
                                m();
                        }
                if (r < s.length && ((e = s.substr(r)), !/^\s+/.test(e))) throw "Extra/unparsed characters found in date: " + e;
                if ((-1 === u ? (u = new Date().getFullYear()) : u < 100 && (u += new Date().getFullYear() - (new Date().getFullYear() % 100) + (u <= n ? 0 : -100)), -1 < g))
                    for (h = 1, p = g; ; ) {
                        if (p <= (a = this._getDaysInMonth(u, h - 1))) break;
                        h++, (p -= a);
                    }
                if ((i = this._daylightSavingAdjust(new Date(u, h - 1, p))).getFullYear() !== u || i.getMonth() + 1 !== h || i.getDate() !== p) throw "Invalid date";
                return i;
            },
            ATOM: "yy-mm-dd",
            COOKIE: "D, dd M yy",
            ISO_8601: "yy-mm-dd",
            RFC_822: "D, d M y",
            RFC_850: "DD, dd-M-y",
            RFC_1036: "D, d M y",
            RFC_1123: "D, d M yy",
            RFC_2822: "D, d M yy",
            RSS: "D, d M y",
            TICKS: "!",
            TIMESTAMP: "@",
            W3C: "yy-mm-dd",
            _ticksTo1970: 24 * (718685 + Math.floor(492.5) - Math.floor(19.7) + Math.floor(4.925)) * 60 * 60 * 1e7,
            formatDate: function (t, e, a) {
                if (!e) return "";
                function i(e, t, a) {
                    var i = "" + t;
                    if (l(e)) for (; i.length < a; ) i = "0" + i;
                    return i;
                }
                function s(e, t, a, i) {
                    return (l(e) ? i : a)[t];
                }
                var r,
                    n = (a ? a.dayNamesShort : null) || this._defaults.dayNamesShort,
                    d = (a ? a.dayNames : null) || this._defaults.dayNames,
                    o = (a ? a.monthNamesShort : null) || this._defaults.monthNamesShort,
                    c = (a ? a.monthNames : null) || this._defaults.monthNames,
                    l = function (e) {
                        e = r + 1 < t.length && t.charAt(r + 1) === e;
                        return e && r++, e;
                    },
                    u = "",
                    h = !1;
                if (e)
                    for (r = 0; r < t.length; r++)
                        if (h) "'" !== t.charAt(r) || l("'") ? (u += t.charAt(r)) : (h = !1);
                        else
                            switch (t.charAt(r)) {
                                case "d":
                                    u += i("d", e.getDate(), 2);
                                    break;
                                case "D":
                                    u += s("D", e.getDay(), n, d);
                                    break;
                                case "o":
                                    u += i("o", Math.round((new Date(e.getFullYear(), e.getMonth(), e.getDate()).getTime() - new Date(e.getFullYear(), 0, 0).getTime()) / 864e5), 3);
                                    break;
                                case "m":
                                    u += i("m", e.getMonth() + 1, 2);
                                    break;
                                case "M":
                                    u += s("M", e.getMonth(), o, c);
                                    break;
                                case "y":
                                    u += l("y") ? e.getFullYear() : (e.getFullYear() % 100 < 10 ? "0" : "") + (e.getFullYear() % 100);
                                    break;
                                case "@":
                                    u += e.getTime();
                                    break;
                                case "!":
                                    u += 1e4 * e.getTime() + this._ticksTo1970;
                                    break;
                                case "'":
                                    l("'") ? (u += "'") : (h = !0);
                                    break;
                                default:
                                    u += t.charAt(r);
                            }
                return u;
            },
            _possibleChars: function (t) {
                for (
                    var e = "",
                        a = !1,
                        i = function (e) {
                            e = s + 1 < t.length && t.charAt(s + 1) === e;
                            return e && s++, e;
                        },
                        s = 0;
                    s < t.length;
                    s++
                )
                    if (a) "'" !== t.charAt(s) || i("'") ? (e += t.charAt(s)) : (a = !1);
                    else
                        switch (t.charAt(s)) {
                            case "d":
                            case "m":
                            case "y":
                            case "@":
                                e += "0123456789";
                                break;
                            case "D":
                            case "M":
                                return null;
                            case "'":
                                i("'") ? (e += "'") : (a = !0);
                                break;
                            default:
                                e += t.charAt(s);
                        }
                return e;
            },
            _get: function (e, t) {
                return (void 0 !== e.settings[t] ? e.settings : this._defaults)[t];
            },
            _setDateFromField: function (e, t) {
                if (e.input.val() !== e.lastVal) {
                    var a = this._get(e, "dateFormat"),
                        i = (e.lastVal = e.input ? e.input.val() : null),
                        s = this._getDefaultDate(e),
                        r = s,
                        n = this._getFormatConfig(e);
                    try {
                        r = this.parseDate(a, i, n) || s;
                    } catch (e) {
                        i = t ? "" : i;
                    }
                    (e.selectedDay = r.getDate()),
                        (e.drawMonth = e.selectedMonth = r.getMonth()),
                        (e.drawYear = e.selectedYear = r.getFullYear()),
                        (e.currentDay = i ? r.getDate() : 0),
                        (e.currentMonth = i ? r.getMonth() : 0),
                        (e.currentYear = i ? r.getFullYear() : 0),
                        this._adjustInstDate(e);
                }
            },
            _getDefaultDate: function (e) {
                return this._restrictMinMax(e, this._determineDate(e, this._get(e, "defaultDate"), new Date()));
            },
            _determineDate: function (d, e, t) {
                var a,
                    i =
                        null == e || "" === e
                            ? t
                            : "string" == typeof e
                                ? (function (e) {
                                    try {
                                        return V.datepicker.parseDate(V.datepicker._get(d, "dateFormat"), e, V.datepicker._getFormatConfig(d));
                                    } catch (e) {}
                                    for (
                                        var t = (e.toLowerCase().match(/^c/) ? V.datepicker._getDate(d) : null) || new Date(), a = t.getFullYear(), i = t.getMonth(), s = t.getDate(), r = /([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g, n = r.exec(e);
                                        n;
                                    
                                    ) {
                                        switch (n[2] || "d") {
                                            case "d":
                                            case "D":
                                                s += parseInt(n[1], 10);
                                                break;
                                            case "w":
                                            case "W":
                                                s += 7 * parseInt(n[1], 10);
                                                break;
                                            case "m":
                                            case "M":
                                                (i += parseInt(n[1], 10)), (s = Math.min(s, V.datepicker._getDaysInMonth(a, i)));
                                                break;
                                            case "y":
                                            case "Y":
                                                (a += parseInt(n[1], 10)), (s = Math.min(s, V.datepicker._getDaysInMonth(a, i)));
                                        }
                                        n = r.exec(e);
                                    }
                                    return new Date(a, i, s);
                                })(e)
                                : "number" == typeof e
                                    ? isNaN(e)
                                        ? t
                                        : ((i = e), (a = new Date()).setDate(a.getDate() + i), a)
                                    : new Date(e.getTime());
                return (i = i && "Invalid Date" === i.toString() ? t : i) && (i.setHours(0), i.setMinutes(0), i.setSeconds(0), i.setMilliseconds(0)), this._daylightSavingAdjust(i);
            },
            _daylightSavingAdjust: function (e) {
                return e ? (e.setHours(12 < e.getHours() ? e.getHours() + 2 : 0), e) : null;
            },
            _setDate: function (e, t, a) {
                var i = !t,
                    s = e.selectedMonth,
                    r = e.selectedYear,
                    t = this._restrictMinMax(e, this._determineDate(e, t, new Date()));
                (e.selectedDay = e.currentDay = t.getDate()),
                    (e.drawMonth = e.selectedMonth = e.currentMonth = t.getMonth()),
                    (e.drawYear = e.selectedYear = e.currentYear = t.getFullYear()),
                (s === e.selectedMonth && r === e.selectedYear) || a || this._notifyChange(e),
                    this._adjustInstDate(e),
                e.input && e.input.val(i ? "" : this._formatDate(e));
            },
            _getDate: function (e) {
                return !e.currentYear || (e.input && "" === e.input.val()) ? null : this._daylightSavingAdjust(new Date(e.currentYear, e.currentMonth, e.currentDay));
            },
            _attachHandlers: function (e) {
                var t = this._get(e, "stepMonths"),
                    a = "#" + e.id.replace(/\\\\/g, "\\");
                e.dpDiv.find("[data-handler]").map(function () {
                    var e = {
                        prev: function () {
                            V.datepicker._adjustDate(a, -t, "M");
                        },
                        next: function () {
                            V.datepicker._adjustDate(a, +t, "M");
                        },
                        hide: function () {
                            V.datepicker._hideDatepicker();
                        },
                        today: function () {
                            V.datepicker._gotoToday(a);
                        },
                        selectDay: function () {
                            return V.datepicker._selectDay(a, +this.getAttribute("data-month"), +this.getAttribute("data-year"), this), !1;
                        },
                        selectMonth: function () {
                            return V.datepicker._selectMonthYear(a, this, "M"), !1;
                        },
                        selectYear: function () {
                            return V.datepicker._selectMonthYear(a, this, "Y"), !1;
                        },
                    };
                    V(this).on(this.getAttribute("data-event"), e[this.getAttribute("data-handler")]);
                });
            },
            _generateHTML: function (e) {
                var t,
                    a,
                    i,
                    s,
                    r,
                    O,
                    L,
                    E,
                    R,
                    n,
                    d,
                    H,
                    o,
                    c,
                    l,
                    u,
                    h,
                    p,
                    g,
                    _,
                    f,
                    k,
                    P,
                    D,
                    m,
                    W,
                    y,
                    U,
                    z,
                    v,
                    M,
                    b,
                    w = new Date(),
                    B = this._daylightSavingAdjust(new Date(w.getFullYear(), w.getMonth(), w.getDate())),
                    C = this._get(e, "isRTL"),
                    w = this._get(e, "showButtonPanel"),
                    I = this._get(e, "hideIfNoPrevNext"),
                    x = this._get(e, "navigationAsDateFormat"),
                    Y = this._getNumberOfMonths(e),
                    N = this._get(e, "showCurrentAtPos"),
                    S = this._get(e, "stepMonths"),
                    J = 1 !== Y[0] || 1 !== Y[1],
                    T = this._daylightSavingAdjust(e.currentDay ? new Date(e.currentYear, e.currentMonth, e.currentDay) : new Date(9999, 9, 9)),
                    F = this._getMinMaxDate(e, "min"),
                    A = this._getMinMaxDate(e, "max"),
                    K = e.drawMonth - N,
                    j = e.drawYear;
                if ((K < 0 && ((K += 12), j--), A))
                    for (t = this._daylightSavingAdjust(new Date(A.getFullYear(), A.getMonth() - Y[0] * Y[1] + 1, A.getDate())), t = F && t < F ? F : t; this._daylightSavingAdjust(new Date(j, K, 1)) > t; ) --K < 0 && ((K = 11), j--);
                for (
                    e.drawMonth = K,
                        e.drawYear = j,
                        N = this._get(e, "prevText"),
                        N = x ? this.formatDate(N, this._daylightSavingAdjust(new Date(j, K - S, 1)), this._getFormatConfig(e)) : N,
                        a = this._canAdjustMonth(e, -1, j, K)
                            ? V("<a>")
                                .attr({ class: "ui-datepicker-prev ui-corner-all", "data-handler": "prev", "data-event": "click", title: N })
                                .append(
                                    V("<span>")
                                        .addClass("ui-icon ui-icon-circle-triangle-" + (C ? "e" : "w"))
                                        .text(N)
                                )[0].outerHTML
                            : I
                                ? ""
                                : V("<a>")
                                    .attr({ class: "ui-datepicker-prev ui-corner-all ui-state-disabled", title: N })
                                    .append(
                                        V("<span>")
                                            .addClass("ui-icon ui-icon-circle-triangle-" + (C ? "e" : "w"))
                                            .text(N)
                                    )[0].outerHTML,
                        N = this._get(e, "nextText"),
                        N = x ? this.formatDate(N, this._daylightSavingAdjust(new Date(j, K + S, 1)), this._getFormatConfig(e)) : N,
                        i = this._canAdjustMonth(e, 1, j, K)
                            ? V("<a>")
                                .attr({ class: "ui-datepicker-next ui-corner-all", "data-handler": "next", "data-event": "click", title: N })
                                .append(
                                    V("<span>")
                                        .addClass("ui-icon ui-icon-circle-triangle-" + (C ? "w" : "e"))
                                        .text(N)
                                )[0].outerHTML
                            : I
                                ? ""
                                : V("<a>")
                                    .attr({ class: "ui-datepicker-next ui-corner-all ui-state-disabled", title: N })
                                    .append(
                                        V("<span>")
                                            .attr("class", "ui-icon ui-icon-circle-triangle-" + (C ? "w" : "e"))
                                            .text(N)
                                    )[0].outerHTML,
                        S = this._get(e, "currentText"),
                        I = this._get(e, "gotoCurrent") && e.currentDay ? T : B,
                        S = x ? this.formatDate(S, I, this._getFormatConfig(e)) : S,
                        N = "",
                    e.inline ||
                    (N = V("<button>").attr({ type: "button", class: "ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all", "data-handler": "hide", "data-event": "click" }).text(this._get(e, "closeText"))[0]
                        .outerHTML),
                        x = "",
                    w &&
                    (x = V("<div class='ui-datepicker-buttonpane ui-widget-content'>")
                        .append(C ? N : "")
                        .append(
                            this._isInRange(e, I)
                                ? V("<button>").attr({ type: "button", class: "ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all", "data-handler": "today", "data-event": "click" }).text(S)
                                : ""
                        )
                        .append(C ? "" : N)[0].outerHTML),
                        s = parseInt(this._get(e, "firstDay"), 10),
                        s = isNaN(s) ? 0 : s,
                        r = this._get(e, "showWeek"),
                        O = this._get(e, "dayNames"),
                        L = this._get(e, "dayNamesMin"),
                        E = this._get(e, "monthNames"),
                        R = this._get(e, "monthNamesShort"),
                        n = this._get(e, "beforeShowDay"),
                        d = this._get(e, "showOtherMonths"),
                        H = this._get(e, "selectOtherMonths"),
                        o = this._getDefaultDate(e),
                        c = "",
                        u = 0;
                    u < Y[0];
                    u++
                ) {
                    for (h = "", this.maxRows = 4, p = 0; p < Y[1]; p++) {
                        if (((g = this._daylightSavingAdjust(new Date(j, K, e.selectedDay))), (_ = " ui-corner-all"), (f = ""), J)) {
                            if (((f += "<div class='ui-datepicker-group"), 1 < Y[1]))
                                switch (p) {
                                    case 0:
                                        (f += " ui-datepicker-group-first"), (_ = " ui-corner-" + (C ? "right" : "left"));
                                        break;
                                    case Y[1] - 1:
                                        (f += " ui-datepicker-group-last"), (_ = " ui-corner-" + (C ? "left" : "right"));
                                        break;
                                    default:
                                        (f += " ui-datepicker-group-middle"), (_ = "");
                                }
                            f += "'>";
                        }
                        for (
                            f +=
                                "<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix" +
                                _ +
                                "'>" +
                                (/all|left/.test(_) && 0 === u ? (C ? i : a) : "") +
                                (/all|right/.test(_) && 0 === u ? (C ? a : i) : "") +
                                this._generateMonthYearHeader(e, K, j, F, A, 0 < u || 0 < p, E, R) +
                                "</div><table class='ui-datepicker-calendar'><thead><tr>",
                                k = r ? "<th class='ui-datepicker-week-col'>" + this._get(e, "weekHeader") + "</th>" : "",
                                l = 0;
                            l < 7;
                            l++
                        )
                            k += "<th scope='col'" + (5 <= (l + s + 6) % 7 ? " class='ui-datepicker-week-end'" : "") + "><span title='" + O[(P = (l + s) % 7)] + "'>" + L[P] + "</span></th>";
                        for (
                            f += k + "</tr></thead><tbody>",
                                m = this._getDaysInMonth(j, K),
                            j === e.selectedYear && K === e.selectedMonth && (e.selectedDay = Math.min(e.selectedDay, m)),
                                D = (this._getFirstDayOfMonth(j, K) - s + 7) % 7,
                                m = Math.ceil((D + m) / 7),
                                W = J && this.maxRows > m ? this.maxRows : m,
                                this.maxRows = W,
                                y = this._daylightSavingAdjust(new Date(j, K, 1 - D)),
                                U = 0;
                            U < W;
                            U++
                        ) {
                            for (f += "<tr>", z = r ? "<td class='ui-datepicker-week-col'>" + this._get(e, "calculateWeek")(y) + "</td>" : "", l = 0; l < 7; l++)
                                (v = n ? n.apply(e.input ? e.input[0] : null, [y]) : [!0, ""]),
                                    (b = ((M = y.getMonth() !== K) && !H) || !v[0] || (F && y < F) || (A && A < y)),
                                    (z +=
                                        "<td class='" +
                                        (5 <= (l + s + 6) % 7 ? " ui-datepicker-week-end" : "") +
                                        (M ? " ui-datepicker-other-month" : "") +
                                        ((y.getTime() === g.getTime() && K === e.selectedMonth && e._keyEvent) || (o.getTime() === y.getTime() && o.getTime() === g.getTime()) ? " " + this._dayOverClass : "") +
                                        (b ? " " + this._unselectableClass + " ui-state-disabled" : "") +
                                        (M && !d ? "" : " " + v[1] + (y.getTime() === T.getTime() ? " " + this._currentClass : "") + (y.getTime() === B.getTime() ? " ui-datepicker-today" : "")) +
                                        "'" +
                                        ((M && !d) || !v[2] ? "" : " title='" + v[2].replace(/'/g, "&#39;") + "'") +
                                        (b ? "" : " data-handler='selectDay' data-event='click' data-month='" + y.getMonth() + "' data-year='" + y.getFullYear() + "'") +
                                        ">" +
                                        (M && !d
                                            ? "&#xa0;"
                                            : b
                                                ? "<span class='ui-state-default'>" + y.getDate() + "</span>"
                                                : "<a class='ui-state-default" +
                                                (y.getTime() === B.getTime() ? " ui-state-highlight" : "") +
                                                (y.getTime() === T.getTime() ? " ui-state-active" : "") +
                                                (M ? " ui-priority-secondary" : "") +
                                                "' href='#' aria-current='" +
                                                (y.getTime() === T.getTime() ? "true" : "false") +
                                                "' data-date='" +
                                                y.getDate() +
                                                "'>" +
                                                y.getDate() +
                                                "</a>") +
                                        "</td>"),
                                    y.setDate(y.getDate() + 1),
                                    (y = this._daylightSavingAdjust(y));
                            f += z + "</tr>";
                        }
                        11 < ++K && ((K = 0), j++), (h += f += "</tbody></table>" + (J ? "</div>" + (0 < Y[0] && p === Y[1] - 1 ? "<div class='ui-datepicker-row-break'></div>" : "") : ""));
                    }
                    c += h;
                }
                return (c += x), (e._keyEvent = !1), c;
            },
            _generateMonthYearHeader: function (e, t, a, i, s, r, n, d) {
                var o,
                    c,
                    l,
                    u,
                    h,
                    p,
                    g = this._get(e, "changeMonth"),
                    _ = this._get(e, "changeYear"),
                    f = this._get(e, "showMonthAfterYear"),
                    k = this._get(e, "selectMonthLabel"),
                    D = this._get(e, "selectYearLabel"),
                    m = "<div class='ui-datepicker-title'>",
                    y = "";
                if (r || !g) y += "<span class='ui-datepicker-month'>" + n[t] + "</span>";
                else {
                    for (o = i && i.getFullYear() === a, c = s && s.getFullYear() === a, y += "<select class='ui-datepicker-month' aria-label='" + k + "' data-handler='selectMonth' data-event='change'>", l = 0; l < 12; l++)
                        (!o || l >= i.getMonth()) && (!c || l <= s.getMonth()) && (y += "<option value='" + l + "'" + (l === t ? " selected='selected'" : "") + ">" + d[l] + "</option>");
                    y += "</select>";
                }
                if ((f || (m += y + (!r && g && _ ? "" : "&#xa0;")), !e.yearshtml))
                    if (((e.yearshtml = ""), r || !_)) m += "<span class='ui-datepicker-year'>" + a + "</span>";
                    else {
                        for (
                            n = this._get(e, "yearRange").split(":"),
                                u = new Date().getFullYear(),
                                h = (k = function (e) {
                                    e = e.match(/c[+\-].*/) ? a + parseInt(e.substring(1), 10) : e.match(/[+\-].*/) ? u + parseInt(e, 10) : parseInt(e, 10);
                                    return isNaN(e) ? u : e;
                                })(n[0]),
                                p = Math.max(h, k(n[1] || "")),
                                h = i ? Math.max(h, i.getFullYear()) : h,
                                p = s ? Math.min(p, s.getFullYear()) : p,
                                e.yearshtml += "<select class='ui-datepicker-year' aria-label='" + D + "' data-handler='selectYear' data-event='change'>";
                            h <= p;
                            h++
                        )
                            e.yearshtml += "<option value='" + h + "'" + (h === a ? " selected='selected'" : "") + ">" + h + "</option>";
                        (e.yearshtml += "</select>"), (m += e.yearshtml), (e.yearshtml = null);
                    }
                return (m += this._get(e, "yearSuffix")), f && (m += (!r && g && _ ? "" : "&#xa0;") + y), (m += "</div>");
            },
            _adjustInstDate: function (e, t, a) {
                var i = e.selectedYear + ("Y" === a ? t : 0),
                    s = e.selectedMonth + ("M" === a ? t : 0),
                    t = Math.min(e.selectedDay, this._getDaysInMonth(i, s)) + ("D" === a ? t : 0),
                    i = this._restrictMinMax(e, this._daylightSavingAdjust(new Date(i, s, t)));
                (e.selectedDay = i.getDate()), (e.drawMonth = e.selectedMonth = i.getMonth()), (e.drawYear = e.selectedYear = i.getFullYear()), ("M" !== a && "Y" !== a) || this._notifyChange(e);
            },
            _restrictMinMax: function (e, t) {
                var a = this._getMinMaxDate(e, "min"),
                    e = this._getMinMaxDate(e, "max"),
                    a = a && t < a ? a : t;
                return e && e < a ? e : a;
            },
            _notifyChange: function (e) {
                var t = this._get(e, "onChangeMonthYear");
                t && t.apply(e.input ? e.input[0] : null, [e.selectedYear, e.selectedMonth + 1, e]);
            },
            _getNumberOfMonths: function (e) {
                e = this._get(e, "numberOfMonths");
                return null == e ? [1, 1] : "number" == typeof e ? [1, e] : e;
            },
            _getMinMaxDate: function (e, t) {
                return this._determineDate(e, this._get(e, t + "Date"), null);
            },
            _getDaysInMonth: function (e, t) {
                return 32 - this._daylightSavingAdjust(new Date(e, t, 32)).getDate();
            },
            _getFirstDayOfMonth: function (e, t) {
                return new Date(e, t, 1).getDay();
            },
            _canAdjustMonth: function (e, t, a, i) {
                var s = this._getNumberOfMonths(e),
                    a = this._daylightSavingAdjust(new Date(a, i + (t < 0 ? t : s[0] * s[1]), 1));
                return t < 0 && a.setDate(this._getDaysInMonth(a.getFullYear(), a.getMonth())), this._isInRange(e, a);
            },
            _isInRange: function (e, t) {
                var a,
                    i = this._getMinMaxDate(e, "min"),
                    s = this._getMinMaxDate(e, "max"),
                    r = null,
                    n = null,
                    e = this._get(e, "yearRange");
                return (
                    e && ((e = e.split(":")), (a = new Date().getFullYear()), (r = parseInt(e[0], 10)), (n = parseInt(e[1], 10)), e[0].match(/[+\-].*/) && (r += a), e[1].match(/[+\-].*/)) && (n += a),
                    (!i || t.getTime() >= i.getTime()) && (!s || t.getTime() <= s.getTime()) && (!r || t.getFullYear() >= r) && (!n || t.getFullYear() <= n)
                );
            },
            _getFormatConfig: function (e) {
                var t = this._get(e, "shortYearCutoff");
                return {
                    shortYearCutoff: "string" != typeof t ? t : (new Date().getFullYear() % 100) + parseInt(t, 10),
                    dayNamesShort: this._get(e, "dayNamesShort"),
                    dayNames: this._get(e, "dayNames"),
                    monthNamesShort: this._get(e, "monthNamesShort"),
                    monthNames: this._get(e, "monthNames"),
                };
            },
            _formatDate: function (e, t, a, i) {
                t || ((e.currentDay = e.selectedDay), (e.currentMonth = e.selectedMonth), (e.currentYear = e.selectedYear));
                i = t ? ("object" == typeof t ? t : this._daylightSavingAdjust(new Date(i, a, t))) : this._daylightSavingAdjust(new Date(e.currentYear, e.currentMonth, e.currentDay));
                return this.formatDate(this._get(e, "dateFormat"), i, this._getFormatConfig(e));
            },
        }),
        (V.fn.datepicker = function (e) {
            if (!this.length) return this;
            V.datepicker.initialized || (V(document).on("mousedown", V.datepicker._checkExternalClick), (V.datepicker.initialized = !0)), 0 === V("#" + V.datepicker._mainDivId).length && V("body").append(V.datepicker.dpDiv);
            var t = Array.prototype.slice.call(arguments, 1);
            return ("string" == typeof e && ("isDisabled" === e || "getDate" === e || "widget" === e)) || ("option" === e && 2 === arguments.length && "string" == typeof arguments[1])
                ? V.datepicker["_" + e + "Datepicker"].apply(V.datepicker, [this[0]].concat(t))
                : this.each(function () {
                    "string" == typeof e ? V.datepicker["_" + e + "Datepicker"].apply(V.datepicker, [this].concat(t)) : V.datepicker._attachDatepicker(this, e);
                });
        }),
        (V.datepicker = new e()),
        (V.datepicker.initialized = !1),
        (V.datepicker.uuid = new Date().getTime()),
        (V.datepicker.version = "1.14.0");
});
const SERVICE_LIDL = "https://my.lidl-connect.ch";
const SERVICE_SALT = "https://my.salt.ch";
const SERVICE_GOMO = "https://my.go-mo.ch";
const SERVICE_POST = "https://my.post-mobile.ch";
const SERVICE_SKY = "https://my.sky-mobile.ch";
const APP_URL = {
    url: SERVICE_SALT + "/myaccount-ui-service/protected/v1/",
    urlV2: SERVICE_SALT + "/myaccount-ui-service/protected/v2/",
    acsUrl: SERVICE_SALT + "/myaccount-ui-service/protected/v1/address/",
    portalUrl: "https://www.salt.ch",
    eshopUrl: "https://eshop.salt.ch",
    casUrl: "",
    staticUrl: "https://static.salt.ch",
};
const BRAND = { name: "salt" };
const PATH_JS_COMP = "../inc/js-components/";
const PATH_FORM_COMP = "../inc/form-components/";
const PATH_SCREEN_COMP = "../inc/screen-components/";
const SUPPORT_URL = { url: "https://support.salt.ch" };
const SERVICE_URL = { url: "https://my.salt.ch" };
sessionStorage.setItem("brand", "salt");
// $(document).ready(function () {
//     if (window.location.href.indexOf(SERVICE_LIDL) > -1) {
//         APP_URL.url = SERVICE_LIDL + "/myaccount-lidl-ui-service/protected/v1/";
//         APP_URL.urlV2 = SERVICE_LIDL + "/myaccount-lidl-ui-service/protected/v2/";
//         APP_URL.acsUrl = APP_URL.url + "address/";
//         APP_URL.portalUrl = "https://www.lidl-connect.ch";
//         APP_URL.eshopUrl = "https://eshop.lidl-connect.ch";
//         APP_URL.casUrl = "https://login.lidl-connect.ch";
//         APP_URL.staticUrl = "https://static.lidl-connect.ch";
//         SUPPORT_URL.url = "https://support.lidl-connect.ch";
//         SERVICE_URL.url = "https://my.lidl-connect.ch";
//         BRAND.name = "lidl";
//         sessionStorage.setItem("brand", "Lidl");
//     } else if (window.location.href.indexOf(SERVICE_POST) > -1) {
//         APP_URL.url = SERVICE_POST + "/myaccount-post-ui-service/protected/v1/";
//         APP_URL.urlV2 = SERVICE_POST + "/myaccount-post-ui-service/protected/v2/";
//         APP_URL.acsUrl = APP_URL.url + "address/";
//         APP_URL.portalUrl = "https://www.post-mobile.ch";
//         APP_URL.eshopUrl = "https://eshop.post-mobile.ch";
//         APP_URL.casUrl = "https://login.post-mobile.ch";
//         APP_URL.staticUrl = "https://static.post-mobile.ch";
//         SUPPORT_URL.url = "https://support.post-mobile.ch";
//         SERVICE_URL.url = "https://my.post-mobile.ch";
//         BRAND.name = "post";
//         sessionStorage.setItem("brand", "post");
//     } else if (window.location.href.indexOf(SERVICE_GOMO) > -1) {
//         APP_URL.url = SERVICE_GOMO + "/myaccount-gomo-ui-service/protected/v1/";
//         APP_URL.urlV2 = SERVICE_GOMO + "/myaccount-gomo-ui-service/protected/v2/";
//         APP_URL.acsUrl = APP_URL.url + "address/";
//         APP_URL.portalUrl = "https://www.go-mo.ch";
//         APP_URL.eshopUrl = "https://eshop.go-mo.ch";
//         APP_URL.casUrl = "https://login.go-mo.ch";
//         APP_URL.staticUrl = "https://static.go-mo.ch";
//         SUPPORT_URL.url = "https://support.go-mo.ch";
//         SERVICE_URL.url = "https://my.go-mo.ch";
//         BRAND.name = "gomo";
//         sessionStorage.setItem("brand", "GoMo");
//     } else if (window.location.href.indexOf(SERVICE_SKY) > -1) {
//         APP_URL.url = SERVICE_SKY + "/myaccount-sky-ui-service/protected/v1/";
//         APP_URL.urlV2 = SERVICE_SKY + "/myaccount-sky-ui-service/protected/v2/";
//         APP_URL.acsUrl = APP_URL.url + "address/";
//         APP_URL.portalUrl = "https://mobile.sky.ch";
//         APP_URL.eshopUrl = "https://eshop.post-mobile.ch";
//         APP_URL.casUrl = "https://login.sky-mobile.ch";
//         APP_URL.staticUrl = "https://static.sky-mobile.ch";
//         SUPPORT_URL.url = "https://support.post-mobile.ch";
//         SERVICE_URL.url = "https://my.sky-mobile.ch";
//         BRAND.name = "sky";
//         sessionStorage.setItem("brand", "Sky");
//     }
});
function setDefaultLang() {
    var languages = ["EN", "FR", "IT", "DE"];
    if (-1 === languages.indexOf(document.documentElement.lang.toUpperCase())) return "EN";
    else return document.documentElement.lang.toUpperCase();
}
jQuery(function () {
    var languages = ["EN", "FR", "IT", "DE"];
    var urlParams = new URLSearchParams(location.search);
    if (urlParams.get("lang") && languages.indexOf(urlParams.get("lang").toUpperCase()) > -1) document.documentElement.lang = urlParams.get("lang");
    else if (window.localStorage.getItem("customer-language") && languages.indexOf(window.localStorage.getItem("customer-language").toUpperCase()) > -1) document.documentElement.lang = window.localStorage.getItem("customer-language");
    else if (navigator.language && languages.indexOf(navigator.language.substring(0, 2).toUpperCase()) > -1) document.documentElement.lang = navigator.language.substring(0, 2);
    else document.documentElement.lang = "en";
    var docLang = document.documentElement.lang.toLowerCase(),
        i18N = $.i18n({ locale: docLang });
    window.localStorage.setItem("customer-language", docLang);
    if ("en" !== docLang) {
        var s = document.createElement("script");
        s.src = "./i18n/datepicker-" + docLang + ".min.js";
        $("main").after(s);
        var scriptMessage = document.createElement("script");
        scriptMessage.src = "./i18n/message-validator-" + docLang + ".min.js";
        $("main").after(scriptMessage);
    }
    buildHeadMeta();
    $.i18n()
        .load("./i18n/" + BRAND.name + "/" + docLang + ".json", i18N.locale)
        .done(function () {
            $("body").i18n();
            $("#language-picker-description").text($.i18n("utils.user.select_language_" + BRAND.name));
            if ($("#logo, #logoMobile").length) $("#logo, #logoMobile").attr("alt", BRAND.name + " " + $.i18n("utils.header.logo"));
            if ($(".main-menu").length) $(".main-menu").attr("aria-label", $.i18n("utils.nav.main_menu"));
            if ($("#paymentPage").length) {
                $("#paymentPage")
                    .find("iframe")
                    .attr("title", $.i18n("payment.iframe.title_" + BRAND.name));
                if ($("#payExceed").length) $("#payExceed").text($.i18n("payment.form.payment_exceed_" + BRAND.name));
                if ($("#payExtraFee").length) $("#payExtraFee").html($.i18n("payment.form.explain_instant_pay_fee"));
                if ($("#notifyExtraFeeInstantPay").length) $("#notifyExtraFeeInstantPay").html($.i18n("payment.form.notify_instant_pay_fee"));
                $("#submitBalancePayment").text($.i18n("payment.form.pay_" + BRAND.name));
                var paymentTitle = $("#paymentTitle"),
                    docTitlePrepay = $.i18n("payment.head.title_prepay"),
                    docTitle = $.i18n("payment.head.title"),
                    backPaymentReceipt = $("#backPaymentReceipt");
                if (urlParams.get("type") && "prepay" === urlParams.get("type")) {
                    document.title = docTitlePrepay;
                    paymentTitle.text($.i18n("payment.title_prepay"));
                    backPaymentReceipt.text($.i18n("payment.back"));
                } else {
                    document.title = docTitle;
                    paymentTitle.text($.i18n("payment.title"));
                    backPaymentReceipt.text($.i18n("payment.receipt.back_to_bills"));
                }
            }
        });
    $("#languagePickerDescription").text($.i18n("utils.header.select_language") + " " + $.i18n("utils.header.current_language"));
    $("#languagePicker")
        .find("a")
        .each(function (i, e) {
            $(e).on("click", function (ev) {
                ev.preventDefault();
                redirectWithParams();
                window.location = $(e).attr("href");
            });
        });
});
function redirectWithParams() {
    var url = window.location.href,
        newUrl = url,
        urlParts = newUrl.split("?"),
        questionMark = "",
        hashURL = (finalhashURL = "");
    if (newUrl.indexOf("#") > 0) {
        hashURL = newUrl.split("#");
        finalhashURL = "#" + hashURL[1];
    }
    if ((newUrl.indexOf("&") > 0 && -1 === newUrl.indexOf("?lang")) || -1 === newUrl.indexOf("?lang")) questionMark = "?";
    else if (newUrl.indexOf("&") > 0 && newUrl.indexOf("?lang") > 0) questionMark = "?";
    else if (-1 === newUrl.indexOf("&") && newUrl.indexOf("?lang") > 0) questionMark = "";
    if (urlParts[1]) {
        var savedParams = urlParts[1].replace(/\#(.*)/, ""),
            params = new URLSearchParams(savedParams);
        if (params.get("lang")) params.delete("lang");
        newUrl = urlParts[0] + questionMark + params.toString();
    } else if (hashURL[0]) newUrl = hashURL[0] + questionMark;
    else newUrl = url;
    if (newUrl.indexOf("?") > 0) {
        $("#de a").attr("href", newUrl + "&lang=de" + finalhashURL);
        $("#fr a").attr("href", newUrl + "&lang=fr" + finalhashURL);
        $("#it a").attr("href", newUrl + "&lang=it" + finalhashURL);
        if ($("#en").length) $("#en a").attr("href", newUrl + "&lang=en" + finalhashURL);
    } else {
        $("#de a").attr("href", newUrl + "?lang=de" + finalhashURL);
        $("#fr a").attr("href", newUrl + "?lang=fr" + finalhashURL);
        $("#it a").attr("href", newUrl + "?lang=it" + finalhashURL);
        if ($("#en").length) $("#en a").attr("href", newUrl + "?lang=en" + finalhashURL);
    }
}
function translatePage() {
    var docLang = document.documentElement.lang.toLowerCase();
    if ($("#subSelectTitle").length) $("#subSelectTitle").text($.i18n("dashboard.sub_select.title_" + BRAND.name));
    if ($("#" + docLang).length) {
        $("#" + docLang).addClass("language-picker__item--current");
        $("#" + docLang)
            .find("a")
            .attr("aria-current", "true");
    }
    if ($("#tablePag").length) {
        $("#tablePag").attr("aria-label", $.i18n("utils.nav.pagination"));
        $(".page").html($.i18n("utils.nav.page"));
    }
    if ($(".btn--close").length) $(".btn--close").attr("aria-label", $.i18n("form_controls.form.sr_back"));
    if ($(".pwd-toggler").length > 0) {
        $(".pwd-toggler").find(".helper-icon").attr("title", $.i18n("form_controls.show_pwd"));
        $(".pwd-toggler").find("svg").attr("aria-label", $.i18n("form_controls.show_pwd"));
    }
    if ($("#dashboardPage").length) {
        document.title = $.i18n("dashboard.head.title");
        if ($("#subDetailLink").length) $("#subDetailLink").attr("title", $.i18n("dashboard.sub_select.see_more_sr"));
    }
    if ($("#subscriptionPage").length) document.title = $.i18n("subscription.head.title");
    if ($("#billingPage").length) {
        document.title = $.i18n("billing.head.title");
        $("#selfCarePaymentMeans").find("iframe").attr("title", $.i18n("billing.payment_means.manage_cc"));
        $("#payMeansTitle").text($.i18n("billing.payment_means.title_" + BRAND.name));
        $("#payMeansParagraph").html($.i18n("billing.payment_means.paragraph_" + BRAND.name));
        $("#payDisclaimer").text($.i18n("billing.payment_means.payment_disclaimer_" + BRAND.name));
        $("#billExpire").text($.i18n("billing.warning_bill_expire"));
        $("#billingHelp").html($.i18n("billing.billing_help_" + BRAND.name));
        $("#changeInvoicingMethod").attr("aria-label", $.i18n("utils.labels.edit") + " " + $.i18n("billing.monthly_invoice"));
    }
    if ($("#offersPage").length) document.title = $.i18n("offers.head.title");
    if ($("#ordersPage").length) document.title = $.i18n("orders.head.title");
    if ($("#profilePage").length) {
        document.title = $.i18n("profile.head.title");
        $("#confEmail").text($.i18n("form_controls.input.confirm_email_" + BRAND.name));
        $("#langCred").text($.i18n("profile.language.choose_credential_" + BRAND.name));
        $("#langCust").text($.i18n("profile.language.choose_customer_" + BRAND.name));
        $("#connDisclaimer").html($.i18n("profile.connection.disclaimer_" + BRAND.name));
        $("#markEmailExplain").html($.i18n("utils.labels.email_explain_" + BRAND.name));
        $("#changeLogin").attr("aria-label", $.i18n("utils.labels.edit") + " " + $.i18n("profile.login"));
        $("#changePwd").attr("aria-label", $.i18n("utils.labels.edit") + " " + $.i18n("profile.password"));
        $("#changeMarkEmail").attr("aria-label", $.i18n("utils.labels.edit") + " " + $.i18n("profile.marketing_email"));
        $("#changeLang").attr("aria-label", $.i18n("utils.labels.edit") + " " + $.i18n("profile.lang"));
        $("#changeAddress").attr("aria-label", $.i18n("utils.labels.edit") + " " + $.i18n("profile.address"));
        $("#changeGender").attr("aria-label", $.i18n("utils.labels.edit") + " " + $.i18n("profile.gender"));
    }
    if ($("#mfaConfigurationPage").length) document.title = $.i18n("profile.mfa.head_title");
}
(function (factory) {
    "use strict";
    if ("function" === typeof define && define.amd) define(["jquery"], factory);
    else if ("undefined" !== typeof exports) module.exports = factory(require("jquery"));
    else factory(window.jQuery);
})(function ($) {
    "use strict";
    var defaultConfig = {
        headerTag: $("<h2></h2>"),
        headersSelector: ".js-accordion__header",
        panelsSelector: ".js-accordion__panel",
        buttonsSelector: "button.js-accordion__header",
        buttonsGeneratedContent: "text",
        button: $("<button></button>", { class: "js-accordion__header", type: "button" }),
        buttonSuffixId: "_tab",
        multiselectable: true,
        prefixClass: "accordion",
        headerSuffixClass: "__title",
        buttonSuffixClass: "__header",
        panelSuffixClass: "__panel",
        direction: "ltr",
        accordionPrefixId: "accordion",
    };
    var Accordion = function ($el, options) {
        this.options = $.extend({}, defaultConfig, options);
        this.$wrapper = $el;
        this.$panels = $(this.options.panelsSelector, this.$wrapper);
        this.initAttributes();
        this.initEvents();
    };
    Accordion.prototype.initAttributes = function () {
        this.$wrapper.attr({ "aria-multiselectable": this.options.multiselectable.toString() }).addClass(this.options.prefixClass);
        if (!this.$wrapper.attr("id")) {
            var index_lisible = Math.random().toString(32).slice(2, 12);
            this.$wrapper.attr("id", this.options.accordionPrefixId + "-" + index_lisible);
        }
        this.$panels.each(
            $.proxy(function (index, el) {
                var $panel = $(el);
                var $header = $(this.options.headersSelector, $panel);
                var $button = "html" === this.options.buttonsGeneratedContent ? this.options.button.clone().html($header.html()) : this.options.button.clone().text($header.text());
                var $buttonHeading = this.options.headerTag.clone().html($button);
                $header.remove();
                $panel.before($buttonHeading);
                var panelId = $panel.attr("id") || this.$wrapper.attr("id") + "-" + index;
                var buttonId = panelId + this.options.buttonSuffixId;
                $button.attr({ "aria-controls": panelId, "aria-expanded": "false", id: buttonId }).addClass(this.options.prefixClass + this.options.buttonSuffixClass);
                $panel.attr({ "aria-labelledby": buttonId, id: panelId, "aria-hidden": "true", role: "region" }).addClass(this.options.prefixClass + this.options.panelSuffixClass);
                if ("true" === $panel.attr("data-accordion-opened")) {
                    $button.attr({ "aria-expanded": "true", "data-accordion-opened": null });
                    $panel.attr({ "aria-hidden": "false" });
                }
            }, this)
        );
        this.$buttons = $(this.options.buttonsSelector, this.$wrapper);
    };
    Accordion.prototype.initEvents = function () {
        this.$wrapper.on("focus", this.options.buttonsSelector, $.proxy(this.focusButtonEventHandler, this));
        this.$wrapper.on("click", this.options.buttonsSelector, $.proxy(this.clickButtonEventHandler, this));
        this.$wrapper.on("keydown", this.options.buttonsSelector, $.proxy(this.keydownButtonEventHandler, this));
    };
    Accordion.prototype.focusButtonEventHandler = function (e) {
        var $target = $(e.target);
        var $button = $target.is("button") ? $target : $target.closest("button");
    };
    Accordion.prototype.clickButtonEventHandler = function (e) {
        var $target = $(e.target);
        var $button = $target.is("button") ? $target : $target.closest("button");
        var $panel = $("#" + $button.attr("aria-controls"));
        if ("false" === $button.attr("aria-expanded")) {
            $button.attr("aria-expanded", "true");
            $panel.attr("aria-hidden", "false");
        } else {
            $button.attr("aria-expanded", "false");
            $panel.attr("aria-hidden", "true");
        }
        if (false === this.options.multiselectable) {
            this.$panels.not($panel).attr("aria-hidden", "true");
            this.$buttons.not($button).attr("aria-expanded", "false");
        }
        setTimeout(function () {
            $button.focus();
        }, 0);
        e.stopPropagation();
        e.preventDefault();
    };
    Accordion.prototype.keydownButtonEventHandler = function (e) {
        var $target = $(e.target);
        var $button = $target.is("button") ? $target : $target.closest("button");
        var $firstButton = this.$buttons.first();
        var $lastButton = this.$buttons.last();
        var index = this.$buttons.index($button);
        $target = null;
        var k = "ltr" === this.options.direction ? { prev: [38, 37], next: [40, 39], first: 36, last: 35 } : { prev: [38, 39], next: [40, 37], first: 36, last: 35 };
        var allKeyCode = [].concat(k.prev, k.next, k.first, k.last);
        if ($.inArray(e.keyCode, allKeyCode) >= 0 && !e.ctrlKey) {
            if (36 === e.keyCode) $target = $firstButton;
            else if (35 === e.keyCode) $target = $lastButton;
            else if ($.inArray(e.keyCode, k.prev) >= 0) $target = $button.is($firstButton) ? $lastButton : this.$buttons.eq(index - 1);
            else if ($.inArray(e.keyCode, k.next) >= 0) $target = $button.is($lastButton) ? $firstButton : this.$buttons.eq(index + 1);
            if (null !== $target) this.goToHeader($target);
            e.preventDefault();
        }
    };
    Accordion.prototype.goToHeader = function ($target) {
        if (1 !== $target.length) return;
        setTimeout(function () {
            $target.focus();
        }, 0);
    };
    var PLUGIN = "accordion";
    $.fn[PLUGIN] = function (params) {
        var options = $.extend({}, $.fn[PLUGIN].defaults, params);
        return this.each(function () {
            var $el = $(this);
            var specificOptions = {
                multiselectable: "none" === $el.attr("data-accordion-multiselectable") ? false : options.multiselectable,
                prefixClass: "undefined" !== typeof $el.attr("data-accordion-prefix-classes") ? $el.attr("data-accordion-prefix-classes") : options.prefixClass,
                buttonsGeneratedContent: "undefined" !== typeof $el.attr("data-accordion-button-generated-content") ? $el.attr("data-accordion-button-generated-content") : options.buttonsGeneratedContent,
                headerTag: "undefined" !== typeof $el.attr("data-header-tag") ? $($el.attr("data-header-tag")) : options.headerTag,
                direction: $el.closest('[dir="rtl"]').length > 0 ? "rtl" : options.direction,
            };
            specificOptions = $.extend({}, options, specificOptions);
            $el.data[PLUGIN] = new Accordion($el, specificOptions);
        });
    };
    $.fn[PLUGIN].defaults = defaultConfig;
});
!(function (t, e) {
    "object" == typeof exports && "object" == typeof module
        ? (module.exports = e())
        : "function" == typeof define && define.amd
            ? define([], e)
            : "object" == typeof exports
                ? (exports.accessibleAutocomplete = e())
                : (t.accessibleAutocomplete = e());
})(window, function () {
    return (function (t) {
        var e = {};
        function n(r) {
            if (e[r]) return e[r].exports;
            var o = (e[r] = { i: r, l: !1, exports: {} });
            return t[r].call(o.exports, o, o.exports, n), (o.l = !0), o.exports;
        }
        return (
            (n.m = t),
                (n.c = e),
                (n.d = function (t, e, r) {
                    n.o(t, e) || Object.defineProperty(t, e, { enumerable: !0, get: r });
                }),
                (n.r = function (t) {
                    "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(t, "__esModule", { value: !0 });
                }),
                (n.t = function (t, e) {
                    if ((1 & e && (t = n(t)), 8 & e)) return t;
                    if (4 & e && "object" == typeof t && t && t.__esModule) return t;
                    var r = Object.create(null);
                    if ((n.r(r), Object.defineProperty(r, "default", { enumerable: !0, value: t }), 2 & e && "string" != typeof t))
                        for (var o in t)
                            n.d(
                                r,
                                o,
                                function (e) {
                                    return t[e];
                                }.bind(null, o)
                            );
                    return r;
                }),
                (n.n = function (t) {
                    var e =
                        t && t.__esModule
                            ? function () {
                                return t.default;
                            }
                            : function () {
                                return t;
                            };
                    return n.d(e, "a", e), e;
                }),
                (n.o = function (t, e) {
                    return Object.prototype.hasOwnProperty.call(t, e);
                }),
                (n.p = "/dist"),
                n((n.s = 135))
        );
    })([
        function (t, e, n) {
            "use strict";
            t.exports = function (t) {
                try {
                    return !!t();
                } catch (e) {
                    return !0;
                }
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(20),
                o = Function.prototype,
                i = o.call,
                u = r && o.bind.bind(i, i);
            t.exports = r
                ? u
                : function (t) {
                    return function () {
                        return i.apply(t, arguments);
                    };
                };
        },
        function (t, e, n) {
            "use strict";
            var r = "object" == typeof document && document.all;
            t.exports =
                void 0 === r && void 0 !== r
                    ? function (t) {
                        return "function" == typeof t || t === r;
                    }
                    : function (t) {
                        return "function" == typeof t;
                    };
        },
        function (t, e, n) {
            "use strict";
            (function (e) {
                var n = function (t) {
                    return t && t.Math === Math && t;
                };
                t.exports =
                    n("object" == typeof globalThis && globalThis) ||
                    n("object" == typeof window && window) ||
                    n("object" == typeof self && self) ||
                    n("object" == typeof e && e) ||
                    n("object" == typeof this && this) ||
                    (function () {
                        return this;
                    })() ||
                    Function("return this")();
            }.call(this, n(81)));
        },
        function (t, e, n) {
            "use strict";
            var r = n(0);
            t.exports = !r(function () {
                return (
                    7 !==
                    Object.defineProperty({}, 1, {
                        get: function () {
                            return 7;
                        },
                    })[1]
                );
            });
        },
        function (t, e, n) {
            "use strict";
            var r = n(8),
                o = String,
                i = TypeError;
            t.exports = function (t) {
                if (r(t)) return t;
                throw new i(o(t) + " is not an object");
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(3),
                o = n(46).f,
                i = n(11),
                u = n(19),
                s = n(33),
                c = n(58),
                a = n(92);
            t.exports = function (t, e) {
                var n,
                    l,
                    f,
                    p,
                    d,
                    h = t.target,
                    v = t.global,
                    m = t.stat;
                if ((n = v ? r : m ? r[h] || s(h, {}) : (r[h] || {}).prototype))
                    for (l in e) {
                        if (((p = e[l]), (f = t.dontCallGetSet ? (d = o(n, l)) && d.value : n[l]), !a(v ? l : h + (m ? "." : "#") + l, t.forced) && void 0 !== f)) {
                            if (typeof p == typeof f) continue;
                            c(p, f);
                        }
                        (t.sham || (f && f.sham)) && i(p, "sham", !0), u(n, l, p, t);
                    }
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(20),
                o = Function.prototype.call;
            t.exports = r
                ? o.bind(o)
                : function () {
                    return o.apply(o, arguments);
                };
        },
        function (t, e, n) {
            "use strict";
            var r = n(2);
            t.exports = function (t) {
                return "object" == typeof t ? null !== t : r(t);
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(3),
                o = n(31),
                i = n(10),
                u = n(51),
                s = n(50),
                c = n(49),
                a = r.Symbol,
                l = o("wks"),
                f = c ? a.for || a : (a && a.withoutSetter) || u;
            t.exports = function (t) {
                return i(l, t) || (l[t] = s && i(a, t) ? a[t] : f("Symbol." + t)), l[t];
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(1),
                o = n(14),
                i = r({}.hasOwnProperty);
            t.exports =
                Object.hasOwn ||
                function (t, e) {
                    return i(o(t), e);
                };
        },
        function (t, e, n) {
            "use strict";
            var r = n(4),
                o = n(12),
                i = n(21);
            t.exports = r
                ? function (t, e, n) {
                    return o.f(t, e, i(1, n));
                }
                : function (t, e, n) {
                    return (t[e] = n), t;
                };
        },
        function (t, e, n) {
            "use strict";
            var r = n(4),
                o = n(52),
                i = n(54),
                u = n(5),
                s = n(28),
                c = TypeError,
                a = Object.defineProperty,
                l = Object.getOwnPropertyDescriptor,
                f = "enumerable",
                p = "configurable",
                d = "writable";
            e.f = r
                ? i
                    ? function (t, e, n) {
                        if ((u(t), (e = s(e)), u(n), "function" == typeof t && "prototype" === e && "value" in n && d in n && !n[d])) {
                            var r = l(t, e);
                            r && r[d] && ((t[e] = n.value), (n = { configurable: p in n ? n[p] : r[p], enumerable: f in n ? n[f] : r[f], writable: !1 }));
                        }
                        return a(t, e, n);
                    }
                    : a
                : function (t, e, n) {
                    if ((u(t), (e = s(e)), u(n), o))
                        try {
                            return a(t, e, n);
                        } catch (r) {}
                    if ("get" in n || "set" in n) throw new c("Accessors not supported");
                    return "value" in n && (t[e] = n.value), t;
                };
        },
        function (t, e, n) {
            "use strict";
            t.exports = !1;
        },
        function (t, e, n) {
            "use strict";
            var r = n(23),
                o = Object;
            t.exports = function (t) {
                return o(r(t));
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(22),
                o = n(23);
            t.exports = function (t) {
                return r(o(t));
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(1),
                o = r({}.toString),
                i = r("".slice);
            t.exports = function (t) {
                return i(o(t), 8, -1);
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(3),
                o = n(2);
            t.exports = function (t, e) {
                return arguments.length < 2 ? ((n = r[t]), o(n) ? n : void 0) : r[t] && r[t][e];
                var n;
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(2),
                o = n(84),
                i = TypeError;
            t.exports = function (t) {
                if (r(t)) return t;
                throw new i(o(t) + " is not a function");
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(2),
                o = n(12),
                i = n(55),
                u = n(33);
            t.exports = function (t, e, n, s) {
                s || (s = {});
                var c = s.enumerable,
                    a = void 0 !== s.name ? s.name : e;
                if ((r(n) && i(n, a, s), s.global)) c ? (t[e] = n) : u(e, n);
                else {
                    try {
                        s.unsafe ? t[e] && (c = !0) : delete t[e];
                    } catch (l) {}
                    c ? (t[e] = n) : o.f(t, e, { value: n, enumerable: !1, configurable: !s.nonConfigurable, writable: !s.nonWritable });
                }
                return t;
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(0);
            t.exports = !r(function () {
                var t = function () {}.bind();
                return "function" != typeof t || t.hasOwnProperty("prototype");
            });
        },
        function (t, e, n) {
            "use strict";
            t.exports = function (t, e) {
                return { enumerable: !(1 & t), configurable: !(2 & t), writable: !(4 & t), value: e };
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(1),
                o = n(0),
                i = n(16),
                u = Object,
                s = r("".split);
            t.exports = o(function () {
                return !u("z").propertyIsEnumerable(0);
            })
                ? function (t) {
                    return "String" === i(t) ? s(t, "") : u(t);
                }
                : u;
        },
        function (t, e, n) {
            "use strict";
            var r = n(27),
                o = TypeError;
            t.exports = function (t) {
                if (r(t)) throw new o("Can't call method on " + t);
                return t;
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(18),
                o = n(27);
            t.exports = function (t, e) {
                var n = t[e];
                return o(n) ? void 0 : r(n);
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(60);
            t.exports = function (t) {
                return r(t.length);
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(39),
                o = String;
            t.exports = function (t) {
                if ("Symbol" === r(t)) throw new TypeError("Cannot convert a Symbol value to a string");
                return o(t);
            };
        },
        function (t, e, n) {
            "use strict";
            t.exports = function (t) {
                return null == t;
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(82),
                o = n(48);
            t.exports = function (t) {
                var e = r(t, "string");
                return o(e) ? e : e + "";
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(1);
            t.exports = r({}.isPrototypeOf);
        },
        function (t, e, n) {
            "use strict";
            var r,
                o,
                i = n(3),
                u = n(83),
                s = i.process,
                c = i.Deno,
                a = (s && s.versions) || (c && c.version),
                l = a && a.v8;
            l && (o = (r = l.split("."))[0] > 0 && r[0] < 4 ? 1 : +(r[0] + r[1])), !o && u && (!(r = u.match(/Edge\/(\d+)/)) || r[1] >= 74) && (r = u.match(/Chrome\/(\d+)/)) && (o = +r[1]), (t.exports = o);
        },
        function (t, e, n) {
            "use strict";
            var r = n(13),
                o = n(32);
            (t.exports = function (t, e) {
                return o[t] || (o[t] = void 0 !== e ? e : {});
            })("versions", []).push({
                version: "3.35.0",
                mode: r ? "pure" : "global",
                copyright: "Â© 2014-2023 Denis Pushkarev (zloirock.ru)",
                license: "https://github.com/zloirock/core-js/blob/v3.35.0/LICENSE",
                source: "https://github.com/zloirock/core-js",
            });
        },
        function (t, e, n) {
            "use strict";
            var r = n(3),
                o = n(33),
                i = "__core-js_shared__",
                u = r[i] || o(i, {});
            t.exports = u;
        },
        function (t, e, n) {
            "use strict";
            var r = n(3),
                o = Object.defineProperty;
            t.exports = function (t, e) {
                try {
                    o(r, t, { value: e, configurable: !0, writable: !0 });
                } catch (n) {
                    r[t] = e;
                }
                return e;
            };
        },
        function (t, e, n) {
            "use strict";
            var r,
                o,
                i,
                u = n(86),
                s = n(3),
                c = n(8),
                a = n(11),
                l = n(10),
                f = n(32),
                p = n(35),
                d = n(36),
                h = "Object already initialized",
                v = s.TypeError,
                m = s.WeakMap;
            if (u || f.state) {
                var y = f.state || (f.state = new m());
                (y.get = y.get),
                    (y.has = y.has),
                    (y.set = y.set),
                    (r = function (t, e) {
                        if (y.has(t)) throw new v(h);
                        return (e.facade = t), y.set(t, e), e;
                    }),
                    (o = function (t) {
                        return y.get(t) || {};
                    }),
                    (i = function (t) {
                        return y.has(t);
                    });
            } else {
                var g = p("state");
                (d[g] = !0),
                    (r = function (t, e) {
                        if (l(t, g)) throw new v(h);
                        return (e.facade = t), a(t, g, e), e;
                    }),
                    (o = function (t) {
                        return l(t, g) ? t[g] : {};
                    }),
                    (i = function (t) {
                        return l(t, g);
                    });
            }
            t.exports = {
                set: r,
                get: o,
                has: i,
                enforce: function (t) {
                    return i(t) ? o(t) : r(t, {});
                },
                getterFor: function (t) {
                    return function (e) {
                        var n;
                        if (!c(e) || (n = o(e)).type !== t) throw new v("Incompatible receiver, " + t + " required");
                        return n;
                    };
                },
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(31),
                o = n(51),
                i = r("keys");
            t.exports = function (t) {
                return i[t] || (i[t] = o(t));
            };
        },
        function (t, e, n) {
            "use strict";
            t.exports = {};
        },
        function (t, e, n) {
            "use strict";
            var r = n(91);
            t.exports = function (t) {
                var e = +t;
                return e != e || 0 === e ? 0 : r(e);
            };
        },
        function (t, e, n) {
            "use strict";
            t.exports = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
        },
        function (t, e, n) {
            "use strict";
            var r = n(40),
                o = n(2),
                i = n(16),
                u = n(9)("toStringTag"),
                s = Object,
                c =
                    "Arguments" ===
                    i(
                        (function () {
                            return arguments;
                        })()
                    );
            t.exports = r
                ? i
                : function (t) {
                    var e, n, r;
                    return void 0 === t
                        ? "Undefined"
                        : null === t
                            ? "Null"
                            : "string" ==
                            typeof (n = (function (t, e) {
                                try {
                                    return t[e];
                                } catch (n) {}
                            })((e = s(t)), u))
                                ? n
                                : c
                                    ? i(e)
                                    : "Object" === (r = i(e)) && o(e.callee)
                                        ? "Arguments"
                                        : r;
                };
        },
        function (t, e, n) {
            "use strict";
            var r = {};
            (r[n(9)("toStringTag")] = "z"), (t.exports = "[object z]" === String(r));
        },
        function (t, e, n) {
            "use strict";
            var r = n(16);
            t.exports =
                Array.isArray ||
                function (t) {
                    return "Array" === r(t);
                };
        },
        function (t, e, n) {
            "use strict";
            var r = n(0),
                o = n(9),
                i = n(30),
                u = o("species");
            t.exports = function (t) {
                return (
                    i >= 51 ||
                    !r(function () {
                        var e = [];
                        return (
                            ((e.constructor = {})[u] = function () {
                                return { foo: 1 };
                            }),
                            1 !== e[t](Boolean).foo
                        );
                    })
                );
            };
        },
        function (t, e, n) {
            "use strict";
            var r,
                o = n(5),
                i = n(114),
                u = n(38),
                s = n(36),
                c = n(115),
                a = n(53),
                l = n(35),
                f = "prototype",
                p = "script",
                d = l("IE_PROTO"),
                h = function () {},
                v = function (t) {
                    return "<" + p + ">" + t + "</" + p + ">";
                },
                m = function (t) {
                    t.write(v("")), t.close();
                    var e = t.parentWindow.Object;
                    return (t = null), e;
                },
                y = function () {
                    try {
                        r = new ActiveXObject("htmlfile");
                    } catch (i) {}
                    var t, e, n;
                    y =
                        "undefined" != typeof document
                            ? document.domain && r
                                ? m(r)
                                : ((e = a("iframe")), (n = "java" + p + ":"), (e.style.display = "none"), c.appendChild(e), (e.src = String(n)), (t = e.contentWindow.document).open(), t.write(v("document.F=Object")), t.close(), t.F)
                            : m(r);
                    for (var o = u.length; o--; ) delete y[f][u[o]];
                    return y();
                };
            (s[d] = !0),
                (t.exports =
                    Object.create ||
                    function (t, e) {
                        var n;
                        return null !== t ? ((h[f] = o(t)), (n = new h()), (h[f] = null), (n[d] = t)) : (n = y()), void 0 === e ? n : i.f(n, e);
                    });
        },
        function (t, e, n) {
            "use strict";
            var r,
                o,
                i = n(7),
                u = n(1),
                s = n(26),
                c = n(121),
                a = n(122),
                l = n(31),
                f = n(43),
                p = n(34).get,
                d = n(123),
                h = n(124),
                v = l("native-string-replace", String.prototype.replace),
                m = RegExp.prototype.exec,
                y = m,
                g = u("".charAt),
                b = u("".indexOf),
                x = u("".replace),
                w = u("".slice),
                O = ((o = /b*/g), i(m, (r = /a/), "a"), i(m, o, "a"), 0 !== r.lastIndex || 0 !== o.lastIndex),
                _ = a.BROKEN_CARET,
                S = void 0 !== /()??/.exec("")[1];
            (O || S || _ || d || h) &&
            (y = function (t) {
                var e,
                    n,
                    r,
                    o,
                    u,
                    a,
                    l,
                    d = this,
                    h = p(d),
                    E = s(t),
                    C = h.raw;
                if (C) return (C.lastIndex = d.lastIndex), (e = i(y, C, E)), (d.lastIndex = C.lastIndex), e;
                var I = h.groups,
                    j = _ && d.sticky,
                    P = i(c, d),
                    A = d.source,
                    T = 0,
                    k = E;
                if (
                    (j &&
                    ((P = x(P, "y", "")),
                    -1 === b(P, "g") && (P += "g"),
                        (k = w(E, d.lastIndex)),
                    d.lastIndex > 0 && (!d.multiline || (d.multiline && "\n" !== g(E, d.lastIndex - 1))) && ((A = "(?: " + A + ")"), (k = " " + k), T++),
                        (n = new RegExp("^(?:" + A + ")", P))),
                    S && (n = new RegExp("^" + A + "$(?!\\s)", P)),
                    O && (r = d.lastIndex),
                        (o = i(m, j ? n : d, k)),
                        j ? (o ? ((o.input = w(o.input, T)), (o[0] = w(o[0], T)), (o.index = d.lastIndex), (d.lastIndex += o[0].length)) : (d.lastIndex = 0)) : O && o && (d.lastIndex = d.global ? o.index + o[0].length : r),
                    S &&
                    o &&
                    o.length > 1 &&
                    i(v, o[0], n, function () {
                        for (u = 1; u < arguments.length - 2; u++) void 0 === arguments[u] && (o[u] = void 0);
                    }),
                    o && I)
                )
                    for (o.groups = a = f(null), u = 0; u < I.length; u++) a[(l = I[u])[0]] = o[l[1]];
                return o;
            }),
                (t.exports = y);
        },
        function (t, e, n) {
            "use strict";
            var r = n(6),
                o = n(3),
                i = n(93),
                u = n(94),
                s = "WebAssembly",
                c = o[s],
                a = 7 !== new Error("e", { cause: 7 }).cause,
                l = function (t, e) {
                    var n = {};
                    (n[t] = u(t, e, a)), r({ global: !0, constructor: !0, arity: 1, forced: a }, n);
                },
                f = function (t, e) {
                    if (c && c[t]) {
                        var n = {};
                        (n[t] = u(s + "." + t, e, a)), r({ target: s, stat: !0, constructor: !0, arity: 1, forced: a }, n);
                    }
                };
            l("Error", function (t) {
                return function (e) {
                    return i(t, this, arguments);
                };
            }),
                l("EvalError", function (t) {
                    return function (e) {
                        return i(t, this, arguments);
                    };
                }),
                l("RangeError", function (t) {
                    return function (e) {
                        return i(t, this, arguments);
                    };
                }),
                l("ReferenceError", function (t) {
                    return function (e) {
                        return i(t, this, arguments);
                    };
                }),
                l("SyntaxError", function (t) {
                    return function (e) {
                        return i(t, this, arguments);
                    };
                }),
                l("TypeError", function (t) {
                    return function (e) {
                        return i(t, this, arguments);
                    };
                }),
                l("URIError", function (t) {
                    return function (e) {
                        return i(t, this, arguments);
                    };
                }),
                f("CompileError", function (t) {
                    return function (e) {
                        return i(t, this, arguments);
                    };
                }),
                f("LinkError", function (t) {
                    return function (e) {
                        return i(t, this, arguments);
                    };
                }),
                f("RuntimeError", function (t) {
                    return function (e) {
                        return i(t, this, arguments);
                    };
                });
        },
        function (t, e, n) {
            "use strict";
            var r = n(4),
                o = n(7),
                i = n(47),
                u = n(21),
                s = n(15),
                c = n(28),
                a = n(10),
                l = n(52),
                f = Object.getOwnPropertyDescriptor;
            e.f = r
                ? f
                : function (t, e) {
                    if (((t = s(t)), (e = c(e)), l))
                        try {
                            return f(t, e);
                        } catch (n) {}
                    if (a(t, e)) return u(!o(i.f, t, e), t[e]);
                };
        },
        function (t, e, n) {
            "use strict";
            var r = {}.propertyIsEnumerable,
                o = Object.getOwnPropertyDescriptor,
                i = o && !r.call({ 1: 2 }, 1);
            e.f = i
                ? function (t) {
                    var e = o(this, t);
                    return !!e && e.enumerable;
                }
                : r;
        },
        function (t, e, n) {
            "use strict";
            var r = n(17),
                o = n(2),
                i = n(29),
                u = n(49),
                s = Object;
            t.exports = u
                ? function (t) {
                    return "symbol" == typeof t;
                }
                : function (t) {
                    var e = r("Symbol");
                    return o(e) && i(e.prototype, s(t));
                };
        },
        function (t, e, n) {
            "use strict";
            var r = n(50);
            t.exports = r && !Symbol.sham && "symbol" == typeof Symbol.iterator;
        },
        function (t, e, n) {
            "use strict";
            var r = n(30),
                o = n(0),
                i = n(3).String;
            t.exports =
                !!Object.getOwnPropertySymbols &&
                !o(function () {
                    var t = Symbol("symbol detection");
                    return !i(t) || !(Object(t) instanceof Symbol) || (!Symbol.sham && r && r < 41);
                });
        },
        function (t, e, n) {
            "use strict";
            var r = n(1),
                o = 0,
                i = Math.random(),
                u = r((1).toString);
            t.exports = function (t) {
                return "Symbol(" + (void 0 === t ? "" : t) + ")_" + u(++o + i, 36);
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(4),
                o = n(0),
                i = n(53);
            t.exports =
                !r &&
                !o(function () {
                    return (
                        7 !==
                        Object.defineProperty(i("div"), "a", {
                            get: function () {
                                return 7;
                            },
                        }).a
                    );
                });
        },
        function (t, e, n) {
            "use strict";
            var r = n(3),
                o = n(8),
                i = r.document,
                u = o(i) && o(i.createElement);
            t.exports = function (t) {
                return u ? i.createElement(t) : {};
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(4),
                o = n(0);
            t.exports =
                r &&
                o(function () {
                    return 42 !== Object.defineProperty(function () {}, "prototype", { value: 42, writable: !1 }).prototype;
                });
        },
        function (t, e, n) {
            "use strict";
            var r = n(1),
                o = n(0),
                i = n(2),
                u = n(10),
                s = n(4),
                c = n(56).CONFIGURABLE,
                a = n(57),
                l = n(34),
                f = l.enforce,
                p = l.get,
                d = String,
                h = Object.defineProperty,
                v = r("".slice),
                m = r("".replace),
                y = r([].join),
                g =
                    s &&
                    !o(function () {
                        return 8 !== h(function () {}, "length", { value: 8 }).length;
                    }),
                b = String(String).split("String"),
                x = (t.exports = function (t, e, n) {
                    "Symbol(" === v(d(e), 0, 7) && (e = "[" + m(d(e), /^Symbol\(([^)]*)\)/, "$1") + "]"),
                    n && n.getter && (e = "get " + e),
                    n && n.setter && (e = "set " + e),
                    (!u(t, "name") || (c && t.name !== e)) && (s ? h(t, "name", { value: e, configurable: !0 }) : (t.name = e)),
                    g && n && u(n, "arity") && t.length !== n.arity && h(t, "length", { value: n.arity });
                    try {
                        n && u(n, "constructor") && n.constructor ? s && h(t, "prototype", { writable: !1 }) : t.prototype && (t.prototype = void 0);
                    } catch (o) {}
                    var r = f(t);
                    return u(r, "source") || (r.source = y(b, "string" == typeof e ? e : "")), t;
                });
            Function.prototype.toString = x(function () {
                return (i(this) && p(this).source) || a(this);
            }, "toString");
        },
        function (t, e, n) {
            "use strict";
            var r = n(4),
                o = n(10),
                i = Function.prototype,
                u = r && Object.getOwnPropertyDescriptor,
                s = o(i, "name"),
                c = s && "something" === function () {}.name,
                a = s && (!r || (r && u(i, "name").configurable));
            t.exports = { EXISTS: s, PROPER: c, CONFIGURABLE: a };
        },
        function (t, e, n) {
            "use strict";
            var r = n(1),
                o = n(2),
                i = n(32),
                u = r(Function.toString);
            o(i.inspectSource) ||
            (i.inspectSource = function (t) {
                return u(t);
            }),
                (t.exports = i.inspectSource);
        },
        function (t, e, n) {
            "use strict";
            var r = n(10),
                o = n(87),
                i = n(46),
                u = n(12);
            t.exports = function (t, e, n) {
                for (var s = o(e), c = u.f, a = i.f, l = 0; l < s.length; l++) {
                    var f = s[l];
                    r(t, f) || (n && r(n, f)) || c(t, f, a(e, f));
                }
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(1),
                o = n(10),
                i = n(15),
                u = n(89).indexOf,
                s = n(36),
                c = r([].push);
            t.exports = function (t, e) {
                var n,
                    r = i(t),
                    a = 0,
                    l = [];
                for (n in r) !o(s, n) && o(r, n) && c(l, n);
                for (; e.length > a; ) o(r, (n = e[a++])) && (~u(l, n) || c(l, n));
                return l;
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(37),
                o = Math.min;
            t.exports = function (t) {
                return t > 0 ? o(r(t), 9007199254740991) : 0;
            };
        },
        function (t, e, n) {
            "use strict";
            e.f = Object.getOwnPropertySymbols;
        },
        function (t, e, n) {
            "use strict";
            var r = n(95),
                o = n(5),
                i = n(96);
            t.exports =
                Object.setPrototypeOf ||
                ("__proto__" in {}
                    ? (function () {
                        var t,
                            e = !1,
                            n = {};
                        try {
                            (t = r(Object.prototype, "__proto__", "set"))(n, []), (e = n instanceof Array);
                        } catch (u) {}
                        return function (n, r) {
                            return o(n), i(r), e ? t(n, r) : (n.__proto__ = r), n;
                        };
                    })()
                    : void 0);
        },
        function (t, e, n) {
            "use strict";
            var r = n(106),
                o = n(1),
                i = n(22),
                u = n(14),
                s = n(25),
                c = n(65),
                a = o([].push),
                l = function (t) {
                    var e = 1 === t,
                        n = 2 === t,
                        o = 3 === t,
                        l = 4 === t,
                        f = 6 === t,
                        p = 7 === t,
                        d = 5 === t || f;
                    return function (h, v, m, y) {
                        for (var g, b, x = u(h), w = i(x), O = s(w), _ = r(v, m), S = 0, E = y || c, C = e ? E(h, O) : n || p ? E(h, 0) : void 0; O > S; S++)
                            if ((d || S in w) && ((b = _((g = w[S]), S, x)), t))
                                if (e) C[S] = b;
                                else if (b)
                                    switch (t) {
                                        case 3:
                                            return !0;
                                        case 5:
                                            return g;
                                        case 6:
                                            return S;
                                        case 2:
                                            a(C, g);
                                    }
                                else
                                    switch (t) {
                                        case 4:
                                            return !1;
                                        case 7:
                                            a(C, g);
                                    }
                        return f ? -1 : o || l ? l : C;
                    };
                };
            t.exports = { forEach: l(0), map: l(1), filter: l(2), some: l(3), every: l(4), find: l(5), findIndex: l(6), filterReject: l(7) };
        },
        function (t, e, n) {
            "use strict";
            var r = n(16),
                o = n(1);
            t.exports = function (t) {
                if ("Function" === r(t)) return o(t);
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(107);
            t.exports = function (t, e) {
                return new (r(t))(0 === e ? 0 : e);
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(10),
                o = n(2),
                i = n(14),
                u = n(35),
                s = n(113),
                c = u("IE_PROTO"),
                a = Object,
                l = a.prototype;
            t.exports = s
                ? a.getPrototypeOf
                : function (t) {
                    var e = i(t);
                    if (r(e, c)) return e[c];
                    var n = e.constructor;
                    return o(n) && e instanceof n ? n.prototype : e instanceof a ? l : null;
                };
        },
        function (t, e, n) {
            "use strict";
            var r = n(55),
                o = n(12);
            t.exports = function (t, e, n) {
                return n.get && r(n.get, e, { getter: !0 }), n.set && r(n.set, e, { setter: !0 }), o.f(t, e, n);
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(28),
                o = n(12),
                i = n(21);
            t.exports = function (t, e, n) {
                var u = r(e);
                u in t ? o.f(t, u, i(0, n)) : (t[u] = n);
            };
        },
        function (t, e, n) {
            "use strict";
            var r,
                o,
                i,
                u = n(0),
                s = n(2),
                c = n(8),
                a = n(43),
                l = n(66),
                f = n(19),
                p = n(9),
                d = n(13),
                h = p("iterator"),
                v = !1;
            [].keys && ("next" in (i = [].keys()) ? (o = l(l(i))) !== Object.prototype && (r = o) : (v = !0)),
                !c(r) ||
                u(function () {
                    var t = {};
                    return r[h].call(t) !== t;
                })
                    ? (r = {})
                    : d && (r = a(r)),
            s(r[h]) ||
            f(r, h, function () {
                return this;
            }),
                (t.exports = { IteratorPrototype: r, BUGGY_SAFARI_ITERATORS: v });
        },
        function (t, e, n) {
            "use strict";
            var r = n(59),
                o = n(38);
            t.exports =
                Object.keys ||
                function (t) {
                    return r(t, o);
                };
        },
        function (t, e, n) {
            "use strict";
            t.exports = function (t) {
                return { iterator: t, next: t.next, done: !1 };
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(7),
                o = n(43),
                i = n(11),
                u = n(117),
                s = n(9),
                c = n(34),
                a = n(24),
                l = n(69).IteratorPrototype,
                f = n(118),
                p = n(73),
                d = s("toStringTag"),
                h = "IteratorHelper",
                v = "WrapForValidIterator",
                m = c.set,
                y = function (t) {
                    var e = c.getterFor(t ? v : h);
                    return u(o(l), {
                        next: function () {
                            var n = e(this);
                            if (t) return n.nextHandler();
                            try {
                                var r = n.done ? void 0 : n.nextHandler();
                                return f(r, n.done);
                            } catch (o) {
                                throw ((n.done = !0), o);
                            }
                        },
                        return: function () {
                            var n = e(this),
                                o = n.iterator;
                            if (((n.done = !0), t)) {
                                var i = a(o, "return");
                                return i ? r(i, o) : f(void 0, !0);
                            }
                            if (n.inner)
                                try {
                                    p(n.inner.iterator, "normal");
                                } catch (u) {
                                    return p(o, "throw", u);
                                }
                            return p(o, "normal"), f(void 0, !0);
                        },
                    });
                },
                g = y(!0),
                b = y(!1);
            i(b, d, "Iterator Helper"),
                (t.exports = function (t, e) {
                    var n = function (n, r) {
                        r ? ((r.iterator = n.iterator), (r.next = n.next)) : (r = n), (r.type = e ? v : h), (r.nextHandler = t), (r.counter = 0), (r.done = !1), m(this, r);
                    };
                    return (n.prototype = e ? g : b), n;
                });
        },
        function (t, e, n) {
            "use strict";
            var r = n(7),
                o = n(5),
                i = n(24);
            t.exports = function (t, e, n) {
                var u, s;
                o(t);
                try {
                    if (!(u = i(t, "return"))) {
                        if ("throw" === e) throw n;
                        return n;
                    }
                    u = r(u, t);
                } catch (c) {
                    (s = !0), (u = c);
                }
                if ("throw" === e) throw n;
                if (s) throw u;
                return o(u), n;
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(5),
                o = n(73);
            t.exports = function (t, e, n, i) {
                try {
                    return i ? e(r(n)[0], n[1]) : e(n);
                } catch (u) {
                    o(t, "throw", u);
                }
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(6),
                o = n(63).map;
            r(
                { target: "Array", proto: !0, forced: !n(42)("map") },
                {
                    map: function (t) {
                        return o(this, t, arguments.length > 1 ? arguments[1] : void 0);
                    },
                }
            );
        },
        function (t, e, n) {
            "use strict";
            var r = n(6),
                o = n(119);
            r({ target: "Iterator", proto: !0, real: !0, forced: n(13) }, { map: o });
        },
        function (t, e, n) {
            "use strict";
            var r = n(4),
                o = n(56).EXISTS,
                i = n(1),
                u = n(67),
                s = Function.prototype,
                c = i(s.toString),
                a = /function\b(?:\s|\/\*[\S\s]*?\*\/|\/\/[^\n\r]*[\n\r]+)*([^\s(/]*)/,
                l = i(a.exec);
            r &&
            !o &&
            u(s, "name", {
                configurable: !0,
                get: function () {
                    try {
                        return l(a, c(this))[1];
                    } catch (t) {
                        return "";
                    }
                },
            });
        },
        function (t, e, n) {
            "use strict";
            var r = n(6),
                o = n(120);
            r({ target: "Object", stat: !0, arity: 2, forced: Object.assign !== o }, { assign: o });
        },
        function (t, e, n) {
            "use strict";
            var r = n(6),
                o = n(44);
            r({ target: "RegExp", proto: !0, forced: /./.exec !== o }, { exec: o });
        },
        function (t, e, n) {
            "use strict";
            var r = TypeError;
            t.exports = function (t) {
                if (t > 9007199254740991) throw r("Maximum allowed index exceeded");
                return t;
            };
        },
        function (t, e) {
            var n;
            n = (function () {
                return this;
            })();
            try {
                n = n || new Function("return this")();
            } catch (r) {
                "object" == typeof window && (n = window);
            }
            t.exports = n;
        },
        function (t, e, n) {
            "use strict";
            var r = n(7),
                o = n(8),
                i = n(48),
                u = n(24),
                s = n(85),
                c = n(9),
                a = TypeError,
                l = c("toPrimitive");
            t.exports = function (t, e) {
                if (!o(t) || i(t)) return t;
                var n,
                    c = u(t, l);
                if (c) {
                    if ((void 0 === e && (e = "default"), (n = r(c, t, e)), !o(n) || i(n))) return n;
                    throw new a("Can't convert object to primitive value");
                }
                return void 0 === e && (e = "number"), s(t, e);
            };
        },
        function (t, e, n) {
            "use strict";
            t.exports = ("undefined" != typeof navigator && String(navigator.userAgent)) || "";
        },
        function (t, e, n) {
            "use strict";
            var r = String;
            t.exports = function (t) {
                try {
                    return r(t);
                } catch (e) {
                    return "Object";
                }
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(7),
                o = n(2),
                i = n(8),
                u = TypeError;
            t.exports = function (t, e) {
                var n, s;
                if ("string" === e && o((n = t.toString)) && !i((s = r(n, t)))) return s;
                if (o((n = t.valueOf)) && !i((s = r(n, t)))) return s;
                if ("string" !== e && o((n = t.toString)) && !i((s = r(n, t)))) return s;
                throw new u("Can't convert object to primitive value");
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(3),
                o = n(2),
                i = r.WeakMap;
            t.exports = o(i) && /native code/.test(String(i));
        },
        function (t, e, n) {
            "use strict";
            var r = n(17),
                o = n(1),
                i = n(88),
                u = n(61),
                s = n(5),
                c = o([].concat);
            t.exports =
                r("Reflect", "ownKeys") ||
                function (t) {
                    var e = i.f(s(t)),
                        n = u.f;
                    return n ? c(e, n(t)) : e;
                };
        },
        function (t, e, n) {
            "use strict";
            var r = n(59),
                o = n(38).concat("length", "prototype");
            e.f =
                Object.getOwnPropertyNames ||
                function (t) {
                    return r(t, o);
                };
        },
        function (t, e, n) {
            "use strict";
            var r = n(15),
                o = n(90),
                i = n(25),
                u = function (t) {
                    return function (e, n, u) {
                        var s,
                            c = r(e),
                            a = i(c),
                            l = o(u, a);
                        if (t && n != n) {
                            for (; a > l; ) if ((s = c[l++]) != s) return !0;
                        } else for (; a > l; l++) if ((t || l in c) && c[l] === n) return t || l || 0;
                        return !t && -1;
                    };
                };
            t.exports = { includes: u(!0), indexOf: u(!1) };
        },
        function (t, e, n) {
            "use strict";
            var r = n(37),
                o = Math.max,
                i = Math.min;
            t.exports = function (t, e) {
                var n = r(t);
                return n < 0 ? o(n + e, 0) : i(n, e);
            };
        },
        function (t, e, n) {
            "use strict";
            var r = Math.ceil,
                o = Math.floor;
            t.exports =
                Math.trunc ||
                function (t) {
                    var e = +t;
                    return (e > 0 ? o : r)(e);
                };
        },
        function (t, e, n) {
            "use strict";
            var r = n(0),
                o = n(2),
                i = /#|\.prototype\./,
                u = function (t, e) {
                    var n = c[s(t)];
                    return n === l || (n !== a && (o(e) ? r(e) : !!e));
                },
                s = (u.normalize = function (t) {
                    return String(t).replace(i, ".").toLowerCase();
                }),
                c = (u.data = {}),
                a = (u.NATIVE = "N"),
                l = (u.POLYFILL = "P");
            t.exports = u;
        },
        function (t, e, n) {
            "use strict";
            var r = n(20),
                o = Function.prototype,
                i = o.apply,
                u = o.call;
            t.exports =
                ("object" == typeof Reflect && Reflect.apply) ||
                (r
                    ? u.bind(i)
                    : function () {
                        return u.apply(i, arguments);
                    });
        },
        function (t, e, n) {
            "use strict";
            var r = n(17),
                o = n(10),
                i = n(11),
                u = n(29),
                s = n(62),
                c = n(58),
                a = n(98),
                l = n(99),
                f = n(100),
                p = n(101),
                d = n(102),
                h = n(4),
                v = n(13);
            t.exports = function (t, e, n, m) {
                var y = "stackTraceLimit",
                    g = m ? 2 : 1,
                    b = t.split("."),
                    x = b[b.length - 1],
                    w = r.apply(null, b);
                if (w) {
                    var O = w.prototype;
                    if ((!v && o(O, "cause") && delete O.cause, !n)) return w;
                    var _ = r("Error"),
                        S = e(function (t, e) {
                            var n = f(m ? e : t, void 0),
                                r = m ? new w(t) : new w();
                            return void 0 !== n && i(r, "message", n), d(r, S, r.stack, 2), this && u(O, this) && l(r, this, S), arguments.length > g && p(r, arguments[g]), r;
                        });
                    if (((S.prototype = O), "Error" !== x ? (s ? s(S, _) : c(S, _, { name: !0 })) : h && y in w && (a(S, w, y), a(S, w, "prepareStackTrace")), c(S, w), !v))
                        try {
                            O.name !== x && i(O, "name", x), (O.constructor = S);
                        } catch (E) {}
                    return S;
                }
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(1),
                o = n(18);
            t.exports = function (t, e, n) {
                try {
                    return r(o(Object.getOwnPropertyDescriptor(t, e)[n]));
                } catch (i) {}
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(97),
                o = String,
                i = TypeError;
            t.exports = function (t) {
                if (r(t)) return t;
                throw new i("Can't set " + o(t) + " as a prototype");
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(8);
            t.exports = function (t) {
                return r(t) || null === t;
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(12).f;
            t.exports = function (t, e, n) {
                n in t ||
                r(t, n, {
                    configurable: !0,
                    get: function () {
                        return e[n];
                    },
                    set: function (t) {
                        e[n] = t;
                    },
                });
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(2),
                o = n(8),
                i = n(62);
            t.exports = function (t, e, n) {
                var u, s;
                return i && r((u = e.constructor)) && u !== n && o((s = u.prototype)) && s !== n.prototype && i(t, s), t;
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(26);
            t.exports = function (t, e) {
                return void 0 === t ? (arguments.length < 2 ? "" : e) : r(t);
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(8),
                o = n(11);
            t.exports = function (t, e) {
                r(e) && "cause" in e && o(t, "cause", e.cause);
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(11),
                o = n(103),
                i = n(104),
                u = Error.captureStackTrace;
            t.exports = function (t, e, n, s) {
                i && (u ? u(t, e) : r(t, "stack", o(n, s)));
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(1),
                o = Error,
                i = r("".replace),
                u = String(new o("zxcasd").stack),
                s = /\n\s*at [^:]*:[^\n]*/,
                c = s.test(u);
            t.exports = function (t, e) {
                if (c && "string" == typeof t && !o.prepareStackTrace) for (; e--; ) t = i(t, s, "");
                return t;
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(0),
                o = n(21);
            t.exports = !r(function () {
                var t = new Error("a");
                return !("stack" in t) || (Object.defineProperty(t, "stack", o(1, 7)), 7 !== t.stack);
            });
        },
        function (t, e, n) {
            "use strict";
            var r = n(6),
                o = n(63).filter;
            r(
                { target: "Array", proto: !0, forced: !n(42)("filter") },
                {
                    filter: function (t) {
                        return o(this, t, arguments.length > 1 ? arguments[1] : void 0);
                    },
                }
            );
        },
        function (t, e, n) {
            "use strict";
            var r = n(64),
                o = n(18),
                i = n(20),
                u = r(r.bind);
            t.exports = function (t, e) {
                return (
                    o(t),
                        void 0 === e
                            ? t
                            : i
                                ? u(t, e)
                                : function () {
                                    return t.apply(e, arguments);
                                }
                );
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(41),
                o = n(108),
                i = n(8),
                u = n(9)("species"),
                s = Array;
            t.exports = function (t) {
                var e;
                return r(t) && ((e = t.constructor), ((o(e) && (e === s || r(e.prototype))) || (i(e) && null === (e = e[u]))) && (e = void 0)), void 0 === e ? s : e;
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(1),
                o = n(0),
                i = n(2),
                u = n(39),
                s = n(17),
                c = n(57),
                a = function () {},
                l = [],
                f = s("Reflect", "construct"),
                p = /^\s*(?:class|function)\b/,
                d = r(p.exec),
                h = !p.test(a),
                v = function (t) {
                    if (!i(t)) return !1;
                    try {
                        return f(a, l, t), !0;
                    } catch (e) {
                        return !1;
                    }
                },
                m = function (t) {
                    if (!i(t)) return !1;
                    switch (u(t)) {
                        case "AsyncFunction":
                        case "GeneratorFunction":
                        case "AsyncGeneratorFunction":
                            return !1;
                    }
                    try {
                        return h || !!d(p, c(t));
                    } catch (e) {
                        return !0;
                    }
                };
            (m.sham = !0),
                (t.exports =
                    !f ||
                    o(function () {
                        var t;
                        return (
                            v(v.call) ||
                            !v(Object) ||
                            !v(function () {
                                t = !0;
                            }) ||
                            t
                        );
                    })
                        ? m
                        : v);
        },
        function (t, e, n) {
            "use strict";
            var r = n(40),
                o = n(19),
                i = n(110);
            r || o(Object.prototype, "toString", i, { unsafe: !0 });
        },
        function (t, e, n) {
            "use strict";
            var r = n(40),
                o = n(39);
            t.exports = r
                ? {}.toString
                : function () {
                    return "[object " + o(this) + "]";
                };
        },
        function (t, e, n) {
            "use strict";
            var r = n(6),
                o = n(3),
                i = n(112),
                u = n(5),
                s = n(2),
                c = n(66),
                a = n(67),
                l = n(68),
                f = n(0),
                p = n(10),
                d = n(9),
                h = n(69).IteratorPrototype,
                v = n(4),
                m = n(13),
                y = "constructor",
                g = "Iterator",
                b = d("toStringTag"),
                x = TypeError,
                w = o[g],
                O =
                    m ||
                    !s(w) ||
                    w.prototype !== h ||
                    !f(function () {
                        w({});
                    }),
                _ = function () {
                    if ((i(this, h), c(this) === h)) throw new x("Abstract class Iterator not directly constructable");
                },
                S = function (t, e) {
                    v
                        ? a(h, t, {
                            configurable: !0,
                            get: function () {
                                return e;
                            },
                            set: function (e) {
                                if ((u(this), this === h)) throw new x("You can't redefine this property");
                                p(this, t) ? (this[t] = e) : l(this, t, e);
                            },
                        })
                        : (h[t] = e);
                };
            p(h, b) || S(b, g), (!O && p(h, y) && h[y] !== Object) || S(y, _), (_.prototype = h), r({ global: !0, constructor: !0, forced: O }, { Iterator: _ });
        },
        function (t, e, n) {
            "use strict";
            var r = n(29),
                o = TypeError;
            t.exports = function (t, e) {
                if (r(e, t)) return t;
                throw new o("Incorrect invocation");
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(0);
            t.exports = !r(function () {
                function t() {}
                return (t.prototype.constructor = null), Object.getPrototypeOf(new t()) !== t.prototype;
            });
        },
        function (t, e, n) {
            "use strict";
            var r = n(4),
                o = n(54),
                i = n(12),
                u = n(5),
                s = n(15),
                c = n(70);
            e.f =
                r && !o
                    ? Object.defineProperties
                    : function (t, e) {
                        u(t);
                        for (var n, r = s(e), o = c(e), a = o.length, l = 0; a > l; ) i.f(t, (n = o[l++]), r[n]);
                        return t;
                    };
        },
        function (t, e, n) {
            "use strict";
            var r = n(17);
            t.exports = r("document", "documentElement");
        },
        function (t, e, n) {
            "use strict";
            var r = n(6),
                o = n(7),
                i = n(18),
                u = n(5),
                s = n(71),
                c = n(72),
                a = n(74),
                l = n(13),
                f = c(function () {
                    for (var t, e, n = this.iterator, r = this.predicate, i = this.next; ; ) {
                        if (((t = u(o(i, n))), (this.done = !!t.done))) return;
                        if (((e = t.value), a(n, r, [e, this.counter++], !0))) return e;
                    }
                });
            r(
                { target: "Iterator", proto: !0, real: !0, forced: l },
                {
                    filter: function (t) {
                        return u(this), i(t), new f(s(this), { predicate: t });
                    },
                }
            );
        },
        function (t, e, n) {
            "use strict";
            var r = n(19);
            t.exports = function (t, e, n) {
                for (var o in e) r(t, o, e[o], n);
                return t;
            };
        },
        function (t, e, n) {
            "use strict";
            t.exports = function (t, e) {
                return { value: t, done: e };
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(7),
                o = n(18),
                i = n(5),
                u = n(71),
                s = n(72),
                c = n(74),
                a = s(function () {
                    var t = this.iterator,
                        e = i(r(this.next, t));
                    if (!(this.done = !!e.done)) return c(t, this.mapper, [e.value, this.counter++], !0);
                });
            t.exports = function (t) {
                return i(this), o(t), new a(u(this), { mapper: t });
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(4),
                o = n(1),
                i = n(7),
                u = n(0),
                s = n(70),
                c = n(61),
                a = n(47),
                l = n(14),
                f = n(22),
                p = Object.assign,
                d = Object.defineProperty,
                h = o([].concat);
            t.exports =
                !p ||
                u(function () {
                    if (
                        r &&
                        1 !==
                        p(
                            { b: 1 },
                            p(
                                d({}, "a", {
                                    enumerable: !0,
                                    get: function () {
                                        d(this, "b", { value: 3, enumerable: !1 });
                                    },
                                }),
                                { b: 2 }
                            )
                        ).b
                    )
                        return !0;
                    var t = {},
                        e = {},
                        n = Symbol("assign detection"),
                        o = "abcdefghijklmnopqrst";
                    return (
                        (t[n] = 7),
                            o.split("").forEach(function (t) {
                                e[t] = t;
                            }),
                        7 !== p({}, t)[n] || s(p({}, e)).join("") !== o
                    );
                })
                    ? function (t, e) {
                        for (var n = l(t), o = arguments.length, u = 1, p = c.f, d = a.f; o > u; )
                            for (var v, m = f(arguments[u++]), y = p ? h(s(m), p(m)) : s(m), g = y.length, b = 0; g > b; ) (v = y[b++]), (r && !i(d, m, v)) || (n[v] = m[v]);
                        return n;
                    }
                    : p;
        },
        function (t, e, n) {
            "use strict";
            var r = n(5);
            t.exports = function () {
                var t = r(this),
                    e = "";
                return t.hasIndices && (e += "d"), t.global && (e += "g"), t.ignoreCase && (e += "i"), t.multiline && (e += "m"), t.dotAll && (e += "s"), t.unicode && (e += "u"), t.unicodeSets && (e += "v"), t.sticky && (e += "y"), e;
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(0),
                o = n(3).RegExp,
                i = r(function () {
                    var t = o("a", "y");
                    return (t.lastIndex = 2), null !== t.exec("abcd");
                }),
                u =
                    i ||
                    r(function () {
                        return !o("a", "y").sticky;
                    }),
                s =
                    i ||
                    r(function () {
                        var t = o("^r", "gy");
                        return (t.lastIndex = 2), null !== t.exec("str");
                    });
            t.exports = { BROKEN_CARET: s, MISSED_STICKY: u, UNSUPPORTED_Y: i };
        },
        function (t, e, n) {
            "use strict";
            var r = n(0),
                o = n(3).RegExp;
            t.exports = r(function () {
                var t = o(".", "s");
                return !(t.dotAll && t.test("\n") && "s" === t.flags);
            });
        },
        function (t, e, n) {
            "use strict";
            var r = n(0),
                o = n(3).RegExp;
            t.exports = r(function () {
                var t = o("(?<a>b)", "g");
                return "b" !== t.exec("b").groups.a || "bc" !== "b".replace(t, "$<a>c");
            });
        },
        function (t, e, n) {
            "use strict";
            var r = n(7),
                o = n(126),
                i = n(5),
                u = n(27),
                s = n(60),
                c = n(26),
                a = n(23),
                l = n(24),
                f = n(127),
                p = n(129);
            o("match", function (t, e, n) {
                return [
                    function (e) {
                        var n = a(this),
                            o = u(e) ? void 0 : l(e, t);
                        return o ? r(o, e, n) : new RegExp(e)[t](c(n));
                    },
                    function (t) {
                        var r = i(this),
                            o = c(t),
                            u = n(e, r, o);
                        if (u.done) return u.value;
                        if (!r.global) return p(r, o);
                        var a = r.unicode;
                        r.lastIndex = 0;
                        for (var l, d = [], h = 0; null !== (l = p(r, o)); ) {
                            var v = c(l[0]);
                            (d[h] = v), "" === v && (r.lastIndex = f(o, s(r.lastIndex), a)), h++;
                        }
                        return 0 === h ? null : d;
                    },
                ];
            });
        },
        function (t, e, n) {
            "use strict";
            n(79);
            var r = n(64),
                o = n(19),
                i = n(44),
                u = n(0),
                s = n(9),
                c = n(11),
                a = s("species"),
                l = RegExp.prototype;
            t.exports = function (t, e, n, f) {
                var p = s(t),
                    d = !u(function () {
                        var e = {};
                        return (
                            (e[p] = function () {
                                return 7;
                            }),
                            7 !== ""[t](e)
                        );
                    }),
                    h =
                        d &&
                        !u(function () {
                            var e = !1,
                                n = /a/;
                            return (
                                "split" === t &&
                                (((n = {}).constructor = {}),
                                    (n.constructor[a] = function () {
                                        return n;
                                    }),
                                    (n.flags = ""),
                                    (n[p] = /./[p])),
                                    (n.exec = function () {
                                        return (e = !0), null;
                                    }),
                                    n[p](""),
                                    !e
                            );
                        });
                if (!d || !h || n) {
                    var v = r(/./[p]),
                        m = e(p, ""[t], function (t, e, n, o, u) {
                            var s = r(t),
                                c = e.exec;
                            return c === i || c === l.exec ? (d && !u ? { done: !0, value: v(e, n, o) } : { done: !0, value: s(n, e, o) }) : { done: !1 };
                        });
                    o(String.prototype, t, m[0]), o(l, p, m[1]);
                }
                f && c(l[p], "sham", !0);
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(128).charAt;
            t.exports = function (t, e, n) {
                return e + (n ? r(t, e).length : 1);
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(1),
                o = n(37),
                i = n(26),
                u = n(23),
                s = r("".charAt),
                c = r("".charCodeAt),
                a = r("".slice),
                l = function (t) {
                    return function (e, n) {
                        var r,
                            l,
                            f = i(u(e)),
                            p = o(n),
                            d = f.length;
                        return p < 0 || p >= d
                            ? t
                                ? ""
                                : void 0
                            : (r = c(f, p)) < 55296 || r > 56319 || p + 1 === d || (l = c(f, p + 1)) < 56320 || l > 57343
                                ? t
                                    ? s(f, p)
                                    : r
                                : t
                                    ? a(f, p, p + 2)
                                    : l - 56320 + ((r - 55296) << 10) + 65536;
                    };
                };
            t.exports = { codeAt: l(!1), charAt: l(!0) };
        },
        function (t, e, n) {
            "use strict";
            var r = n(7),
                o = n(5),
                i = n(2),
                u = n(16),
                s = n(44),
                c = TypeError;
            t.exports = function (t, e) {
                var n = t.exec;
                if (i(n)) {
                    var a = r(n, t, e);
                    return null !== a && o(a), a;
                }
                if ("RegExp" === u(t)) return r(s, t, e);
                throw new c("RegExp#exec called on incompatible receiver");
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(6),
                o = n(14),
                i = n(25),
                u = n(131),
                s = n(80);
            r(
                {
                    target: "Array",
                    proto: !0,
                    arity: 1,
                    forced:
                        n(0)(function () {
                            return 4294967297 !== [].push.call({ length: 4294967296 }, 1);
                        }) ||
                        !(function () {
                            try {
                                Object.defineProperty([], "length", { writable: !1 }).push();
                            } catch (t) {
                                return t instanceof TypeError;
                            }
                        })(),
                },
                {
                    push: function (t) {
                        var e = o(this),
                            n = i(e),
                            r = arguments.length;
                        s(n + r);
                        for (var c = 0; c < r; c++) (e[n] = arguments[c]), n++;
                        return u(e, n), n;
                    },
                }
            );
        },
        function (t, e, n) {
            "use strict";
            var r = n(4),
                o = n(41),
                i = TypeError,
                u = Object.getOwnPropertyDescriptor,
                s =
                    r &&
                    !(function () {
                        if (void 0 !== this) return !0;
                        try {
                            Object.defineProperty([], "length", { writable: !1 }).length = 1;
                        } catch (t) {
                            return t instanceof TypeError;
                        }
                    })();
            t.exports = s
                ? function (t, e) {
                    if (o(t) && !u(t, "length").writable) throw new i("Cannot set read only .length");
                    return (t.length = e);
                }
                : function (t, e) {
                    return (t.length = e);
                };
        },
        function (t, e, n) {
            "use strict";
            var r = n(6),
                o = n(1),
                i = n(22),
                u = n(15),
                s = n(133),
                c = o([].join);
            r(
                { target: "Array", proto: !0, forced: i !== Object || !s("join", ",") },
                {
                    join: function (t) {
                        return c(u(this), void 0 === t ? "," : t);
                    },
                }
            );
        },
        function (t, e, n) {
            "use strict";
            var r = n(0);
            t.exports = function (t, e) {
                var n = [][t];
                return (
                    !!n &&
                    r(function () {
                        n.call(
                            null,
                            e ||
                            function () {
                                return 1;
                            },
                            1
                        );
                    })
                );
            };
        },
        function (t, e, n) {
            "use strict";
            var r = n(6),
                o = n(0),
                i = n(41),
                u = n(8),
                s = n(14),
                c = n(25),
                a = n(80),
                l = n(68),
                f = n(65),
                p = n(42),
                d = n(9),
                h = n(30),
                v = d("isConcatSpreadable"),
                m =
                    h >= 51 ||
                    !o(function () {
                        var t = [];
                        return (t[v] = !1), t.concat()[0] !== t;
                    }),
                y = function (t) {
                    if (!u(t)) return !1;
                    var e = t[v];
                    return void 0 !== e ? !!e : i(t);
                };
            r(
                { target: "Array", proto: !0, arity: 1, forced: !m || !p("concat") },
                {
                    concat: function (t) {
                        var e,
                            n,
                            r,
                            o,
                            i,
                            u = s(this),
                            p = f(u, 0),
                            d = 0;
                        for (e = -1, r = arguments.length; e < r; e++)
                            if (y((i = -1 === e ? u : arguments[e]))) for (o = c(i), a(d + o), n = 0; n < o; n++, d++) n in i && l(p, d, i[n]);
                            else a(d + 1), l(p, d++, i);
                        return (p.length = d), p;
                    },
                }
            );
        },
        function (t, e, n) {
            "use strict";
            n.r(e);
            n(45), n(105), n(109), n(111), n(116), n(75), n(76), n(77), n(78);
            var r = function () {},
                o = {},
                i = [],
                u = [];
            function s(t, e) {
                var n,
                    s,
                    c,
                    a,
                    l = u;
                for (a = arguments.length; a-- > 2; ) i.push(arguments[a]);
                for (e && null != e.children && (i.length || i.push(e.children), delete e.children); i.length; )
                    if ((s = i.pop()) && void 0 !== s.pop) for (a = s.length; a--; ) i.push(s[a]);
                    else
                        "boolean" == typeof s && (s = null),
                        (c = "function" != typeof t) && (null == s ? (s = "") : "number" == typeof s ? (s = String(s)) : "string" != typeof s && (c = !1)),
                            c && n ? (l[l.length - 1] += s) : l === u ? (l = [s]) : l.push(s),
                            (n = c);
                var f = new r();
                return (f.nodeName = t), (f.children = l), (f.attributes = null == e ? void 0 : e), (f.key = null == e ? void 0 : e.key), void 0 !== o.vnode && o.vnode(f), f;
            }
            function c(t, e) {
                for (var n in e) t[n] = e[n];
                return t;
            }
            function a(t, e) {
                t && ("function" == typeof t ? t(e) : (t.current = e));
            }
            var l = "function" == typeof Promise ? Promise.resolve().then.bind(Promise.resolve()) : setTimeout;
            var f = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i,
                p = [];
            function d(t) {
                !t._dirty && (t._dirty = !0) && 1 == p.push(t) && (o.debounceRendering || l)(h);
            }
            function h() {
                for (var t; (t = p.pop()); ) t._dirty && R(t);
            }
            function v(t, e, n) {
                return "string" == typeof e || "number" == typeof e ? void 0 !== t.splitText : "string" == typeof e.nodeName ? !t._componentConstructor && m(t, e.nodeName) : n || t._componentConstructor === e.nodeName;
            }
            function m(t, e) {
                return t.normalizedNodeName === e || t.nodeName.toLowerCase() === e.toLowerCase();
            }
            function y(t) {
                var e = c({}, t.attributes);
                e.children = t.children;
                var n = t.nodeName.defaultProps;
                if (void 0 !== n) for (var r in n) void 0 === e[r] && (e[r] = n[r]);
                return e;
            }
            function g(t) {
                var e = t.parentNode;
                e && e.removeChild(t);
            }
            function b(t, e, n, r, o) {
                if (("className" === e && (e = "class"), "key" === e));
                else if ("ref" === e) a(n, null), a(r, t);
                else if ("class" !== e || o)
                    if ("style" === e) {
                        if (((r && "string" != typeof r && "string" != typeof n) || (t.style.cssText = r || ""), r && "object" == typeof r)) {
                            if ("string" != typeof n) for (var i in n) i in r || (t.style[i] = "");
                            for (var i in r) t.style[i] = "number" == typeof r[i] && !1 === f.test(i) ? r[i] + "px" : r[i];
                        }
                    } else if ("dangerouslySetInnerHTML" === e) r && (t.innerHTML = r.__html || "");
                    else if ("o" == e[0] && "n" == e[1]) {
                        var u = e !== (e = e.replace(/Capture$/, ""));
                        (e = e.toLowerCase().substring(2)), r ? n || t.addEventListener(e, x, u) : t.removeEventListener(e, x, u), ((t._listeners || (t._listeners = {}))[e] = r);
                    } else if ("list" !== e && "type" !== e && !o && e in t) {
                        try {
                            t[e] = null == r ? "" : r;
                        } catch (c) {}
                        (null != r && !1 !== r) || "spellcheck" == e || t.removeAttribute(e);
                    } else {
                        var s = o && e !== (e = e.replace(/^xlink:?/, ""));
                        null == r || !1 === r
                            ? s
                                ? t.removeAttributeNS("http://www.w3.org/1999/xlink", e.toLowerCase())
                                : t.removeAttribute(e)
                            : "function" != typeof r && (s ? t.setAttributeNS("http://www.w3.org/1999/xlink", e.toLowerCase(), r) : t.setAttribute(e, r));
                    }
                else t.className = r || "";
            }
            function x(t) {
                return this._listeners[t.type]((o.event && o.event(t)) || t);
            }
            var w = [],
                O = 0,
                _ = !1,
                S = !1;
            function E() {
                for (var t; (t = w.shift()); ) o.afterMount && o.afterMount(t), t.componentDidMount && t.componentDidMount();
            }
            function C(t, e, n, r, o, i) {
                O++ || ((_ = null != o && void 0 !== o.ownerSVGElement), (S = null != t && !("__preactattr_" in t)));
                var u = I(t, e, n, r, i);
                return o && u.parentNode !== o && o.appendChild(u), --O || ((S = !1), i || E()), u;
            }
            function I(t, e, n, r, o) {
                var i = t,
                    u = _;
                if (((null != e && "boolean" != typeof e) || (e = ""), "string" == typeof e || "number" == typeof e))
                    return (
                        t && void 0 !== t.splitText && t.parentNode && (!t._component || o) ? t.nodeValue != e && (t.nodeValue = e) : ((i = document.createTextNode(e)), t && (t.parentNode && t.parentNode.replaceChild(i, t), j(t, !0))),
                            (i.__preactattr_ = !0),
                            i
                    );
                var s,
                    c,
                    a = e.nodeName;
                if ("function" == typeof a)
                    return (function (t, e, n, r) {
                        var o = t && t._component,
                            i = o,
                            u = t,
                            s = o && t._componentConstructor === e.nodeName,
                            c = s,
                            a = y(e);
                        for (; o && !c && (o = o._parentComponent); ) c = o.constructor === e.nodeName;
                        o && c && (!r || o._component)
                            ? (N(o, a, 3, n, r), (t = o.base))
                            : (i && !s && (M(i), (t = u = null)), (o = T(e.nodeName, a, n)), t && !o.nextBase && ((o.nextBase = t), (u = null)), N(o, a, 1, n, r), (t = o.base), u && t !== u && ((u._component = null), j(u, !1)));
                        return t;
                    })(t, e, n, r);
                if (
                    ((_ = "svg" === a || ("foreignObject" !== a && _)),
                        (a = String(a)),
                    (!t || !m(t, a)) && ((s = a), ((c = _ ? document.createElementNS("http://www.w3.org/2000/svg", s) : document.createElement(s)).normalizedNodeName = s), (i = c), t))
                ) {
                    for (; t.firstChild; ) i.appendChild(t.firstChild);
                    t.parentNode && t.parentNode.replaceChild(i, t), j(t, !0);
                }
                var l = i.firstChild,
                    f = i.__preactattr_,
                    p = e.children;
                if (null == f) {
                    f = i.__preactattr_ = {};
                    for (var d = i.attributes, h = d.length; h--; ) f[d[h].name] = d[h].value;
                }
                return (
                    !S && p && 1 === p.length && "string" == typeof p[0] && null != l && void 0 !== l.splitText && null == l.nextSibling
                        ? l.nodeValue != p[0] && (l.nodeValue = p[0])
                        : ((p && p.length) || null != l) &&
                        (function (t, e, n, r, o) {
                            var i,
                                u,
                                s,
                                c,
                                a,
                                l = t.childNodes,
                                f = [],
                                p = {},
                                d = 0,
                                h = 0,
                                m = l.length,
                                y = 0,
                                b = e ? e.length : 0;
                            if (0 !== m)
                                for (var x = 0; x < m; x++) {
                                    var w = l[x],
                                        O = w.__preactattr_;
                                    null != (_ = b && O ? (w._component ? w._component.__key : O.key) : null) ? (d++, (p[_] = w)) : (O || (void 0 !== w.splitText ? !o || w.nodeValue.trim() : o)) && (f[y++] = w);
                                }
                            if (0 !== b)
                                for (x = 0; x < b; x++) {
                                    var _;
                                    if (((a = null), null != (_ = (c = e[x]).key))) d && void 0 !== p[_] && ((a = p[_]), (p[_] = void 0), d--);
                                    else if (h < y)
                                        for (i = h; i < y; i++)
                                            if (void 0 !== f[i] && v((u = f[i]), c, o)) {
                                                (a = u), (f[i] = void 0), i === y - 1 && y--, i === h && h++;
                                                break;
                                            }
                                    (a = I(a, c, n, r)), (s = l[x]), a && a !== t && a !== s && (null == s ? t.appendChild(a) : a === s.nextSibling ? g(s) : t.insertBefore(a, s));
                                }
                            if (d) for (var x in p) void 0 !== p[x] && j(p[x], !1);
                            for (; h <= y; ) void 0 !== (a = f[y--]) && j(a, !1);
                        })(i, p, n, r, S || null != f.dangerouslySetInnerHTML),
                        (function (t, e, n) {
                            var r;
                            for (r in n) (e && null != e[r]) || null == n[r] || b(t, r, n[r], (n[r] = void 0), _);
                            for (r in e) "children" === r || "innerHTML" === r || (r in n && e[r] === ("value" === r || "checked" === r ? t[r] : n[r])) || b(t, r, n[r], (n[r] = e[r]), _);
                        })(i, e.attributes, f),
                        (_ = u),
                        i
                );
            }
            function j(t, e) {
                var n = t._component;
                n ? M(n) : (null != t.__preactattr_ && a(t.__preactattr_.ref, null), (!1 !== e && null != t.__preactattr_) || g(t), P(t));
            }
            function P(t) {
                for (t = t.lastChild; t; ) {
                    var e = t.previousSibling;
                    j(t, !0), (t = e);
                }
            }
            var A = [];
            function T(t, e, n) {
                var r,
                    o = A.length;
                for (t.prototype && t.prototype.render ? ((r = new t(e, n)), L.call(r, e, n)) : (((r = new L(e, n)).constructor = t), (r.render = k)); o--; )
                    if (A[o].constructor === t) return (r.nextBase = A[o].nextBase), A.splice(o, 1), r;
                return r;
            }
            function k(t, e, n) {
                return this.constructor(t, n);
            }
            function N(t, e, n, r, i) {
                t._disable ||
                ((t._disable = !0),
                    (t.__ref = e.ref),
                    (t.__key = e.key),
                    delete e.ref,
                    delete e.key,
                void 0 === t.constructor.getDerivedStateFromProps && (!t.base || i ? t.componentWillMount && t.componentWillMount() : t.componentWillReceiveProps && t.componentWillReceiveProps(e, r)),
                r && r !== t.context && (t.prevContext || (t.prevContext = t.context), (t.context = r)),
                t.prevProps || (t.prevProps = t.props),
                    (t.props = e),
                    (t._disable = !1),
                0 !== n && (1 !== n && !1 === o.syncComponentUpdates && t.base ? d(t) : R(t, 1, i)),
                    a(t.__ref, t));
            }
            function R(t, e, n, r) {
                if (!t._disable) {
                    var i,
                        u,
                        s,
                        a = t.props,
                        l = t.state,
                        f = t.context,
                        p = t.prevProps || a,
                        d = t.prevState || l,
                        h = t.prevContext || f,
                        v = t.base,
                        m = t.nextBase,
                        g = v || m,
                        b = t._component,
                        x = !1,
                        _ = h;
                    if (
                        (t.constructor.getDerivedStateFromProps && ((l = c(c({}, l), t.constructor.getDerivedStateFromProps(a, l))), (t.state = l)),
                        v &&
                        ((t.props = p),
                            (t.state = d),
                            (t.context = h),
                            2 !== e && t.shouldComponentUpdate && !1 === t.shouldComponentUpdate(a, l, f) ? (x = !0) : t.componentWillUpdate && t.componentWillUpdate(a, l, f),
                            (t.props = a),
                            (t.state = l),
                            (t.context = f)),
                            (t.prevProps = t.prevState = t.prevContext = t.nextBase = null),
                            (t._dirty = !1),
                            !x)
                    ) {
                        (i = t.render(a, l, f)), t.getChildContext && (f = c(c({}, f), t.getChildContext())), v && t.getSnapshotBeforeUpdate && (_ = t.getSnapshotBeforeUpdate(p, d));
                        var S,
                            I,
                            P = i && i.nodeName;
                        if ("function" == typeof P) {
                            var A = y(i);
                            (u = b) && u.constructor === P && A.key == u.__key ? N(u, A, 1, f, !1) : ((S = u), (t._component = u = T(P, A, f)), (u.nextBase = u.nextBase || m), (u._parentComponent = t), N(u, A, 0, f, !1), R(u, 1, n, !0)),
                                (I = u.base);
                        } else (s = g), (S = b) && (s = t._component = null), (g || 1 === e) && (s && (s._component = null), (I = C(s, i, f, n || !v, g && g.parentNode, !0)));
                        if (g && I !== g && u !== b) {
                            var k = g.parentNode;
                            k && I !== k && (k.replaceChild(I, g), S || ((g._component = null), j(g, !1)));
                        }
                        if ((S && M(S), (t.base = I), I && !r)) {
                            for (var L = t, D = t; (D = D._parentComponent); ) (L = D).base = I;
                            (I._component = L), (I._componentConstructor = L.constructor);
                        }
                    }
                    for (!v || n ? w.push(t) : x || (t.componentDidUpdate && t.componentDidUpdate(p, d, _), o.afterUpdate && o.afterUpdate(t)); t._renderCallbacks.length; ) t._renderCallbacks.pop().call(t);
                    O || r || E();
                }
            }
            function M(t) {
                o.beforeUnmount && o.beforeUnmount(t);
                var e = t.base;
                (t._disable = !0), t.componentWillUnmount && t.componentWillUnmount(), (t.base = null);
                var n = t._component;
                n ? M(n) : e && (null != e.__preactattr_ && a(e.__preactattr_.ref, null), (t.nextBase = e), g(e), A.push(t), P(e)), a(t.__ref, null);
            }
            function L(t, e) {
                (this._dirty = !0), (this.context = e), (this.props = t), (this.state = this.state || {}), (this._renderCallbacks = []);
            }
            function D(t, e, n) {
                return C(n, t, {}, !1, e, !1);
            }
            c(L.prototype, {
                setState: function (t, e) {
                    this.prevState || (this.prevState = this.state), (this.state = c(c({}, this.state), "function" == typeof t ? t(this.state, this.props) : t)), e && this._renderCallbacks.push(e), d(this);
                },
                forceUpdate: function (t) {
                    t && this._renderCallbacks.push(t), R(this, 2);
                },
                render: function () {},
            });
            n(79), n(125), n(130), n(132), n(134);
            function B(t, e) {
                return (
                    (B = Object.setPrototypeOf
                        ? Object.setPrototypeOf.bind()
                        : function (t, e) {
                            return (t.__proto__ = e), t;
                        }),
                        B(t, e)
                );
            }
            var F = (function (t) {
                var e, n;
                function r() {
                    for (var e, n = arguments.length, r = new Array(n), o = 0; o < n; o++) r[o] = arguments[o];
                    return ((e = t.call.apply(t, [this].concat(r)) || this).state = { bump: !1, debounced: !1 }), e;
                }
                (n = t), ((e = r).prototype = Object.create(n.prototype)), (e.prototype.constructor = e), B(e, n);
                var o = r.prototype;
                return (
                    (o.componentWillMount = function () {
                        var t,
                            e,
                            n,
                            r,
                            o = this;
                        this.debounceStatusUpdate =
                            ((t = function () {
                                if (!o.state.debounced) {
                                    var t = !o.props.isInFocus || o.props.validChoiceMade;
                                    o.setState(function (e) {
                                        return { bump: !e.bump, debounced: !0, silenced: t };
                                    });
                                }
                            }),
                                (e = 1400),
                                function () {
                                    var o = this,
                                        i = arguments,
                                        u = n && !r;
                                    clearTimeout(r),
                                        (r = setTimeout(function () {
                                            (r = null), n || t.apply(o, i);
                                        }, e)),
                                    u && t.apply(o, i);
                                });
                    }),
                        (o.componentWillReceiveProps = function (t) {
                            t.queryLength;
                            this.setState({ debounced: !1 });
                        }),
                        (o.render = function () {
                            var t = this.props,
                                e = t.id,
                                n = t.length,
                                r = t.queryLength,
                                o = t.minQueryLength,
                                i = t.selectedOption,
                                u = t.selectedOptionIndex,
                                c = t.tQueryTooShort,
                                a = t.tNoResults,
                                l = t.tSelectedOption,
                                f = t.tResults,
                                p = t.className,
                                d = this.state,
                                h = d.bump,
                                v = d.debounced,
                                m = d.silenced,
                                y = r < o,
                                g = 0 === n,
                                b = i ? l(i, n, u) : "",
                                x = null;
                            return (
                                (x = y ? c(o) : g ? a() : f(n, b)),
                                    this.debounceStatusUpdate(),
                                    s(
                                        "div",
                                        {
                                            className: p,
                                            style: { border: "0", clip: "rect(0 0 0 0)", height: "1px", marginBottom: "-1px", marginRight: "-1px", overflow: "hidden", padding: "0", position: "absolute", whiteSpace: "nowrap", width: "1px" },
                                        },
                                        s("div", { id: e + "__status--A", role: "status", "aria-atomic": "true", "aria-live": "polite" }, !m && v && h ? x : ""),
                                        s("div", { id: e + "__status--B", role: "status", "aria-atomic": "true", "aria-live": "polite" }, m || !v || h ? "" : x)
                                    )
                            );
                        }),
                        r
                );
            })(L);
            function U() {
                return (
                    (U = Object.assign
                        ? Object.assign.bind()
                        : function (t) {
                            for (var e = 1; e < arguments.length; e++) {
                                var n = arguments[e];
                                for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
                            }
                            return t;
                        }),
                        U.apply(this, arguments)
                );
            }
            function V(t) {
                if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t;
            }
            function q(t, e) {
                return (
                    (q = Object.setPrototypeOf
                        ? Object.setPrototypeOf.bind()
                        : function (t, e) {
                            return (t.__proto__ = e), t;
                        }),
                        q(t, e)
                );
            }
            F.defaultProps = {
                tQueryTooShort: function (t) {
                    return "Type in " + t + " or more characters for results";
                },
                tNoResults: function () {
                    return "No search results";
                },
                tSelectedOption: function (t, e, n) {
                    return t + " " + (n + 1) + " of " + e + " is highlighted";
                },
                tResults: function (t, e) {
                    return t + " " + (1 === t ? "result" : "results") + " " + (1 === t ? "is" : "are") + " " + "available" + ". " + e;
                },
            };
            var W = { 13: "enter", 27: "escape", 32: "space", 38: "up", 40: "down" };
            function H() {
                return "undefined" != typeof navigator && !(!navigator.userAgent.match(/(iPod|iPhone|iPad)/g) || !navigator.userAgent.match(/AppleWebKit/g));
            }
            var K = (function (t) {
                var e, n;
                function r(e) {
                    var n;
                    return (
                        ((n = t.call(this, e) || this).elementReferences = {}),
                            (n.state = { focused: null, hovered: null, menuOpen: !1, options: e.defaultValue ? [e.defaultValue] : [], query: e.defaultValue, validChoiceMade: !1, selected: null, ariaHint: !0 }),
                            (n.handleComponentBlur = n.handleComponentBlur.bind(V(n))),
                            (n.handleKeyDown = n.handleKeyDown.bind(V(n))),
                            (n.handleUpArrow = n.handleUpArrow.bind(V(n))),
                            (n.handleDownArrow = n.handleDownArrow.bind(V(n))),
                            (n.handleEnter = n.handleEnter.bind(V(n))),
                            (n.handlePrintableKey = n.handlePrintableKey.bind(V(n))),
                            (n.handleListMouseLeave = n.handleListMouseLeave.bind(V(n))),
                            (n.handleOptionBlur = n.handleOptionBlur.bind(V(n))),
                            (n.handleOptionClick = n.handleOptionClick.bind(V(n))),
                            (n.handleOptionFocus = n.handleOptionFocus.bind(V(n))),
                            (n.handleOptionMouseDown = n.handleOptionMouseDown.bind(V(n))),
                            (n.handleOptionMouseEnter = n.handleOptionMouseEnter.bind(V(n))),
                            (n.handleInputBlur = n.handleInputBlur.bind(V(n))),
                            (n.handleInputChange = n.handleInputChange.bind(V(n))),
                            (n.handleInputFocus = n.handleInputFocus.bind(V(n))),
                            (n.pollInputElement = n.pollInputElement.bind(V(n))),
                            (n.getDirectInputChanges = n.getDirectInputChanges.bind(V(n))),
                            n
                    );
                }
                (n = t), ((e = r).prototype = Object.create(n.prototype)), (e.prototype.constructor = e), q(e, n);
                var o = r.prototype;
                return (
                    (o.isQueryAnOption = function (t, e) {
                        var n = this;
                        return (
                            -1 !==
                            e
                                .map(function (t) {
                                    return n.templateInputValue(t).toLowerCase();
                                })
                                .indexOf(t.toLowerCase())
                        );
                    }),
                        (o.componentDidMount = function () {
                            this.pollInputElement();
                        }),
                        (o.componentWillUnmount = function () {
                            clearTimeout(this.$pollInput);
                        }),
                        (o.pollInputElement = function () {
                            var t = this;
                            this.getDirectInputChanges(),
                                (this.$pollInput = setTimeout(function () {
                                    t.pollInputElement();
                                }, 100));
                        }),
                        (o.getDirectInputChanges = function () {
                            var t = this.elementReferences[-1];
                            t && t.value !== this.state.query && this.handleInputChange({ target: { value: t.value } });
                        }),
                        (o.componentDidUpdate = function (t, e) {
                            var n = this.state.focused,
                                r = null === n,
                                o = e.focused !== n;
                            o && !r && this.elementReferences[n].focus();
                            var i = -1 === n,
                                u = o && null === e.focused;
                            if (i && u) {
                                var s = this.elementReferences[n];
                                s.setSelectionRange(0, s.value.length);
                            }
                        }),
                        (o.hasAutoselect = function () {
                            return !H() && this.props.autoselect;
                        }),
                        (o.templateInputValue = function (t) {
                            var e = this.props.templates && this.props.templates.inputValue;
                            return e ? e(t) : t;
                        }),
                        (o.templateSuggestion = function (t) {
                            var e = this.props.templates && this.props.templates.suggestion;
                            return e ? e(t) : t;
                        }),
                        (o.handleComponentBlur = function (t) {
                            var e,
                                n = this.state,
                                r = n.options,
                                o = n.query,
                                i = n.selected;
                            this.props.confirmOnBlur ? ((e = t.query || o), this.props.onConfirm(r[i])) : (e = o), this.setState({ focused: null, menuOpen: t.menuOpen || !1, query: e, selected: null });
                        }),
                        (o.handleListMouseLeave = function (t) {
                            this.setState({ hovered: null });
                        }),
                        (o.handleOptionBlur = function (t, e) {
                            var n = this.state,
                                r = n.focused,
                                o = n.menuOpen,
                                i = n.options,
                                u = n.selected,
                                s = null === t.relatedTarget,
                                c = t.relatedTarget === this.elementReferences[-1],
                                a = r !== e && -1 !== r;
                            if ((!a && s) || !(a || c)) {
                                var l = o && H();
                                this.handleComponentBlur({ menuOpen: l, query: this.templateInputValue(i[u]) });
                            }
                        }),
                        (o.handleInputBlur = function (t) {
                            var e = this.state,
                                n = e.focused,
                                r = e.menuOpen,
                                o = e.options,
                                i = e.query,
                                u = e.selected,
                                s = this.props,
                                c = s.emptyField,
                                a = s.id;
                            if (!(-1 !== n)) {
                                if (void 0 !== document.getElementById(a)) {
                                    var l = document.getElementById(a),
                                        f = c.previousElementSibling,
                                        p = l.value,
                                        d = document.querySelector('label[for="' + a + '"]');
                                    p.length || "" === c || ((c.value = ""), f.classList.remove("show"), d.classList.remove("show"));
                                }
                                var h = r && H(),
                                    v = H() ? i : this.templateInputValue(o[u]);
                                this.handleComponentBlur({ menuOpen: h, query: v });
                            }
                        }),
                        (o.handleInputChange = function (t) {
                            var e = this,
                                n = this.props,
                                r = n.minLength,
                                o = n.source,
                                i = n.showAllValues,
                                u = this.hasAutoselect(),
                                s = t.target.value,
                                c = 0 === s.length,
                                a = this.state.query !== s,
                                l = s.length >= r;
                            this.setState({ query: s, ariaHint: c }),
                                i || (!c && a && l)
                                    ? o(s, function (n) {
                                        var r = n.length > 0 && void 0 !== t.type;
                                        e.setState({ menuOpen: r, options: n, selected: u && r ? 0 : -1, validChoiceMade: !1 });
                                    })
                                    : (!c && l) || this.setState({ menuOpen: !1, options: [] });
                        }),
                        (o.handleInputClick = function (t) {
                            this.handleInputChange(t);
                        }),
                        (o.handleInputFocus = function (t) {
                            var e = this.state,
                                n = e.query,
                                r = e.validChoiceMade,
                                o = e.options,
                                i = this.props,
                                u = i.minLength,
                                s = i.id,
                                c = !r && n.length >= u && o.length > 0;
                            void 0 !== document.getElementById(s) && document.querySelector('label[for="' + s + '"]').classList.add("show");
                            c
                                ? this.setState(function (t) {
                                    var e = t.menuOpen;
                                    return { focused: -1, menuOpen: c || e, selected: -1 };
                                })
                                : this.setState({ focused: -1 });
                        }),
                        (o.handleOptionFocus = function (t) {
                            this.setState({ focused: t, hovered: null, selected: t });
                        }),
                        (o.handleOptionMouseEnter = function (t, e) {
                            H() || this.setState({ hovered: e });
                        }),
                        (o.handleOptionClick = function (t, e) {
                            var n = this.state.options[e],
                                r = this.templateInputValue(n);
                            this.props.onConfirm(n), this.setState({ focused: -1, hovered: null, menuOpen: !1, query: r, selected: -1, validChoiceMade: !0 }), this.forceUpdate();
                        }),
                        (o.handleOptionMouseDown = function (t) {
                            t.preventDefault();
                        }),
                        (o.handleUpArrow = function (t) {
                            t.preventDefault();
                            var e = this.state,
                                n = e.menuOpen,
                                r = e.selected;
                            -1 !== r && n && this.handleOptionFocus(r - 1);
                        }),
                        (o.handleDownArrow = function (t) {
                            var e = this;
                            if ((t.preventDefault(), this.props.showAllValues && !1 === this.state.menuOpen))
                                t.preventDefault(),
                                    this.props.source("", function (t) {
                                        e.setState({ menuOpen: !0, options: t, selected: 0, focused: 0, hovered: null });
                                    });
                            else if (!0 === this.state.menuOpen) {
                                var n = this.state,
                                    r = n.menuOpen,
                                    o = n.options,
                                    i = n.selected;
                                i !== o.length - 1 && r && this.handleOptionFocus(i + 1);
                            }
                        }),
                        (o.handleSpace = function (t) {
                            var e = this;
                            this.props.showAllValues &&
                            !1 === this.state.menuOpen &&
                            "" === this.state.query &&
                            (t.preventDefault(),
                                this.props.source("", function (t) {
                                    e.setState({ menuOpen: !0, options: t });
                                })),
                            -1 !== this.state.focused && (t.preventDefault(), this.handleOptionClick(t, this.state.focused));
                        }),
                        (o.handleEnter = function (t) {
                            this.state.menuOpen && (t.preventDefault(), this.state.selected >= 0 && this.handleOptionClick(t, this.state.selected));
                        }),
                        (o.handlePrintableKey = function (t) {
                            var e = this.elementReferences[-1];
                            t.target === e || e.focus();
                        }),
                        (o.handleKeyDown = function (t) {
                            switch (W[t.keyCode]) {
                                case "up":
                                    this.handleUpArrow(t);
                                    break;
                                case "down":
                                    this.handleDownArrow(t);
                                    break;
                                case "space":
                                    this.handleSpace(t);
                                    break;
                                case "enter":
                                    this.handleEnter(t);
                                    break;
                                case "escape":
                                    this.handleComponentBlur({ query: this.state.query });
                                    break;
                                default:
                                    (((e = t.keyCode) > 47 && e < 58) || 32 === e || 8 === e || (e > 64 && e < 91) || (e > 95 && e < 112) || (e > 185 && e < 193) || (e > 218 && e < 223)) && this.handlePrintableKey(t);
                            }
                            var e;
                        }),
                        (o.render = function () {
                            var t = this,
                                e = this.props,
                                n = e.cssNamespace,
                                r = e.displayMenu,
                                o = e.id,
                                i = e.minLength,
                                u = e.maxLength,
                                c = e.name,
                                a = e.placeholder,
                                l = e.required,
                                f = (e.showAllValues, e.tNoResults),
                                p = e.tStatusQueryTooShort,
                                d = e.tStatusNoResults,
                                h = e.tStatusSelectedOption,
                                v = e.tStatusResults,
                                m = e.tAssistiveHint,
                                y = e.menuAttributes,
                                g = e.inputClasses,
                                b = this.state,
                                x = b.focused,
                                w = b.hovered,
                                O = b.menuOpen,
                                _ = b.options,
                                S = b.query,
                                E = b.selected,
                                C = b.ariaHint,
                                I = b.validChoiceMade,
                                j = this.hasAutoselect(),
                                P = -1 === x,
                                A = 0 === _.length,
                                T = 0 !== S.length,
                                k = S.length >= i,
                                N = this.props.showNoOptionsFound && P && A && T && k,
                                R = n + "__wrapper",
                                M = n + "__status",
                                L = -1 !== x && null !== x,
                                D = n + "__menu",
                                B = D + "--" + r,
                                V = D + "--" + (O || N ? "visible" : "hidden"),
                                q = n + "__option",
                                W = n + "__hint",
                                K = this.templateInputValue(_[E]),
                                z = K && 0 === K.toLowerCase().indexOf(S.toLowerCase()) && j ? S + K.substr(S.length) : "",
                                G = o + "__assistiveHint",
                                Q = {
                                    "aria-describedby": C ? G : null,
                                    "aria-expanded": O ? "true" : "false",
                                    "aria-activedescendant": L ? o + "__option--" + x : null,
                                    "aria-autocomplete": this.hasAutoselect() ? "both" : "list",
                                    "aria-controls": o + "__listbox",
                                },
                                $ = n + "__input",
                                Y = [$, this.props.showAllValues ? $ + "--show-all-values" : $ + "--default"];
                            return (
                                null !== x && Y.push($ + "--focused"),
                                g && Y.push(g),
                                    s(
                                        "div",
                                        { className: R, onKeyDown: this.handleKeyDown },
                                        s(F, {
                                            id: o,
                                            length: _.length,
                                            queryLength: S.length,
                                            minQueryLength: i,
                                            selectedOption: this.templateInputValue(_[E]),
                                            selectedOptionIndex: E,
                                            validChoiceMade: I,
                                            isInFocus: null !== this.state.focused,
                                            tQueryTooShort: p,
                                            tNoResults: d,
                                            tSelectedOption: h,
                                            tResults: v,
                                            className: M,
                                        }),
                                        z && s("span", null, s("input", { className: W, readonly: !0, tabIndex: "-1", value: z })),
                                        s(
                                            "input",
                                            U(
                                                {},
                                                Q,
                                                {
                                                    autoComplete: "off",
                                                    className: Y.join(" "),
                                                    id: o,
                                                    onClick: function (e) {
                                                        return t.handleInputClick(e);
                                                    },
                                                    onBlur: this.handleInputBlur,
                                                },
                                                { onInput: this.handleInputChange },
                                                {
                                                    onFocus: this.handleInputFocus,
                                                    name: c,
                                                    placeholder: a,
                                                    ref: function (e) {
                                                        t.elementReferences[-1] = e;
                                                    },
                                                    type: "text",
                                                    role: "combobox",
                                                    required: l,
                                                    maxlength: u,
                                                    value: S,
                                                }
                                            )
                                        ),
                                        s(
                                            "ul",
                                            U(
                                                {
                                                    className: D + " " + B + " " + V,
                                                    onMouseLeave: function (e) {
                                                        return t.handleListMouseLeave(e);
                                                    },
                                                    id: o + "__listbox",
                                                    role: "listbox",
                                                },
                                                y
                                            ),
                                            _.map(function (e, n) {
                                                var r = (-1 === x ? E === n : x === n) && null === w ? " " + q + "--focused" : "",
                                                    i = n % 2 ? " " + q + "--odd" : "",
                                                    u = H()
                                                        ? "<span id=" +
                                                        o +
                                                        "__option-suffix--" +
                                                        n +
                                                        ' style="border:0;clip:rect(0 0 0 0);height:1px;marginBottom:-1px;marginRight:-1px;overflow:hidden;padding:0;position:absolute;whiteSpace:nowrap;width:1px"> ' +
                                                        (n + 1) +
                                                        " of " +
                                                        _.length +
                                                        "</span>"
                                                        : "";
                                                return s("li", {
                                                    "aria-selected": x === n ? "true" : "false",
                                                    className: "" + q + r + i,
                                                    dangerouslySetInnerHTML: { __html: t.templateSuggestion(e) + u },
                                                    id: o + "__option--" + n,
                                                    key: n,
                                                    onBlur: function (e) {
                                                        return t.handleOptionBlur(e, n);
                                                    },
                                                    onClick: function (e) {
                                                        return t.handleOptionClick(e, n);
                                                    },
                                                    onMouseDown: t.handleOptionMouseDown,
                                                    onMouseEnter: function (e) {
                                                        return t.handleOptionMouseEnter(e, n);
                                                    },
                                                    ref: function (e) {
                                                        t.elementReferences[n] = e;
                                                    },
                                                    role: "option",
                                                    tabIndex: "-1",
                                                    "aria-posinset": n + 1,
                                                    "aria-setsize": _.length,
                                                });
                                            }),
                                            N && s("li", { className: q + " " + q + "--no-results" }, f())
                                        ),
                                        s("span", { id: G, style: { display: "none" } }, m())
                                    )
                            );
                        }),
                        r
                );
            })(L);
            function z(t) {
                if (!t.element) throw new Error("element is not defined");
                if (!t.id) throw new Error("id is not defined");
                if (!t.source) throw new Error("source is not defined");
                Array.isArray(t.source) && (t.source = G(t.source)), D(s(K, t), t.element);
            }
            K.defaultProps = {
                autoselect: !1,
                cssNamespace: "autocomplete",
                defaultValue: "",
                displayMenu: "inline",
                minLength: 0,
                maxLength: 9999,
                emptyField: "",
                name: "input-autocomplete",
                placeholder: "",
                onConfirm: function () {},
                confirmOnBlur: !0,
                showNoOptionsFound: !0,
                showAllValues: !1,
                required: !1,
                tNoResults: function () {
                    return "No results found";
                },
                tAssistiveHint: function () {
                    return "When autocomplete results are available use up and down arrows to review and enter to select. Touch device users, explore by touch or with swipe gestures.";
                },
                menuAttributes: {},
                inputClasses: "",
            };
            var G = function (t) {
                return function (e, n) {
                    n(
                        t.filter(function (t) {
                            return -1 !== t.toLowerCase().indexOf(e.toLowerCase());
                        })
                    );
                };
            };
            z.enhanceSelectElement = function (t) {
                if (!t.selectElement) throw new Error("selectElement is not defined");
                if (!t.source) {
                    var e = [].filter.call(t.selectElement.options, function (e) {
                        return e.value || t.preserveNullOptions;
                    });
                    t.source = e.map(function (t) {
                        return t.textContent || t.innerText;
                    });
                }
                if (
                    ((t.onConfirm =
                        t.onConfirm ||
                        function (e) {
                            var n = [].filter.call(t.selectElement.options, function (t) {
                                return (t.textContent || t.innerText) === e;
                            })[0];
                            n && (n.selected = !0);
                        }),
                    t.selectElement.value || void 0 === t.defaultValue)
                ) {
                    var n = t.selectElement.options[t.selectElement.options.selectedIndex];
                    t.defaultValue = n.textContent || n.innerText;
                }
                void 0 === t.name && (t.name = ""), void 0 === t.id && (void 0 === t.selectElement.id ? (t.id = "") : (t.id = t.selectElement.id)), void 0 === t.autoselect && (t.autoselect = !0);
                var r = document.createElement("div");
                t.selectElement.parentNode.insertBefore(r, t.selectElement), z(Object.assign({}, t, { element: r })), (t.selectElement.style.display = "none"), (t.selectElement.id = t.selectElement.id + "-select");
            };
            e.default = z;
        },
    ]).default;
});
!(function (i) {
    "use strict";
    "function" == typeof define && define.amd ? define(["jquery"], i) : "undefined" != typeof exports ? (module.exports = i(require("jquery"))) : i(jQuery);
})(function (i) {
    "use strict";
    var t,
        s = window.Slick || {};
    ((s =
        ((t = 0),
            function s(e, o) {
                var n,
                    l = this;
                (l.defaults = {
                    accessibility: !0,
                    adaptiveHeight: !1,
                    appendArrows: i(e),
                    appendDots: i(e),
                    arrows: !0,
                    asNavFor: null,
                    labelPrev: "Previous",
                    labelNext: "Next",
                    labelPrevInfinite: "Previous (go to the last item)",
                    labelNextInfinite: "Next (go to the first item)",
                    labelPrevFirst: "First item",
                    labelNextFirst: "Last item",
                    labelAnnouncement: "Slide {currentItem} of {totalItems}",
                    labelPaginatioSeparator: "of",
                    prevArrow: '<button class="slick-prev" type="button">Previous</button>',
                    nextArrow: '<button class="slick-next" type="button">Next</button>',
                    autoplay: !1,
                    autoplaySpeed: 3e3,
                    centerMode: !1,
                    centerPadding: "50px",
                    cssEase: "ease",
                    customPaging: function (t, s) {
                        return i("<button />", { type: "button" });
                    },
                    dots: !1,
                    dotsClass: "slick-dots",
                    draggable: !0,
                    easing: "linear",
                    edgeFriction: 0.35,
                    fade: !1,
                    focusOnSelect: !1,
                    focusOnChange: !1,
                    infinite: !0,
                    initialSlide: 0,
                    lazyLoad: "ondemand",
                    mobileFirst: !1,
                    pauseOnHover: !1,
                    pauseOnFocus: !1,
                    pauseOnDotsHover: !0,
                    pauseLabel: "Stop animation",
                    playLabel: "Start animation",
                    respondTo: "window",
                    responsive: null,
                    rows: 1,
                    rtl: !1,
                    slide: "",
                    slidesPerRow: 1,
                    slidesToShow: 1,
                    slidesToScroll: 1,
                    speed: 500,
                    swipe: !0,
                    swipeToSlide: !1,
                    touchMove: !0,
                    touchThreshold: 5,
                    useCSS: !0,
                    useTransform: !0,
                    variableWidth: !1,
                    vertical: !1,
                    verticalSwiping: !1,
                    waitForAnimate: !0,
                    zIndex: 1e3,
                }),
                    (l.initials = {
                        animating: !1,
                        dragging: !1,
                        autoPlayTimer: null,
                        currentDirection: 0,
                        currentLeft: null,
                        currentSlide: 0,
                        direction: 1,
                        $dots: null,
                        listWidth: null,
                        listHeight: null,
                        loadIndex: 0,
                        $slideControls: null,
                        $nextArrow: null,
                        $prevArrow: null,
                        scrolling: !1,
                        slideCount: null,
                        slideWidth: null,
                        $slideTrack: null,
                        $slides: null,
                        sliding: !1,
                        slideOffset: 0,
                        swipeLeft: null,
                        swiping: !1,
                        $list: null,
                        touchObject: {},
                        transformsEnabled: !1,
                        unslicked: !1,
                    }),
                    i.extend(l, l.initials),
                    (l.activeBreakpoint = null),
                    (l.animType = null),
                    (l.animProp = null),
                    (l.breakpoints = []),
                    (l.breakpointSettings = []),
                    (l.cssTransitions = !1),
                    (l.focussed = !1),
                    (l.interrupted = !1),
                    (l.hidden = "hidden"),
                    (l.paused = !0),
                    (l.positionProp = null),
                    (l.respondTo = null),
                    (l.rowCount = 1),
                    (l.shouldClick = !0),
                    (l.$slider = i(e)),
                    (l.$slidesCache = null),
                    (l.transformType = null),
                    (l.transitionType = null),
                    (l.visibilityChange = "visibilitychange"),
                    (l.windowWidth = 0),
                    (l.windowTimer = null),
                    (n = i(e).data("slick") || {}),
                    (l.options = i.extend({}, l.defaults, o, n)),
                    (l.currentSlide = l.options.initialSlide),
                    (l.originalSettings = l.options),
                    void 0 !== document.mozHidden ? ((l.hidden = "mozHidden"), (l.visibilityChange = "mozvisibilitychange")) : void 0 !== document.webkitHidden && ((l.hidden = "webkitHidden"), (l.visibilityChange = "webkitvisibilitychange")),
                    (l.autoPlay = i.proxy(l.autoPlay, l)),
                    (l.autoPlayClear = i.proxy(l.autoPlayClear, l)),
                    (l.autoPlayIterator = i.proxy(l.autoPlayIterator, l)),
                    (l.changeSlide = i.proxy(l.changeSlide, l)),
                    (l.clickHandler = i.proxy(l.clickHandler, l)),
                    (l.selectHandler = i.proxy(l.selectHandler, l)),
                    (l.setPosition = i.proxy(l.setPosition, l)),
                    (l.swipeHandler = i.proxy(l.swipeHandler, l)),
                    (l.dragHandler = i.proxy(l.dragHandler, l)),
                    (l.keyHandler = i.proxy(l.keyHandler, l)),
                    (l.instanceUid = t++),
                    (l.htmlExpr = /^(?:\s*(<[\w\W]+>)[^>]*)$/),
                    l.registerBreakpoints(),
                    l.init(!0);
            })).prototype.activateADA = function () {
        this.$slideTrack.find(".slick-active").attr({ "aria-hidden": "false" }).find("a, input, button, select").attr({ tabindex: "0" });
    }),
        (s.prototype.addSlide = s.prototype.slickAdd = function (t, s, e) {
            var o = this;
            if ("boolean" == typeof s) (e = s), (s = null);
            else if (s < 0 || s >= o.slideCount) return !1;
            o.unload(),
                "number" == typeof s
                    ? 0 === s && 0 === o.$slides.length
                        ? i(t).appendTo(o.$slideTrack)
                        : e
                            ? i(t).insertBefore(o.$slides.eq(s))
                            : i(t).insertAfter(o.$slides.eq(s))
                    : !0 === e
                        ? i(t).prependTo(o.$slideTrack)
                        : i(t).appendTo(o.$slideTrack),
                (o.$slides = o.$slideTrack.children(this.options.slide)),
                o.$slideTrack.children(this.options.slide).detach(),
                o.$slideTrack.append(o.$slides),
                o.$slides.each(function (t, s) {
                    i(s).attr("data-slick-index", t);
                }),
                (o.$slidesCache = o.$slides),
                o.reinit();
        }),
        (s.prototype.animateHeight = function () {
            if (1 === this.options.slidesToShow && !0 === this.options.adaptiveHeight && !1 === this.options.vertical) {
                var i = this.$slides.eq(this.currentSlide).outerHeight(!0);
                this.$list.animate({ height: i }, this.options.speed);
            }
        }),
        (s.prototype.animateSlide = function (t, s) {
            var e = {},
                o = this;
            o.animateHeight(),
            !0 === o.options.rtl && !1 === o.options.vertical && (t = -t),
                !1 === o.transformsEnabled
                    ? !1 === o.options.vertical
                        ? o.$slideTrack.animate({ left: t }, o.options.speed, o.options.easing, s)
                        : o.$slideTrack.animate({ top: t }, o.options.speed, o.options.easing, s)
                    : !1 === o.cssTransitions
                        ? (!0 === o.options.rtl && (o.currentLeft = -o.currentLeft),
                            i({ animStart: o.currentLeft }).animate(
                                { animStart: t },
                                {
                                    duration: o.options.speed,
                                    easing: o.options.easing,
                                    step: function (i) {
                                        (i = Math.ceil(i)), !1 === o.options.vertical ? ((e[o.animType] = "translate(" + i + "px, 0px)"), o.$slideTrack.css(e)) : ((e[o.animType] = "translate(0px," + i + "px)"), o.$slideTrack.css(e));
                                    },
                                    complete: function () {
                                        s && s.call();
                                    },
                                }
                            ))
                        : (o.applyTransition(),
                            (t = Math.ceil(t)),
                            !1 === o.options.vertical ? (e[o.animType] = "translate3d(" + t + "px, 0px, 0px)") : (e[o.animType] = "translate3d(0px," + t + "px, 0px)"),
                            o.$slideTrack.css(e),
                        s &&
                        setTimeout(function () {
                            o.disableTransition(), s.call();
                        }, o.options.speed));
        }),
        (s.prototype.getNavTarget = function () {
            var t = this.options.asNavFor;
            return t && null !== t && (t = i(t).not(this.$slider)), t;
        }),
        (s.prototype.asNavFor = function (t) {
            var s = this.getNavTarget();
            null !== s &&
            "object" == typeof s &&
            s.each(function () {
                var s = i(this).slick("getSlick");
                s.unslicked || s.slideHandler(t, !0);
            });
        }),
        (s.prototype.applyTransition = function (i) {
            var t = this,
                s = {};
            !1 === t.options.fade ? (s[t.transitionType] = t.transformType + " " + t.options.speed + "ms " + t.options.cssEase) : (s[t.transitionType] = "opacity " + t.options.speed + "ms " + t.options.cssEase),
                !1 === t.options.fade ? t.$slideTrack.css(s) : t.$slides.eq(i).css(s);
        }),
        (s.prototype.autoPlay = function () {
            var i = this;
            i.autoPlayClear(), i.slideCount > i.options.slidesToShow && (i.autoPlayTimer = setInterval(i.autoPlayIterator, i.options.autoplaySpeed));
        }),
        (s.prototype.autoPlayClear = function () {
            this.autoPlayTimer && clearInterval(this.autoPlayTimer);
        }),
        (s.prototype.autoPlayIterator = function () {
            var i = this,
                t = i.currentSlide + i.options.slidesToScroll;
            i.paused ||
            i.interrupted ||
            i.focussed ||
            (!1 === i.options.infinite &&
            (1 === i.direction && i.currentSlide + 1 === i.slideCount - 1 ? (i.direction = 0) : 0 === i.direction && ((t = i.currentSlide - i.options.slidesToScroll), i.currentSlide - 1 == 0 && (i.direction = 1))),
                i.slideHandler(t));
        }),
        (s.prototype.buildArrows = function () {
            var t = this;
            (t.$slideControls = i("<ul />", { class: "slick-controls" })),
            !0 === t.options.arrows &&
            ((t.$prevArrow = i(t.options.prevArrow).addClass("slick-arrow slick-control")),
                (t.$nextArrow = i(t.options.nextArrow).addClass("slick-arrow slick-control")),
                t.slideCount > t.options.slidesToShow
                    ? (t.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),
                        t.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),
                    t.htmlExpr.test(t.options.prevArrow) && t.$prevArrow.appendTo(t.$slideControls).wrapAll("<li></li>"),
                    t.htmlExpr.test(t.options.nextArrow) && t.$nextArrow.appendTo(t.$slideControls).wrapAll("<li></li>"),
                    !0 !== t.options.infinite && t.$prevArrow.addClass("slick-disabled").attr("aria-disabled", "true"))
                    : t.$prevArrow.add(t.$nextArrow).addClass("slick-hidden").attr({ "aria-disabled": "true", tabindex: "-1" })),
            t.options.accessibility &&
            t.options.autoplay &&
            ((t.$pauseButton = i("<button />", {
                class: "btn btn--circle slick-pause slick--playing",
                "data-action": "pause",
                html:
                    '<span class="slick-visually-hidden">' +
                    t.options.pauseLabel +
                    '</span>                <svg aria-hidden="true" focusable="false" class="pause">                    <use xlink:href="#pause"></use>                </svg>',
            })),
                t.$pauseButton.appendTo(t.options.appendArrows)),
            t.$slideControls.find("li").length && t.$slideControls.appendTo(t.options.appendArrows),
            t.options.accessibility && ((t.$liveRegion = i("<div />", { "aria-live": "polite", "aria-atomic": "true", class: "live-region slick-visually-hidden" })), t.$liveRegion.appendTo(t.options.appendArrows));
        }),
        (s.prototype.buildDots = function () {
            var t,
                s,
                e = this;
            if (!0 === e.options.dots && e.slideCount > e.options.slidesToShow) {
                for (e.$slider.addClass("slick-dotted"), s = i("<ul />", { class: e.options.dotsClass }), t = 0; t <= e.getDotCount(); t += 1) s.append(i("<li />", { class: "slick-dot" }).append(e.options.customPaging.call(this, e, t)));
                (e.$dots = s.appendTo(e.options.appendDots)), e.$dots.find("li").first().addClass("slick-active");
            }
        }),
        (s.prototype.buildOut = function () {
            var t = this;
            (t.$slides = t.$slider.children(t.options.slide + ":not(.slick-cloned)").addClass("slick-slide")),
                (t.slideCount = t.$slides.length),
                t.$slides.each(function (t, s) {
                    i(s)
                        .attr("data-slick-index", t)
                        .data("originalStyling", i(s).attr("style") || "");
                }),
                t.$slider.addClass("slick-slider"),
                (t.$slideTrack = 0 === t.slideCount ? i('<div class="slick-track"/>').appendTo(t.$slider) : t.$slides.wrapAll('<div class="slick-track"/>').parent()),
                (t.$list = t.$slideTrack.wrap('<div class="slick-list"/>').parent()),
                t.$slideTrack.css("opacity", 0),
            (!0 === t.options.centerMode || !0 === t.options.swipeToSlide) && (t.options.slidesToScroll = 1),
                i("img[data-lazy]", t.$slider).not("[src]").addClass("slick-loading"),
                t.setupInfinite(),
                t.buildArrows(),
                t.buildDots(),
                t.updateDots(),
                t.setSlideClasses("number" == typeof t.currentSlide ? t.currentSlide : 0),
            !0 === t.options.draggable && t.$list.addClass("draggable");
        }),
        (s.prototype.buildRows = function () {
            var i, t, s, e, o, n, l;
            if (((e = document.createDocumentFragment()), (n = this.$slider.children()), this.options.rows > 0)) {
                for (i = 0, l = this.options.slidesPerRow * this.options.rows, o = Math.ceil(n.length / l); i < o; i++) {
                    var r = document.createElement("div");
                    for (t = 0; t < this.options.rows; t++) {
                        var a = document.createElement("div");
                        for (s = 0; s < this.options.slidesPerRow; s++) {
                            var d = i * l + (t * this.options.slidesPerRow + s);
                            n.get(d) && a.appendChild(n.get(d));
                        }
                        r.appendChild(a);
                    }
                    e.appendChild(r);
                }
                this.$slider.empty().append(e),
                    this.$slider
                        .children()
                        .children()
                        .children()
                        .css({ width: 100 / this.options.slidesPerRow + "%", display: "inline-block" });
            }
        }),
        (s.prototype.checkResponsive = function (t, s) {
            var e,
                o,
                n,
                l = this,
                r = !1,
                a = l.$slider.width(),
                d = window.innerWidth || i(window).width();
            if (("window" === l.respondTo ? (n = d) : "slider" === l.respondTo ? (n = a) : "min" === l.respondTo && (n = Math.min(d, a)), l.options.responsive && l.options.responsive.length && null !== l.options.responsive)) {
                for (e in ((o = null), l.breakpoints)) l.breakpoints.hasOwnProperty(e) && (!1 === l.originalSettings.mobileFirst ? n < l.breakpoints[e] && (o = l.breakpoints[e]) : n > l.breakpoints[e] && (o = l.breakpoints[e]));
                null !== o
                    ? null !== l.activeBreakpoint
                        ? (o !== l.activeBreakpoint || s) &&
                        ((l.activeBreakpoint = o),
                            "unslick" === l.breakpointSettings[o] ? l.unslick(o) : ((l.options = i.extend({}, l.originalSettings, l.breakpointSettings[o])), !0 === t && (l.currentSlide = l.options.initialSlide), l.refresh(t)),
                            (r = o))
                        : ((l.activeBreakpoint = o),
                            "unslick" === l.breakpointSettings[o] ? l.unslick(o) : ((l.options = i.extend({}, l.originalSettings, l.breakpointSettings[o])), !0 === t && (l.currentSlide = l.options.initialSlide), l.refresh(t)),
                            (r = o))
                    : null !== l.activeBreakpoint && ((l.activeBreakpoint = null), (l.options = l.originalSettings), !0 === t && (l.currentSlide = l.options.initialSlide), l.refresh(t), (r = o)),
                t || !1 === r || l.$slider.trigger("breakpoint", [l, r]);
            }
        }),
        (s.prototype.changeSlide = function (t, s) {
            var e,
                o,
                n,
                l = i(t.currentTarget),
                r = void 0 !== t.data.announce,
                a = !!this.options.accessibility;
            switch (
                (l.is("a") && t.preventDefault(), l.is("li") || (l = l.closest("li")), (e = (n = this.slideCount % this.options.slidesToScroll != 0) ? 0 : (this.slideCount - this.currentSlide) % this.options.slidesToScroll), t.data.message)
                ) {
                case "previous":
                    (o = 0 === e ? this.options.slidesToScroll : this.options.slidesToShow - e), this.slideCount > this.options.slidesToShow && this.slideHandler(this.currentSlide - o, !1, s, a, r);
                    break;
                case "next":
                    (o = 0 === e ? this.options.slidesToScroll : e), this.slideCount > this.options.slidesToShow && this.slideHandler(this.currentSlide + o, !1, s, a, r);
                    break;
                case "index":
                    var d = 0 === t.data.index ? 0 : t.data.index || l.index() * this.options.slidesToScroll;
                    this.slideHandler(this.checkNavigable(d), !1, s, a), this.options.accessibility ? this.paused || this.slickPause() : l.children().trigger("focus");
                    break;
                default:
                    return;
            }
        }),
        (s.prototype.checkNavigable = function (i) {
            var t, s;
            if (((t = this.getNavigableIndexes()), (s = 0), i > t[t.length - 1])) i = t[t.length - 1];
            else
                for (var e in t) {
                    if (i < t[e]) {
                        i = s;
                        break;
                    }
                    s = t[e];
                }
            return i;
        }),
        (s.prototype.cleanUpEvents = function () {
            (this.options.dots || this.options.accessibility) &&
            null !== this.$dots &&
            (i("li button", this.$dots).off("click.slick", this.changeSlide).off("mouseenter.slick", i.proxy(this.interrupt, this, !0)).off("mouseleave.slick", i.proxy(this.interrupt, this, !1)),
            !0 === this.options.accessibility && this.$dots.off("keydown.slick", this.keyHandler)),
                this.$slider.off("focus.slick blur.slick"),
            !0 === this.options.arrows &&
            this.slideCount > this.options.slidesToShow &&
            (this.$prevArrow && this.$prevArrow.off("click.slick", this.changeSlide),
            this.$nextArrow && this.$nextArrow.off("click.slick", this.changeSlide),
            !0 === this.options.accessibility && (this.$prevArrow && this.$prevArrow.off("keydown.slick", this.keyHandler), this.$nextArrow && this.$nextArrow.off("keydown.slick", this.keyHandler))),
            this.options.accessibility &&
            this.options.autoplay &&
            (this.$pauseButton.off("click.slick"), i(".slick-control").off("mouseenter.slick", i.proxy(this.interrupt, this, !0)).off("mouseleave.slick", i.proxy(this.interrupt, this, !1))),
                this.$list.off("touchstart.slick mousedown.slick", this.swipeHandler),
                this.$list.off("touchmove.slick mousemove.slick", this.swipeHandler),
                this.$list.off("touchend.slick mouseup.slick", this.swipeHandler),
                this.$list.off("touchcancel.slick mouseleave.slick", this.swipeHandler),
                this.$list.off("click.slick", this.clickHandler),
                i(document).off(this.visibilityChange, this.visibility),
                this.cleanUpSlideEvents(),
            !0 === this.options.accessibility && this.$list.off("keydown.slick", this.keyHandler),
            !0 === this.options.focusOnSelect && i(this.$slideTrack).children().off("click.slick", this.selectHandler),
                i(window).off("orientationchange.slick.slick-" + this.instanceUid, this.orientationChange),
                i(window).off("resize.slick.slick-" + this.instanceUid, this.resize),
                i("[draggable!=true]", this.$slideTrack).off("dragstart", this.preventDefault),
                i(window).off("load.slick.slick-" + this.instanceUid, this.setPosition);
        }),
        (s.prototype.cleanUpSlideEvents = function () {
            this.$list.off("mouseenter.slick", i.proxy(this.interrupt, this, !0)), this.$list.off("mouseleave.slick", i.proxy(this.interrupt, this, !1));
        }),
        (s.prototype.cleanUpRows = function () {
            var i;
            this.options.rows > 0 && ((i = this.$slides.children().children()).removeAttr("style"), this.$slider.empty().append(i));
        }),
        (s.prototype.clickHandler = function (i) {
            !1 === this.shouldClick && (i.stopImmediatePropagation(), i.stopPropagation(), i.preventDefault());
        }),
        (s.prototype.destroy = function (t) {
            var s = this;
            s.autoPlayClear(),
                (s.touchObject = {}),
                s.cleanUpEvents(),
                i(".slick-cloned", s.$slider).detach(),
            s.$dots && s.$dots.remove(),
            s.$prevArrow &&
            s.$prevArrow.length &&
            (s.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display", ""),
            s.htmlExpr.test(s.options.prevArrow) && (s.$slideControls.remove(), s.$prevArrow.remove())),
            s.$nextArrow &&
            s.$nextArrow.length &&
            (s.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display", ""),
            s.htmlExpr.test(s.options.nextArrow) && (s.$slideControls.remove(), s.$nextArrow.remove())),
            s.$pauseButton && s.$pauseButton.length && s.$pauseButton.remove(),
            s.$liveRegion && s.$liveRegion.length && s.$liveRegion.remove(),
            s.$slides &&
            (s.$slides
                .removeClass("slick-slide slick-active slick-center slick-visible slick-current")
                .removeAttr("aria-hidden")
                .removeAttr("data-slick-index")
                .each(function () {
                    i(this).attr("style", i(this).data("originalStyling"));
                }),
                s.$slideTrack.children(this.options.slide).detach(),
                s.$slideTrack.detach(),
                s.$list.detach(),
                s.$slider.append(s.$slides)),
                s.cleanUpRows(),
                s.$slider.removeClass("slick-slider"),
                s.$slider.removeClass("slick-initialized"),
                s.$slider.removeClass("slick-dotted"),
                s.$slider.removeClass("slick-accessible"),
                (s.unslicked = !0),
            t || s.$slider.trigger("destroy", [s]);
        }),
        (s.prototype.disableTransition = function (i) {
            var t = this,
                s = {};
            (s[t.transitionType] = ""), !1 === t.options.fade ? t.$slideTrack.css(s) : t.$slides.eq(i).css(s);
        }),
        (s.prototype.fadeSlide = function (i, t) {
            var s = this;
            !1 === s.cssTransitions
                ? (s.$slides.eq(i).css({ zIndex: s.options.zIndex }), s.$slides.eq(i).animate({ opacity: 1 }, s.options.speed, s.options.easing, t))
                : (s.applyTransition(i),
                    s.$slides.eq(i).css({ opacity: 1, zIndex: s.options.zIndex }),
                t &&
                setTimeout(function () {
                    s.disableTransition(i), t.call();
                }, s.options.speed));
        }),
        (s.prototype.fadeSlideOut = function (i) {
            !1 === this.cssTransitions
                ? this.$slides.eq(i).animate({ opacity: 0, zIndex: this.options.zIndex - 2 }, this.options.speed, this.options.easing)
                : (this.applyTransition(i), this.$slides.eq(i).css({ opacity: 0, zIndex: this.options.zIndex - 2 }));
        }),
        (s.prototype.filterSlides = s.prototype.slickFilter = function (i) {
            var t = this;
            null !== i && ((t.$slidesCache = t.$slides), t.unload(), t.$slideTrack.children(this.options.slide).detach(), t.$slidesCache.filter(i).appendTo(t.$slideTrack), t.reinit());
        }),
        (s.prototype.focusHandler = function () {
            var t = this;
            t.$slider
                .off("focus.slick blur.slick")
                .on("focus.slick", "*", function (s) {
                    var e = i(this);
                    setTimeout(function () {
                        t.options.pauseOnFocus && e.is(":focus") && ((t.focussed = !0), t.autoPlay());
                    }, 0);
                })
                .on("blur.slick", "*", function (s) {
                    i(this), t.options.pauseOnFocus && ((t.focussed = !1), t.autoPlay());
                });
        }),
        (s.prototype.getCurrent = s.prototype.slickCurrentSlide = function () {
            return this.currentSlide;
        }),
        (s.prototype.getDotCount = function () {
            var i = 0,
                t = 0,
                s = 0;
            if (!0 === this.options.infinite)
                if (this.slideCount <= this.options.slidesToShow) ++s;
                else for (; i < this.slideCount; ) ++s, (i = t + this.options.slidesToScroll), (t += this.options.slidesToScroll <= this.options.slidesToShow ? this.options.slidesToScroll : this.options.slidesToShow);
            else if (!0 === this.options.centerMode) s = this.slideCount;
            else if (this.options.asNavFor) for (; i < this.slideCount; ) ++s, (i = t + this.options.slidesToScroll), (t += this.options.slidesToScroll <= this.options.slidesToShow ? this.options.slidesToScroll : this.options.slidesToShow);
            else s = 1 + Math.ceil((this.slideCount - this.options.slidesToShow) / this.options.slidesToScroll);
            return s - 1;
        }),
        (s.prototype.getLeft = function (i) {
            var t,
                s,
                e,
                o,
                n = this,
                l = 0;
            return (
                (n.slideOffset = 0),
                    (s = n.$slides.first().outerHeight(!0)),
                    !0 === n.options.infinite
                        ? (n.slideCount > n.options.slidesToShow &&
                        ((n.slideOffset = -n.slideWidth * n.options.slidesToShow * 1),
                            (o = -1),
                        !0 === n.options.vertical && !0 === n.options.centerMode && (2 === n.options.slidesToShow ? (o = -1.5) : 1 === n.options.slidesToShow && (o = -2)),
                            (l = s * n.options.slidesToShow * o)),
                        n.slideCount % n.options.slidesToScroll != 0 &&
                        i + n.options.slidesToScroll > n.slideCount &&
                        n.slideCount > n.options.slidesToShow &&
                        (i > n.slideCount
                            ? ((n.slideOffset = -(n.options.slidesToShow - (i - n.slideCount)) * n.slideWidth * 1), (l = -(n.options.slidesToShow - (i - n.slideCount)) * s * 1))
                            : ((n.slideOffset = (-n.slideCount % n.options.slidesToScroll) * n.slideWidth * 1), (l = (-n.slideCount % n.options.slidesToScroll) * s * 1))))
                        : i + n.options.slidesToShow > n.slideCount && ((n.slideOffset = (i + n.options.slidesToShow - n.slideCount) * n.slideWidth), (l = (i + n.options.slidesToShow - n.slideCount) * s)),
                n.slideCount <= n.options.slidesToShow && ((n.slideOffset = 0), (l = 0)),
                    !0 === n.options.centerMode && n.slideCount <= n.options.slidesToShow
                        ? (n.slideOffset = (n.slideWidth * Math.floor(n.options.slidesToShow)) / 2 - (n.slideWidth * n.slideCount) / 2)
                        : !0 === n.options.centerMode && !0 === n.options.infinite
                            ? (n.slideOffset += n.slideWidth * Math.floor(n.options.slidesToShow / 2) - n.slideWidth)
                            : !0 === n.options.centerMode && ((n.slideOffset = 0), (n.slideOffset += n.slideWidth * Math.floor(n.options.slidesToShow / 2))),
                    (t = !1 === n.options.vertical ? -i * n.slideWidth * 1 + n.slideOffset : -i * s * 1 + l),
                !0 === n.options.variableWidth &&
                ((e = n.slideCount <= n.options.slidesToShow || !1 === n.options.infinite ? n.$slideTrack.children(".slick-slide").eq(i) : n.$slideTrack.children(".slick-slide").eq(i + n.options.slidesToShow)),
                    (t = !0 === n.options.rtl ? (e[0] ? -1 * (n.$slideTrack.width() - e[0].offsetLeft - e.width()) : 0) : e[0] ? -1 * e[0].offsetLeft : 0),
                !0 === n.options.centerMode &&
                ((e = n.slideCount <= n.options.slidesToShow || !1 === n.options.infinite ? n.$slideTrack.children(".slick-slide").eq(i) : n.$slideTrack.children(".slick-slide").eq(i + n.options.slidesToShow + 1)),
                    (t = !0 === n.options.rtl ? (e[0] ? -1 * (n.$slideTrack.width() - e[0].offsetLeft - e.width()) : 0) : e[0] ? -1 * e[0].offsetLeft : 0),
                    (t += (n.$list.width() - e.outerWidth()) / 2))),
                    t
            );
        }),
        (s.prototype.getOption = s.prototype.slickGetOption = function (i) {
            return this.options[i];
        }),
        (s.prototype.getNavigableIndexes = function () {
            var i,
                t = 0,
                s = 0,
                e = [];
            for (!1 === this.options.infinite ? (i = this.slideCount) : ((t = -1 * this.options.slidesToScroll), (s = -1 * this.options.slidesToScroll), (i = 2 * this.slideCount)); t < i; )
                e.push(t), (t = s + this.options.slidesToScroll), (s += this.options.slidesToScroll <= this.options.slidesToShow ? this.options.slidesToScroll : this.options.slidesToShow);
            return e;
        }),
        (s.prototype.getSlick = function () {
            return this;
        }),
        (s.prototype.getSlideCount = function () {
            var t,
                s,
                e,
                o,
                n = this;
            return ((o = !0 === n.options.centerMode ? Math.floor(n.$list.width() / 2) : 0), (e = -1 * n.swipeLeft + o), !0 === n.options.swipeToSlide)
                ? (n.$slideTrack.find(".slick-slide").each(function (t, o) {
                    var l, r, a;
                    if (((l = i(o).outerWidth()), (r = o.offsetLeft), !0 !== n.options.centerMode && (r += l / 2), e < (a = r + l))) return (s = o), !1;
                }),
                    (t = Math.abs(i(s).attr("data-slick-index") - n.currentSlide) || 1))
                : n.options.slidesToScroll;
        }),
        (s.prototype.goTo = s.prototype.slickGoTo = function (i, t) {
            this.changeSlide({ data: { message: "index", index: parseInt(i) } }, t);
        }),
        (s.prototype.init = function (t) {
            var s = this;
            i(s.$slider).hasClass("slick-initialized") ||
            (i(s.$slider).addClass("slick-initialized"), s.buildRows(), s.buildOut(), s.setProps(), s.startLoad(), s.loadSlider(), s.initializeEvents(), s.updateArrows(), s.updateDots(), s.checkResponsive(!0), s.focusHandler()),
            t && s.$slider.trigger("init", [s]),
            !0 === s.options.accessibility && (i(s.$slider).addClass("slick-accessible"), s.initADA()),
            s.options.autoplay && ((s.paused = !1), s.autoPlay());
        }),
        (s.prototype.initADA = function () {
            var t = this,
                s = t.options.centerMode ? t.slideCount : Math.ceil(t.slideCount / t.options.slidesToShow),
                e = t.getNavigableIndexes().filter(function (i) {
                    return i >= 0 && i < t.slideCount;
                });
            t.$slides.add(t.$slideTrack.find(".slick-cloned")).attr({ "aria-hidden": "true", tabindex: "-1" }).find("a, input, button, select").attr({ tabindex: "-1" }),
            null !== t.$dots &&
            (t.$slides.not(t.$slideTrack.find(".slick-cloned")).each(function (s) {
                var o = e.indexOf(s);
                if ((i(this).attr({ id: "slick-slide" + t.instanceUid + s, tabindex: -1 }), -1 !== o)) {
                    var n = "slick-slide-control" + t.instanceUid + o;
                    i("#" + n).length && i(this).attr({ "aria-describedby": n });
                }
            }),
                t.$dots
                    .find("li")
                    .each(function (o) {
                        var n = e[o],
                            l = i("<span />", { class: "slick-dot-content", html: '<span class="a11y-hidden">' + ++o + "</span>" }).append(
                                i("<span />", { class: "slick-dot-count", html: " " + t.options.labelPaginatioSeparator + " " + s })
                            ),
                            r = i(this).find(":first-child");
                        i(this)
                            .find("button")
                            .first()
                            .attr({ id: "slick-slide-control" + t.instanceUid + o, "aria-controls": "slick-slide" + t.instanceUid + n }),
                        r.find(".slick-dot-content").length || r.append(l);
                    })
                    .end());
            for (var o = t.currentSlide, n = o + t.options.slidesToShow; o < n; o++) t.options.focusOnChange ? t.$slides.eq(o).attr({ tabindex: "0" }) : t.$slides.eq(o).removeAttr("tabindex");
            t.activateADA();
        }),
        (s.prototype.initArrowEvents = function () {
            var t = this;
            !0 === t.options.arrows &&
            t.slideCount > t.options.slidesToShow &&
            (t.$prevArrow.off("click.slick").on("click.slick", { message: "previous", announce: !0 }, t.changeSlide),
                t.$nextArrow.off("click.slick").on("click.slick", { message: "next", announce: !0 }, t.changeSlide),
            !0 === t.options.accessibility && (t.$prevArrow.on("keydown.slick", t.keyHandler), t.$nextArrow.on("keydown.slick", t.keyHandler))),
            t.options.accessibility &&
            t.options.autoplay &&
            (void 0 !== t.$pauseButton &&
            t.$pauseButton.off("click.slick").on("click.slick", function (s) {
                switch (i(s.currentTarget).attr("data-action")) {
                    case "pause":
                        t.slickPause();
                        break;
                    case "play":
                        t.slickPlay();
                }
            }),
                i(".slick-control").on("mouseenter.slick", i.proxy(t.interrupt, t, !0)).on("mouseleave.slick", i.proxy(t.interrupt, t, !1)));
        }),
        (s.prototype.initDotEvents = function () {
            !0 === this.options.dots &&
            this.slideCount > this.options.slidesToShow &&
            (i("li button", this.$dots).on("click.slick", { message: "index" }, this.changeSlide),
            !0 === this.options.accessibility && this.$dots.on("keydown.slick", this.keyHandler),
            (!0 === this.options.pauseOnDotsHover || !0 === this.options.accessibility) && i("li button", this.$dots).on("mouseenter.slick", i.proxy(this.interrupt, this, !0)).on("mouseleave.slick", i.proxy(this.interrupt, this, !1)));
        }),
        (s.prototype.initSlideEvents = function () {
            this.options.pauseOnHover && (this.$list.on("mouseenter.slick", i.proxy(this.interrupt, this, !0)), this.$list.on("mouseleave.slick", i.proxy(this.interrupt, this, !1)));
        }),
        (s.prototype.initializeEvents = function () {
            this.initArrowEvents(),
                this.initDotEvents(),
                this.initSlideEvents(),
                this.$list.on("touchstart.slick mousedown.slick", { action: "start" }, this.swipeHandler),
                this.$list.on("touchmove.slick mousemove.slick", { action: "move" }, this.swipeHandler),
                this.$list.on("touchend.slick mouseup.slick", { action: "end" }, this.swipeHandler),
                this.$list.on("touchcancel.slick mouseleave.slick", { action: "end" }, this.swipeHandler),
                this.$list.on("click.slick", this.clickHandler),
                i(document).on(this.visibilityChange, i.proxy(this.visibility, this)),
            !0 === this.options.accessibility && this.$list.on("keydown.slick", this.keyHandler),
            !0 === this.options.focusOnSelect && i(this.$slideTrack).children().on("click.slick", this.selectHandler),
                i(window).on("orientationchange.slick.slick-" + this.instanceUid, i.proxy(this.orientationChange, this)),
                i(window).on("resize.slick.slick-" + this.instanceUid, i.proxy(this.resize, this)),
                i("[draggable!=true]", this.$slideTrack).on("dragstart", this.preventDefault),
                i(window).on("load.slick.slick-" + this.instanceUid, this.setPosition),
                i(this.setPosition);
        }),
        (s.prototype.initUI = function () {
            !0 === this.options.arrows && this.slideCount > this.options.slidesToShow && (this.$prevArrow.show(), this.$nextArrow.show()), !0 === this.options.dots && this.slideCount > this.options.slidesToShow && this.$dots.show();
        }),
        (s.prototype.keyHandler = function (i) {
            i.target.tagName.match("TEXTAREA|INPUT|SELECT") ||
            (37 === i.keyCode && !0 === this.options.accessibility
                ? this.changeSlide({ data: { message: !0 === this.options.rtl ? "next" : "previous" } })
                : 39 === i.keyCode && !0 === this.options.accessibility && this.changeSlide({ data: { message: !0 === this.options.rtl ? "previous" : "next" } }));
        }),
        (s.prototype.lazyLoad = function () {
            var t,
                s,
                e,
                o,
                n = this;
            function l(t) {
                i("img[data-lazy]", t).each(function () {
                    var t = i(this),
                        s = i(this).attr("data-lazy"),
                        e = i(this).attr("data-srcset"),
                        o = i(this).attr("data-sizes") || n.$slider.attr("data-sizes"),
                        l = document.createElement("img");
                    (l.onload = function () {
                        t.animate({ opacity: 0 }, 100, function () {
                            e && (t.attr("srcset", e), o && t.attr("sizes", o)),
                                t.attr("src", s).animate({ opacity: 1 }, 200, function () {
                                    t.removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading");
                                }),
                                n.$slider.trigger("lazyLoaded", [n, t, s]);
                        });
                    }),
                        (l.onerror = function () {
                            t.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"), n.$slider.trigger("lazyLoadError", [n, t, s]);
                        }),
                        (l.src = s);
                });
            }
            if (
                (!0 === n.options.centerMode
                    ? !0 === n.options.infinite
                        ? (o = (e = n.currentSlide + (n.options.slidesToShow / 2 + 1)) + n.options.slidesToShow + 2)
                        : ((e = Math.max(0, n.currentSlide - (n.options.slidesToShow / 2 + 1))), (o = 2 + (n.options.slidesToShow / 2 + 1) + n.currentSlide))
                    : ((o = Math.ceil((e = n.options.infinite ? n.options.slidesToShow + n.currentSlide : n.currentSlide) + n.options.slidesToShow)), !0 === n.options.fade && (e > 0 && e--, o <= n.slideCount && o++)),
                    (t = n.$slider.find(".slick-slide").slice(e, o)),
                "anticipated" === n.options.lazyLoad)
            )
                for (var r = e - 1, a = o, d = n.$slider.find(".slick-slide"), c = 0; c < n.options.slidesToScroll; c++) r < 0 && (r = n.slideCount - 1), (t = (t = t.add(d.eq(r))).add(d.eq(a))), r--, a++;
            l(t),
                n.slideCount <= n.options.slidesToShow
                    ? l((s = n.$slider.find(".slick-slide")))
                    : n.currentSlide >= n.slideCount - n.options.slidesToShow
                        ? l((s = n.$slider.find(".slick-cloned").slice(0, n.options.slidesToShow)))
                        : 0 === n.currentSlide && l((s = n.$slider.find(".slick-cloned").slice(-1 * n.options.slidesToShow)));
        }),
        (s.prototype.loadSlider = function () {
            this.setPosition(), this.$slideTrack.css({ opacity: 1 }), this.$slider.removeClass("slick-loading"), this.initUI(), "progressive" === this.options.lazyLoad && this.progressiveLazyLoad();
        }),
        (s.prototype.next = s.prototype.slickNext = function () {
            this.changeSlide({ data: { message: "next" } });
        }),
        (s.prototype.orientationChange = function () {
            this.checkResponsive(), this.setPosition();
        }),
        (s.prototype.pause = s.prototype.slickPause = function () {
            var i = this;
            i.autoPlayClear(),
                (i.paused = !0),
                console.log("Slick.prototype.pause- re pause"),
            i.options.accessibility &&
            i.options.autoplay &&
            i.$pauseButton
                .attr("data-action", "play")
                .toggleClass("slick--playing slick--paused")
                .html(
                    '<span class="slick-visually-hidden">' +
                    i.options.playLabel +
                    '</span>                <svg aria-hidden="true" focusable="false" class="play">                    <use xlink:href="#play"></use>                </svg>'
                );
        }),
        (s.prototype.play = s.prototype.slickPlay = function () {
            var i = this;
            i.autoPlay(),
                (i.options.autoplay = !0),
                (i.paused = !1),
                (i.focussed = !1),
                (i.interrupted = !1),
                console.log("Slick.prototype.play re play"),
            i.options.accessibility &&
            i.options.autoplay &&
            i.$pauseButton
                .attr("data-action", "pause")
                .toggleClass("slick--playing slick--paused")
                .html(
                    '<span class="slick-visually-hidden">' + i.options.pauseLabel + '</span>                <svg aria-hidden="true" focusable="false" class="pause">                <use xlink:href="#pause"></use>            </svg>'
                );
        }),
        (s.prototype.postSlide = function (t, s, e) {
            var o = this;
            if (
                !o.unslicked &&
                (o.$slider.trigger("afterChange", [o, t]),
                    (o.animating = !1),
                o.slideCount > o.options.slidesToShow && o.setPosition(),
                    (o.swipeLeft = null),
                o.options.autoplay && o.autoPlay(),
                !0 === o.options.accessibility && (o.initADA(), (o.options.focusOnChange || s) && i(o.$slides.get(o.currentSlide)), e))
            ) {
                var n = o.options.labelAnnouncement.replace("{currentItem}", ++t).replace("{totalItems}", o.slideCount);
                o.$liveRegion.html(n);
            }
        }),
        (s.prototype.prev = s.prototype.slickPrev = function () {
            this.changeSlide({ data: { message: "previous" } });
        }),
        (s.prototype.preventDefault = function (i) {
            i.preventDefault();
        }),
        (s.prototype.progressiveLazyLoad = function (t) {
            t = t || 1;
            var s,
                e,
                o,
                n,
                l,
                r = this,
                a = i("img[data-lazy]", r.$slider);
            a.length
                ? ((e = (s = a.first()).attr("data-lazy")),
                    (o = s.attr("data-srcset")),
                    (n = s.attr("data-sizes") || r.$slider.attr("data-sizes")),
                    ((l = document.createElement("img")).onload = function () {
                        o && (s.attr("srcset", o), n && s.attr("sizes", n)),
                            s.attr("src", e).removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading"),
                        !0 === r.options.adaptiveHeight && r.setPosition(),
                            r.$slider.trigger("lazyLoaded", [r, s, e]),
                            r.progressiveLazyLoad();
                    }),
                    (l.onerror = function () {
                        t < 3
                            ? setTimeout(function () {
                                r.progressiveLazyLoad(t + 1);
                            }, 500)
                            : (s.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"), r.$slider.trigger("lazyLoadError", [r, s, e]), r.progressiveLazyLoad());
                    }),
                    (l.src = e))
                : r.$slider.trigger("allImagesLoaded", [r]);
        }),
        (s.prototype.refresh = function (t) {
            var s,
                e,
                o = this;
            (e = o.slideCount - o.options.slidesToShow),
            !o.options.infinite && o.currentSlide > e && (o.currentSlide = e),
            o.slideCount <= o.options.slidesToShow && (o.currentSlide = 0),
                (s = o.currentSlide),
                o.destroy(!0),
                i.extend(o, o.initials, { currentSlide: s }),
                o.init(),
            t || o.changeSlide({ data: { message: "index", index: s } }, !1);
        }),
        (s.prototype.registerBreakpoints = function () {
            var t,
                s,
                e,
                o = this,
                n = o.options.responsive || null;
            if ("array" === i.type(n) && n.length) {
                for (t in ((o.respondTo = o.options.respondTo || "window"), n))
                    if (((e = o.breakpoints.length - 1), n.hasOwnProperty(t))) {
                        for (s = n[t].breakpoint; e >= 0; ) o.breakpoints[e] && o.breakpoints[e] === s && o.breakpoints.splice(e, 1), e--;
                        o.breakpoints.push(s), (o.breakpointSettings[s] = n[t].settings);
                    }
                o.breakpoints.sort(function (i, t) {
                    return o.options.mobileFirst ? i - t : t - i;
                });
            }
        }),
        (s.prototype.reinit = function () {
            var t = this;
            (t.$slides = t.$slideTrack.children(t.options.slide).addClass("slick-slide")),
                (t.slideCount = t.$slides.length),
            t.currentSlide >= t.slideCount && 0 !== t.currentSlide && (t.currentSlide = t.currentSlide - t.options.slidesToScroll),
            t.slideCount <= t.options.slidesToShow && (t.currentSlide = 0),
                t.registerBreakpoints(),
                t.setProps(),
                t.setupInfinite(),
                t.buildArrows(),
                t.updateArrows(),
                t.initArrowEvents(),
                t.buildDots(),
                t.updateDots(),
                t.initDotEvents(),
                t.cleanUpSlideEvents(),
                t.initSlideEvents(),
                t.checkResponsive(!1, !0),
            !0 === t.options.accessibility && (i(t.$slider).addClass("slick-accessible"), t.initADA()),
            !0 === t.options.focusOnSelect && i(t.$slideTrack).children().on("click.slick", t.selectHandler),
                t.setSlideClasses("number" == typeof t.currentSlide ? t.currentSlide : 0),
                t.setPosition(),
                t.focusHandler(),
                (t.paused = !t.options.autoplay),
                t.autoPlay(),
                t.$slider.trigger("reInit", [t]);
        }),
        (s.prototype.resize = function () {
            var t = this;
            i(window).width() !== t.windowWidth &&
            (clearTimeout(t.windowDelay),
                (t.windowDelay = window.setTimeout(function () {
                    (t.windowWidth = i(window).width()), t.checkResponsive(), t.unslicked || t.setPosition();
                }, 50)));
        }),
        (s.prototype.removeSlide = s.prototype.slickRemove = function (i, t, s) {
            var e = this;
            if (((i = "boolean" == typeof i ? (!0 === (t = i) ? 0 : e.slideCount - 1) : !0 === t ? --i : i), e.slideCount < 1 || i < 0 || i > e.slideCount - 1)) return !1;
            e.unload(),
                !0 === s ? e.$slideTrack.children().remove() : e.$slideTrack.children(this.options.slide).eq(i).remove(),
                (e.$slides = e.$slideTrack.children(this.options.slide)),
                e.$slideTrack.children(this.options.slide).detach(),
                e.$slideTrack.append(e.$slides),
                (e.$slidesCache = e.$slides),
                e.reinit();
        }),
        (s.prototype.setCSS = function (i) {
            var t,
                s,
                e = this,
                o = {};
            !0 === e.options.rtl && (i = -i),
                (t = "left" == e.positionProp ? Math.ceil(i) + "px" : "0px"),
                (s = "top" == e.positionProp ? Math.ceil(i) + "px" : "0px"),
                (o[e.positionProp] = i),
                !1 === e.transformsEnabled
                    ? e.$slideTrack.css(o)
                    : ((o = {}), !1 === e.cssTransitions ? ((o[e.animType] = "translate(" + t + ", " + s + ")"), e.$slideTrack.css(o)) : ((o[e.animType] = "translate3d(" + t + ", " + s + ", 0px)"), e.$slideTrack.css(o)));
        }),
        (s.prototype.setDimensions = function () {
            var i = this;
            !1 === i.options.vertical
                ? !0 === i.options.centerMode && i.$list.css({ padding: "0px " + i.options.centerPadding })
                : (i.$list.height(i.$slides.first().outerHeight(!0) * i.options.slidesToShow), !0 === i.options.centerMode && i.$list.css({ padding: i.options.centerPadding + " 0px" })),
                (i.listWidth = i.$list.width()),
                (i.listHeight = i.$list.height()),
                !1 === i.options.vertical && !1 === i.options.variableWidth
                    ? ((i.slideWidth = Math.ceil(i.listWidth / i.options.slidesToShow)), i.$slideTrack.width(Math.ceil(i.slideWidth * i.$slideTrack.children(".slick-slide").length)))
                    : !0 === i.options.variableWidth
                        ? i.$slideTrack.width(5e3 * i.slideCount)
                        : ((i.slideWidth = Math.ceil(i.listWidth)), i.$slideTrack.height(Math.ceil(i.$slides.first().outerHeight(!0) * i.$slideTrack.children(".slick-slide").length)));
            var t = i.$slides.first().outerWidth(!0) - i.$slides.first().width();
            !1 === i.options.variableWidth && i.$slideTrack.children(".slick-slide").width(i.slideWidth - t);
        }),
        (s.prototype.setFade = function () {
            var t,
                s = this;
            s.$slides.each(function (e, o) {
                (t = -s.slideWidth * e * 1),
                    !0 === s.options.rtl ? i(o).css({ position: "relative", right: t, top: 0, zIndex: s.options.zIndex - 2, opacity: 0 }) : i(o).css({ position: "relative", left: t, top: 0, zIndex: s.options.zIndex - 2, opacity: 0 });
            }),
                s.$slides.eq(s.currentSlide).css({ zIndex: s.options.zIndex - 1, opacity: 1 });
        }),
        (s.prototype.setHeight = function () {
            if (1 === this.options.slidesToShow && !0 === this.options.adaptiveHeight && !1 === this.options.vertical) {
                var i = this.$slides.eq(this.currentSlide).outerHeight(!0);
                this.$list.css("height", i);
            }
        }),
        (s.prototype.setOption = s.prototype.slickSetOption = function () {
            var t,
                s,
                e,
                o,
                n,
                l = this,
                r = !1;
            if (
                ("object" === i.type(arguments[0])
                    ? ((e = arguments[0]), (r = arguments[1]), (n = "multiple"))
                    : "string" === i.type(arguments[0]) &&
                    ((e = arguments[0]), (o = arguments[1]), (r = arguments[2]), "responsive" === arguments[0] && "array" === i.type(arguments[1]) ? (n = "responsive") : void 0 !== arguments[1] && (n = "single")),
                "single" === n)
            )
                l.options[e] = o;
            else if ("multiple" === n)
                i.each(e, function (i, t) {
                    l.options[i] = t;
                });
            else if ("responsive" === n)
                for (s in o)
                    if ("array" !== i.type(l.options.responsive)) l.options.responsive = [o[s]];
                    else {
                        for (t = l.options.responsive.length - 1; t >= 0; ) l.options.responsive[t].breakpoint === o[s].breakpoint && l.options.responsive.splice(t, 1), t--;
                        l.options.responsive.push(o[s]);
                    }
            r && (l.unload(), l.reinit());
        }),
        (s.prototype.setPosition = function () {
            this.setDimensions(), this.setHeight(), !1 === this.options.fade ? this.setCSS(this.getLeft(this.currentSlide)) : this.setFade(), this.$slider.trigger("setPosition", [this]);
        }),
        (s.prototype.setProps = function () {
            var i = this,
                t = document.body.style;
            (i.positionProp = !0 === i.options.vertical ? "top" : "left"),
                "top" === i.positionProp ? i.$slider.addClass("slick-vertical") : i.$slider.removeClass("slick-vertical"),
            (void 0 !== t.WebkitTransition || void 0 !== t.MozTransition || void 0 !== t.msTransition) && !0 === i.options.useCSS && (i.cssTransitions = !0),
            i.options.fade && ("number" == typeof i.options.zIndex ? i.options.zIndex < 3 && (i.options.zIndex = 3) : (i.options.zIndex = i.defaults.zIndex)),
            void 0 !== t.OTransform && ((i.animType = "OTransform"), (i.transformType = "-o-transform"), (i.transitionType = "OTransition"), void 0 === t.perspectiveProperty && void 0 === t.webkitPerspective && (i.animType = !1)),
            void 0 !== t.MozTransform && ((i.animType = "MozTransform"), (i.transformType = "-moz-transform"), (i.transitionType = "MozTransition"), void 0 === t.perspectiveProperty && void 0 === t.MozPerspective && (i.animType = !1)),
            void 0 !== t.webkitTransform &&
            ((i.animType = "webkitTransform"), (i.transformType = "-webkit-transform"), (i.transitionType = "webkitTransition"), void 0 === t.perspectiveProperty && void 0 === t.webkitPerspective && (i.animType = !1)),
            void 0 !== t.msTransform && ((i.animType = "msTransform"), (i.transformType = "-ms-transform"), (i.transitionType = "msTransition"), void 0 === t.msTransform && (i.animType = !1)),
            void 0 !== t.transform && !1 !== i.animType && ((i.animType = "transform"), (i.transformType = "transform"), (i.transitionType = "transition")),
                (i.transformsEnabled = i.options.useTransform && null !== i.animType && !1 !== i.animType);
        }),
        (s.prototype.setSlideClasses = function (i) {
            var t, s, e, o;
            if (
                ((s = this.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden", "true").find("button").attr("tabindex", "-1")),
                    this.$slides.eq(i).addClass("slick-current"),
                !0 === this.options.centerMode)
            ) {
                var n = this.options.slidesToShow % 2 == 0 ? 1 : 0;
                (t = Math.floor(this.options.slidesToShow / 2)),
                !0 === this.options.infinite &&
                (i >= t && i <= this.slideCount - 1 - t
                    ? this.$slides
                        .slice(i - t + n, i + t + 1)
                        .addClass("slick-active")
                        .attr("aria-hidden", "false")
                        .find("button")
                        .removeAttr("tabindex")
                    : ((e = this.options.slidesToShow + i),
                        s
                            .slice(e - t + 1 + n, e + t + 2)
                            .addClass("slick-active")
                            .attr("aria-hidden", "false")
                            .find("button")
                            .removeAttr("tabindex")),
                    0 === i ? s.eq(s.length - 1 - this.options.slidesToShow).addClass("slick-center") : i === this.slideCount - 1 && s.eq(this.options.slidesToShow).addClass("slick-center")),
                    this.$slides.eq(i).addClass("slick-center");
            } else
                i >= 0 && i <= this.slideCount - this.options.slidesToShow
                    ? this.$slides
                        .slice(i, i + this.options.slidesToShow)
                        .addClass("slick-active")
                        .attr("aria-hidden", "false")
                        .find("button")
                        .removeAttr("tabindex")
                    : s.length <= this.options.slidesToShow
                        ? s.addClass("slick-active").attr("aria-hidden", "false").find("button").removeAttr("tabindex")
                        : ((o = this.slideCount % this.options.slidesToShow),
                            (e = !0 === this.options.infinite ? this.options.slidesToShow + i : i),
                            this.options.slidesToShow == this.options.slidesToScroll && this.slideCount - i < this.options.slidesToShow
                                ? s
                                    .slice(e - (this.options.slidesToShow - o), e + o)
                                    .addClass("slick-active")
                                    .attr("aria-hidden", "false")
                                    .find("button")
                                    .removeAttr("tabindex")
                                : s
                                    .slice(e, e + this.options.slidesToShow)
                                    .addClass("slick-active")
                                    .attr("aria-hidden", "false")
                                    .find("button")
                                    .removeAttr("tabindex"));
            ("ondemand" === this.options.lazyLoad || "anticipated" === this.options.lazyLoad) && this.lazyLoad();
        }),
        (s.prototype.setupInfinite = function () {
            var t,
                s,
                e,
                o = this;
            if ((!0 === o.options.fade && (o.options.centerMode = !1), !0 === o.options.infinite && !1 === o.options.fade && ((s = null), o.slideCount > o.options.slidesToShow))) {
                for (e = !0 === o.options.centerMode ? o.options.slidesToShow + 1 : o.options.slidesToShow, t = o.slideCount; t > o.slideCount - e; t -= 1)
                    (s = t - 1),
                        i(o.$slides[s])
                            .clone(!0)
                            .attr("id", "")
                            .attr("data-slick-index", s - o.slideCount)
                            .prependTo(o.$slideTrack)
                            .addClass("slick-cloned");
                for (t = 0; t < e + o.slideCount; t += 1)
                    (s = t),
                        i(o.$slides[s])
                            .clone(!0)
                            .attr("id", "")
                            .attr("data-slick-index", s + o.slideCount)
                            .appendTo(o.$slideTrack)
                            .addClass("slick-cloned");
                o.$slideTrack
                    .find(".slick-cloned")
                    .find("[id]")
                    .each(function () {
                        i(this).attr("id", "");
                    });
            }
        }),
        (s.prototype.interrupt = function (i) {
            var t = this;
            i || t.autoPlay(), (t.interrupted = i);
        }),
        (s.prototype.selectHandler = function (t) {
            var s = parseInt((i(t.target).is(".slick-slide") ? i(t.target) : i(t.target).parents(".slick-slide")).attr("data-slick-index"));
            if ((s || (s = 0), this.slideCount <= this.options.slidesToShow)) {
                this.slideHandler(s, !1, !0);
                return;
            }
            this.slideHandler(s);
        }),
        (s.prototype.slideHandler = function (i, t, s, e, o) {
            var n,
                l,
                r,
                a,
                d,
                c = null,
                p = this;
            if (((t = t || !1), (!0 !== p.animating || !0 !== p.options.waitForAnimate) && (!0 !== p.options.fade || p.currentSlide !== i))) {
                if (
                    (!1 === t && p.asNavFor(i),
                        (n = i),
                        (c = p.getLeft(n)),
                        (a = p.getLeft(p.currentSlide)),
                        (p.currentLeft = null === p.swipeLeft ? a : p.swipeLeft),
                    (!1 === p.options.infinite && !1 === p.options.centerMode && (i < 0 || i > p.getDotCount() * p.options.slidesToScroll)) ||
                    (!1 === p.options.infinite && !0 === p.options.centerMode && (i < 0 || i > p.slideCount - p.options.slidesToScroll)))
                ) {
                    !1 === p.options.fade &&
                    ((n = p.currentSlide),
                        !0 !== s && p.slideCount > p.options.slidesToShow
                            ? p.animateSlide(a, function () {
                                p.postSlide(n, e, o);
                            })
                            : p.postSlide(n, e, o));
                    return;
                }
                if (
                    (p.options.autoplay && clearInterval(p.autoPlayTimer),
                        (l =
                            n < 0
                                ? p.slideCount % p.options.slidesToScroll != 0
                                    ? p.slideCount - (p.slideCount % p.options.slidesToScroll)
                                    : p.slideCount + n
                                : n >= p.slideCount
                                    ? p.slideCount % p.options.slidesToScroll != 0
                                        ? 0
                                        : n - p.slideCount
                                    : n),
                        (p.animating = !0),
                        p.$slider.trigger("beforeChange", [p, p.currentSlide, l]),
                        (r = p.currentSlide),
                        (p.currentSlide = l),
                        p.setSlideClasses(p.currentSlide),
                    p.options.asNavFor && (d = (d = p.getNavTarget()).slick("getSlick")).slideCount <= d.options.slidesToShow && d.setSlideClasses(p.currentSlide),
                        p.updateDots(),
                        p.updateArrows(),
                    !0 === p.options.fade)
                ) {
                    !0 !== s
                        ? (p.fadeSlideOut(r),
                            p.fadeSlide(l, function () {
                                p.postSlide(l, e, o);
                            }))
                        : p.postSlide(l, e, o),
                        p.animateHeight();
                    return;
                }
                !0 !== s && p.slideCount > p.options.slidesToShow
                    ? p.animateSlide(c, function () {
                        p.postSlide(l, e, o);
                    })
                    : p.postSlide(l, e, o);
            }
        }),
        (s.prototype.startLoad = function () {
            !0 === this.options.arrows && this.slideCount > this.options.slidesToShow && (this.$prevArrow.hide(), this.$nextArrow.hide()),
            !0 === this.options.dots && this.slideCount > this.options.slidesToShow && this.$dots.hide(),
                this.$slider.addClass("slick-loading");
        }),
        (s.prototype.swipeDirection = function () {
            var i, t, s, e;
            return ((i = this.touchObject.startX - this.touchObject.curX),
            (e = Math.round((180 * (s = Math.atan2((t = this.touchObject.startY - this.touchObject.curY), i))) / Math.PI)) < 0 && (e = 360 - Math.abs(e)),
            (e <= 45 && e >= 0) || (e <= 360 && e >= 315))
                ? !1 === this.options.rtl
                    ? "left"
                    : "right"
                : e >= 135 && e <= 225
                    ? !1 === this.options.rtl
                        ? "right"
                        : "left"
                    : !0 === this.options.verticalSwiping
                        ? e >= 35 && e <= 135
                            ? "down"
                            : "up"
                        : "vertical";
        }),
        (s.prototype.swipeEnd = function (i) {
            var t,
                s,
                e = this;
            if (((e.dragging = !1), (e.swiping = !1), e.scrolling)) return (e.scrolling = !1), !1;
            if (((e.interrupted = !1), (e.shouldClick = !(e.touchObject.swipeLength > 10)), void 0 === e.touchObject.curX)) return !1;
            if ((!0 === e.touchObject.edgeHit && e.$slider.trigger("edge", [e, e.swipeDirection()]), e.touchObject.swipeLength >= e.touchObject.minSwipe)) {
                switch ((s = e.swipeDirection())) {
                    case "left":
                    case "down":
                        (t = e.options.swipeToSlide ? e.checkNavigable(e.currentSlide + e.getSlideCount()) : e.currentSlide + e.getSlideCount()), (e.currentDirection = 0);
                        break;
                    case "right":
                    case "up":
                        (t = e.options.swipeToSlide ? e.checkNavigable(e.currentSlide - e.getSlideCount()) : e.currentSlide - e.getSlideCount()), (e.currentDirection = 1);
                }
                "vertical" != s && (e.slideHandler(t), (e.touchObject = {}), e.$slider.trigger("swipe", [e, s]));
            } else e.touchObject.startX !== e.touchObject.curX && (e.slideHandler(e.currentSlide), (e.touchObject = {}));
        }),
        (s.prototype.swipeHandler = function (i) {
            var t = this;
            if (!1 !== t.options.swipe && (!("ontouchend" in document) || !1 !== t.options.swipe))
                if (!1 !== t.options.draggable || -1 === i.type.indexOf("mouse"))
                    switch (
                        ((t.touchObject.fingerCount = i.originalEvent && void 0 !== i.originalEvent.touches ? i.originalEvent.touches.length : 1),
                            (t.touchObject.minSwipe = t.listWidth / t.options.touchThreshold),
                        !0 === t.options.verticalSwiping && (t.touchObject.minSwipe = t.listHeight / t.options.touchThreshold),
                            i.data.action)
                        ) {
                        case "start":
                            t.swipeStart(i);
                            break;
                        case "move":
                            t.swipeMove(i);
                            break;
                        case "end":
                            t.swipeEnd(i);
                    }
        }),
        (s.prototype.swipeMove = function (i) {
            var t,
                s,
                e,
                o,
                n,
                l,
                r = this;
            return (
                (n = void 0 !== i.originalEvent ? i.originalEvent.touches : null),
                !!r.dragging &&
                !r.scrolling &&
                (!n || 1 === n.length) &&
                (((t = r.getLeft(r.currentSlide)),
                    (r.touchObject.curX = void 0 !== n ? n[0].pageX : i.clientX),
                    (r.touchObject.curY = void 0 !== n ? n[0].pageY : i.clientY),
                    (r.touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(r.touchObject.curX - r.touchObject.startX, 2)))),
                    (l = Math.round(Math.sqrt(Math.pow(r.touchObject.curY - r.touchObject.startY, 2)))),
                r.options.verticalSwiping || r.swiping || !(l > 4))
                    ? (!0 === r.options.verticalSwiping && (r.touchObject.swipeLength = l),
                        (s = r.swipeDirection()),
                    void 0 !== i.originalEvent && r.touchObject.swipeLength > 4 && ((r.swiping = !0), i.preventDefault()),
                        (o = (!1 === r.options.rtl ? 1 : -1) * (r.touchObject.curX > r.touchObject.startX ? 1 : -1)),
                    !0 === r.options.verticalSwiping && (o = r.touchObject.curY > r.touchObject.startY ? 1 : -1),
                        (e = r.touchObject.swipeLength),
                        (r.touchObject.edgeHit = !1),
                    !1 === r.options.infinite &&
                    ((0 === r.currentSlide && "right" === s) || (r.currentSlide >= r.getDotCount() && "left" === s)) &&
                    ((e = r.touchObject.swipeLength * r.options.edgeFriction), (r.touchObject.edgeHit = !0)),
                        !1 === r.options.vertical ? (r.swipeLeft = t + e * o) : (r.swipeLeft = t + e * (r.$list.height() / r.listWidth) * o),
                    !0 === r.options.verticalSwiping && (r.swipeLeft = t + e * o),
                    !0 !== r.options.fade && !1 !== r.options.touchMove && (!0 === r.animating ? ((r.swipeLeft = null), !1) : void r.setCSS(r.swipeLeft)))
                    : ((r.scrolling = !0), !1))
            );
        }),
        (s.prototype.swipeStart = function (i) {
            var t,
                s = this;
            if (((s.interrupted = !0), 1 !== s.touchObject.fingerCount || s.slideCount <= s.options.slidesToShow)) return (s.touchObject = {}), !1;
            void 0 !== i.originalEvent && void 0 !== i.originalEvent.touches && (t = i.originalEvent.touches[0]),
                (s.touchObject.startX = s.touchObject.curX = void 0 !== t ? t.pageX : i.clientX),
                (s.touchObject.startY = s.touchObject.curY = void 0 !== t ? t.pageY : i.clientY),
                (s.dragging = !0);
        }),
        (s.prototype.unfilterSlides = s.prototype.slickUnfilter = function () {
            null !== this.$slidesCache && (this.unload(), this.$slideTrack.children(this.options.slide).detach(), this.$slidesCache.appendTo(this.$slideTrack), this.reinit());
        }),
        (s.prototype.unload = function () {
            i(".slick-cloned", this.$slider).remove(),
            this.$dots && this.$dots.remove(),
            this.$prevArrow &&
            this.$prevArrow.length &&
            (this.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display", ""),
            this.htmlExpr.test(this.options.prevArrow) && (this.$slideControls.remove(), this.$prevArrow.remove())),
            this.$nextArrow &&
            this.$nextArrow.length &&
            (this.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display", ""),
            this.htmlExpr.test(this.options.nextArrow) && (this.$slideControls.remove(), this.$nextArrow.remove())),
            this.$pauseButton && this.$pauseButton.length && this.$pauseButton.remove(),
            this.$liveRegion && this.$liveRegion.length && this.$liveRegion.remove(),
                this.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden", "true").css("width", "");
        }),
        (s.prototype.unslick = function (i) {
            this.$slider.trigger("unslick", [this, i]), this.destroy();
        }),
        (s.prototype.updateArrows = function () {
            var i;
            (i = Math.floor(this.options.slidesToShow / 2)),
            !0 === this.options.arrows &&
            this.slideCount > this.options.slidesToShow &&
            this.options.infinite &&
            (0 === this.currentSlide
                ? this.$prevArrow.find(".slick-visually-hidden").text(this.options.labelPrevInfinite)
                : this.$prevArrow.find(".slick-visually-hidden").text() === this.options.labelPrevInfinite && this.$prevArrow.find(".slick-visually-hidden").text(this.options.labelPrev),
                this.currentSlide >= this.slideCount - this.options.slidesToShow
                    ? this.$nextArrow.find(".slick-visually-hidden").text(this.options.labelNextInfinite)
                    : this.$nextArrow.find(".slick-visually-hidden").text() === this.options.labelNextInfinite && this.$nextArrow.find(".slick-visually-hidden").text(this.options.labelNext)),
            !0 === this.options.arrows &&
            this.slideCount > this.options.slidesToShow &&
            !this.options.infinite &&
            (this.$prevArrow.removeClass("slick-disabled").attr("aria-disabled", "false"),
                this.$nextArrow.removeClass("slick-disabled").attr("aria-disabled", "false"),
                0 === this.currentSlide
                    ? this.$prevArrow.find(".slick-visually-hidden").text(this.options.labelPrevFirst)
                    : this.$prevArrow.find(".slick-visually-hidden").text() === this.options.labelPrevFirst && this.$prevArrow.find(".slick-visually-hidden").text(this.options.labelPrev),
                this.currentSlide >= this.slideCount - this.options.slidesToShow
                    ? this.$nextArrow.find(".slick-visually-hidden").text(this.options.labelNextFirst)
                    : this.$nextArrow.find(".slick-visually-hidden").text() === this.options.labelNextFirst && this.$nextArrow.find(".slick-visually-hidden").text(this.options.labelNext),
                0 === this.currentSlide
                    ? (this.$prevArrow.addClass("slick-disabled").attr("aria-disabled", "true"), this.$nextArrow.removeClass("slick-disabled").attr("aria-disabled", "false"))
                    : this.currentSlide >= this.slideCount - this.options.slidesToShow && !1 === this.options.centerMode
                        ? (this.$nextArrow.addClass("slick-disabled").attr("aria-disabled", "true"), this.$prevArrow.removeClass("slick-disabled").attr("aria-disabled", "false"))
                        : this.currentSlide >= this.slideCount - 1 &&
                        !0 === this.options.centerMode &&
                        (this.$nextArrow.addClass("slick-disabled").attr("aria-disabled", "true"), this.$prevArrow.removeClass("slick-disabled").attr("aria-disabled", "false")));
        }),
        (s.prototype.updateDots = function () {
            null !== this.$dots &&
            (this.$dots.find("li").removeClass("slick-active").find("button").removeAttr("aria-current").end(),
                this.$dots
                    .find("li")
                    .eq(Math.floor(this.currentSlide / this.options.slidesToScroll))
                    .addClass("slick-active")
                    .find("button")
                    .attr("aria-current", "true"));
        }),
        (s.prototype.visibility = function () {
            var i = this;
            i.options.autoplay && (document[i.hidden] ? (i.interrupted = !0) : (i.interrupted = !1));
        }),
        (i.fn.slick = function () {
            var i,
                t,
                e = this,
                o = arguments[0],
                n = Array.prototype.slice.call(arguments, 1),
                l = e.length;
            for (i = 0; i < l; i++) if (("object" == typeof o || void 0 === o ? (e[i].slick = new s(e[i], o)) : (t = e[i].slick[o].apply(e[i].slick, n)), void 0 !== t)) return t;
            return e;
        });
});
function generateA11yModal() {
    var $modals = $(".js-modal"),
        $body = $("body");
    $modals.each(function (index_to_expand) {
        var $this = $(this),
            index_lisible = index_to_expand + 1;
        $this.attr({ id: "label_modal_" + index_lisible, "aria-haspopup": "dialog" });
    });
    var focusableElementsString = "a[href], area[href], input:not([type='hidden']):not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]";
    if (0 === $("#js-modal-page").length) $body.wrapInner('<div id="js-modal-page"></div>');
    $body.on("click", ".js-modal", function (event) {
        var $this = $(this),
            options = $this.data(),
            $modal_starter_id = $this.attr("id"),
            $modal_prefix_classes = "undefined" !== typeof options.modalPrefixClass ? options.modalPrefixClass + "-" : "",
            $modal_modifier_class = "undefined" !== typeof options.modalModifierClass ? " " + options.modalModifierClass : "",
            $modal_text = options.modalText || "",
            modal_content_id = "undefined" !== typeof options.modalContentId ? options.modalContentId : "",
            $modal_content = "undefined" !== typeof options.modalContentId ? $("#" + modal_content_id) : "",
            $modal_title = options.modalTitle || "",
            $modal_close_text = options.modalCloseText || "Close",
            $modal_close_title = options.modalCloseTitle || options.modalCloseText,
            $modal_close_img = options.modalCloseImg || "",
            $modal_background_click = options.modalBackgroundClick || "",
            $modal_focus_id = options.modalFocusId || "",
            $modal_custom_param = options.modalCustomParam || "",
            $modal_aria = "undefined" !== typeof options.modalAriaModal ? 'aria-modal="true"' : "",
            $modal_role_alertdialog = "undefined" !== typeof options.modalUseRoleAlertdialog ? 'role="alertdialog"' : "",
            $modal_role_dialog = "undefined" !== typeof options.modalRemoveRoleDialog || 'role="alertdialog"' === $modal_role_alertdialog ? "" : 'role="dialog"',
            $modal_tag = "undefined" !== typeof options.modalRemoveDialogTag ? "div" : "dialog",
            $modal_code,
            $modal_overlay,
            $page = $("#js-modal-page");
        $modal_code =
            "<" +
            $modal_tag +
            " " +
            $modal_role_dialog +
            " " +
            $modal_role_alertdialog +
            ' id="js-modal" class="' +
            $modal_prefix_classes +
            "modal" +
            $modal_modifier_class +
            '" aria-labelledby="modal-title" open ' +
            $modal_aria +
            '><div role="document" class="' +
            $modal_prefix_classes +
            'modal__wrapper">';
        $modal_code +=
            '<button type="button" id="js-modal-close" class="' + $modal_prefix_classes + 'modal-close" data-content-back-id="' + modal_content_id + '" data-focus-back="' + $modal_starter_id + '" title="' + $modal_close_title + '">';
        if ("" !== $modal_close_img) $modal_code += '<span class="' + $modal_prefix_classes + 'modal__closeimg" aria-label="' + $modal_close_text + '">&times;</span>';
        else $modal_code += '<span class="' + $modal_prefix_classes + 'modal-close__text">' + $modal_close_text + "</span>";
        $modal_code += "</button>";
        $modal_code += '<div class="' + $modal_prefix_classes + 'modal__content">';
        if ("" !== $modal_title) $modal_code += '<h1 id="modal-title" class="' + $modal_prefix_classes + 'modal-title">' + $modal_title + "</h1>";
        if ("" !== $modal_text) $modal_code += "<p>" + $modal_text + "</p>";
        else if ("" !== modal_content_id && $modal_content.length) {
            $modal_code += '<div id="js-modal-content">';
            $modal_code += $modal_content.html();
            $modal_code += "</div>";
            $modal_content.empty();
        }
        if ("" !== $modal_custom_param) $modal_code += '<span id="' + $modal_custom_param + '" class="hidden"></span>';
        $modal_code += "</div></div></" + $modal_tag + ">";
        $($modal_code).insertAfter($page);
        $body.addClass("no-scroll");
        $page.attr("aria-hidden", "true");
        if ("disabled" !== $modal_background_click) $modal_overlay = '<span id="js-modal-overlay" class="' + $modal_prefix_classes + 'modal-overlay" data-background-click="enabled"></span>';
        else $modal_overlay = '<span id="js-modal-overlay" class="' + $modal_prefix_classes + 'modal-overlay" data-background-click="disabled"></span>';
        $($modal_overlay).insertAfter($("#js-modal"));
        if ("" !== $modal_focus_id) $("#" + $modal_focus_id).focus();
        else $("#js-modal-close").focus();
        event.preventDefault();
    });
    $body
        .on("click", "#js-modal-close", function () {
            var $this = $(this),
                $focus_back = "#" + $this.attr("data-focus-back"),
                $content_back_id = $this.attr("data-content-back-id"),
                $js_modal = $("#js-modal"),
                $js_modal_content = $("#js-modal-content"),
                $class_element = $js_modal.attr("class"),
                $class_element_reverse = $class_element + "--reverse",
                $js_modal_overlay = $("#js-modal-overlay"),
                $page = $("#js-modal-page");
            $page.removeAttr("aria-hidden");
            var delay = $js_modal.css("animation-duration");
            if ("0s" != delay) {
                var timeout = 1e3 * parseFloat(delay.replace("s", ""));
                timeout++;
                $js_modal.removeClass($class_element);
                setTimeout(function () {
                    $js_modal.addClass($class_element_reverse);
                }, 1);
                setTimeout(function () {
                    $body.removeClass("no-scroll");
                    $js_modal.remove();
                    $js_modal_overlay.remove();
                    if ("" !== $content_back_id) $("#" + $content_back_id).html($js_modal_content.html());
                    $($focus_back).focus();
                    $js_modal.removeClass($class_element_reverse);
                    $js_modal.addClass($class_element);
                }, timeout);
            } else {
                $body.removeClass("no-scroll");
                $js_modal.remove();
                $js_modal_overlay.remove();
                if ("" !== $content_back_id) $("#" + $content_back_id).html($js_modal_content.html());
                $($focus_back).focus();
            }
        })
        .on("click", "#js-modal-overlay", function (event) {
            var $close = $("#js-modal-close");
            event.preventDefault();
            $close.trigger("click");
        })
        .on("click", ".js-modal-close", function (event) {
            var $close = $("#js-modal-close");
            $close.trigger("click");
        })
        .on("keydown", "#js-modal-overlay", function (event) {
            var $close = $("#js-modal-close");
            if (13 == event.keyCode || 32 == event.keyCode) {
                event.preventDefault();
                $close.trigger("click");
            }
        })
        .on("keydown", "#js-modal", function (event) {
            var $this = $(this),
                $close = $("#js-modal-close");
            if (27 == event.keyCode) $close.trigger("click");
            if (9 == event.keyCode) {
                var children = $this.find("*");
                var focusableItems = children.filter(focusableElementsString).filter(":visible");
                var focusedItem = $(document.activeElement);
                var numberOfFocusableItems = focusableItems.length;
                var focusedItemIndex = focusableItems.index(focusedItem);
                if (!event.shiftKey && focusedItemIndex == numberOfFocusableItems - 1) {
                    focusableItems.get(0).focus();
                    event.preventDefault();
                }
                if (event.shiftKey && 0 == focusedItemIndex) {
                    focusableItems.get(numberOfFocusableItems - 1).focus();
                    event.preventDefault();
                }
            }
        })
        .on("keyup", ":not(#js-modal)", function (event) {
            var $js_modal = $("#js-modal"),
                focusedItem = $(document.activeElement),
                in_jsmodal = focusedItem.parents("#js-modal").length ? true : false,
                $close = $("#js-modal-close");
            if ($js_modal.length && 9 == event.keyCode && false === in_jsmodal) $close.focus();
        })
        .on("focus", "#js-modal-tabindex", function () {
            var $close = $("#js-modal-close");
            $close.focus();
        });
}
function generateA11yTabs() {
    var hash = window.location.hash.replace("#", "");
    var $tabs = $(".js-tabs"),
        $body = $("body");
    if ($tabs.length) {
        var $tab_list = $tabs.find(".js-tablist");
        $tab_list.each(function () {
            var $this_tab_list = $(this),
                options = $this_tab_list.data(),
                $tabs_prefix_classes = "undefined" !== typeof options.tabsPrefixClass ? options.tabsPrefixClass + "-" : "",
                $hx = "undefined" !== typeof options.hx ? options.hx : "",
                $existing_hx = "undefined" !== typeof options.existingHx ? options.existingHx : "",
                $this_tab_list_items = $this_tab_list.children(".js-tablist__item"),
                $this_tab_list_links = $this_tab_list.find(".js-tablist__link");
            $this_tab_list.attr("role", "tablist");
            $this_tab_list_items.attr("role", "presentation");
            $this_tab_list_links.attr("role", "tab");
            $this_tab_list.addClass($tabs_prefix_classes + "tabs__list");
            $this_tab_list_items.addClass($tabs_prefix_classes + "tabs__item");
            $this_tab_list_links.addClass($tabs_prefix_classes + "tabs__link");
            $this_tab_list_links.each(function () {
                var $this = $(this),
                    $hx_generated_class = "undefined" !== typeof options.tabsGeneratedHxClass ? options.tabsGeneratedHxClass : "invisible",
                    $href = $this.attr("href"),
                    $controls = $($href),
                    $text = $this.text();
                if ("" !== $hx) $controls.prepend("<" + $hx + ' class="' + $hx_generated_class + '" tabindex="0">' + $text + "</" + $hx + ">");
                if ("" !== $existing_hx) $controls.find($existing_hx + ":first-child").attr("tabindex", 0);
                if ("undefined" !== typeof $href && "" !== $href && "#" !== $href) $this.attr({ "aria-controls": $href.replace("#", ""), tabindex: -1, "aria-selected": "false" });
                $this.removeAttr("href");
            });
        });
        $(".js-tabcontent")
            .attr({ role: "tabpanel", "aria-hidden": "true", tabindex: 0 })
            .each(function () {
                var $this = $(this),
                    $this_id = $this.attr("id"),
                    $prefix_attribute = $("#label_" + $this_id)
                        .closest(".js-tablist")
                        .attr("data-tabs-prefix-class"),
                    $tabs_prefix_classes = "undefined" !== typeof $prefix_attribute ? $prefix_attribute + "-" : "";
                $this.attr("aria-labelledby", "label_" + $this_id);
                $this.addClass($tabs_prefix_classes + "tabs__content");
            });
        if ("" !== hash && 0 !== $("#" + hash + ".js-tabcontent").length)
            if ($("#label_" + hash + ".js-tablist__link:not([aria-disabled='true'])").length) {
                $("#" + hash + ".js-tabcontent").removeAttr("aria-hidden");
                $("#label_" + hash + ".js-tablist__link").attr({ "aria-selected": "true", tabindex: 0 });
            }
        if ("" !== hash && $("#" + hash).parents(".js-tabcontent").length) {
            var $this_hash = $("#" + hash),
                $tab_content_parent = $this_hash.parents(".js-tabcontent"),
                $tab_content_parent_id = $tab_content_parent.attr("id");
            if ($("#label_" + $tab_content_parent_id + ".js-tablist__link:not([aria-disabled='true'])").length) {
                $tab_content_parent.removeAttr("aria-hidden");
                $("#label_" + $tab_content_parent_id + ".js-tablist__link").attr({ "aria-selected": "true", tabindex: 0 });
            }
        }
        $tabs.each(function () {
            var $this = $(this),
                $tab_selected = $this.find('.js-tablist__link[aria-selected="true"]'),
                $tab_data_selected = $this.find('.js-tablist__link[data-selected="1"]:not([aria-disabled="true"]):first'),
                $tab_data_selected_content = $("#" + $tab_data_selected.attr("aria-controls"));
            if (0 === $tab_selected.length && 0 !== $tab_data_selected.length) {
                $tab_data_selected.attr({ "aria-selected": "true", tabindex: 0 });
                $tab_data_selected_content.removeAttr("aria-hidden");
            }
        });
        $tabs.each(function () {
            var $this = $(this),
                $tab_selected = $this.find('.js-tablist__link[aria-selected="true"]'),
                $first_link = $this.find('.js-tablist__link:not([aria-disabled="true"]):first'),
                $first_content = $("#" + $first_link.attr("aria-controls"));
            if (0 === $tab_selected.length) {
                $first_link.attr({ "aria-selected": "true", tabindex: 0 });
                $first_content.removeAttr("aria-hidden");
            }
        });
        $body.on("click", ".js-tablist__link[aria-disabled='true']", function () {
            return false;
        });
        $body
            .on("click", ".js-tablist__link:not([aria-disabled='true'])", function (event) {
                var $this = $(this),
                    $hash_to_update = $this.attr("aria-controls"),
                    $tab_content_linked = $("#" + $this.attr("aria-controls")),
                    $parent = $this.closest(".js-tabs"),
                    options = $parent.data(),
                    tabs_disable_fragments = "undefined" !== typeof options.tabsDisableFragment ? true : false,
                    $all_tab_links = $parent.find(".js-tablist__link"),
                    $all_tab_contents = $parent.find(".js-tabcontent");
                $all_tab_links.attr({ tabindex: -1, "aria-selected": "false" });
                $this.attr({ "aria-selected": "true", tabindex: 0 });
                $all_tab_contents.attr("aria-hidden", "true");
                $tab_content_linked.removeAttr("aria-hidden");
                if (false === tabs_disable_fragments)
                    setTimeout(function () {
                        if ("true" === sessionStorage.getItem("isPopState")) {
                            history.replaceState(location.pathname, "", location.pathname + location.search + "#" + $hash_to_update);
                            sessionStorage.setItem("isPopState", false);
                        } else {
                            history.pushState(location.pathname, "", location.pathname + location.search + "#" + $hash_to_update);
                            event.stopImmediatePropagation();
                        }
                        $(window).trigger("hashchange");
                    }, 100);
                event.preventDefault();
                event.stopImmediatePropagation();
            })
            .on("keydown", ".js-tablist", function (event) {
                var $parent = $(this).closest(".js-tabs"),
                    $activated = $parent.find('.js-tablist__link[aria-selected="true"]').parent(),
                    $last_link = $parent.find(".js-tablist__item:last-child .js-tablist__link"),
                    $first_link = $parent.find(".js-tablist__item:first-child .js-tablist__link"),
                    $focus_on_tab_only = false,
                    $prev = $activated,
                    $next = $activated;
                do {
                    if ($prev.is(".js-tablist__item:first-child")) $prev = $last_link.parent();
                    else $prev = $prev.prev();
                } while ("true" === $prev.children(".js-tablist__link").attr("aria-disabled") && $prev !== $activated);
                do {
                    if ($next.is(".js-tablist__item:last-child")) $next = $first_link.parent();
                    else $next = $next.next();
                } while ("true" === $next.children(".js-tablist__link").attr("aria-disabled") && $next !== $activated);
                if ($(document.activeElement).is($parent.find(".js-tablist__link"))) $focus_on_tab_only = true;
                if ($focus_on_tab_only && !event.ctrlKey)
                    if (37 == event.keyCode) {
                        $prev.children(".js-tablist__link").click().focus();
                        event.preventDefault();
                        event.stopImmediatePropagation();
                    } else if (39 == event.keyCode) {
                        $next.children(".js-tablist__link").click().focus();
                        event.preventDefault();
                        event.stopImmediatePropagation();
                    } else if (36 == event.keyCode) {
                        $first_link.click().focus();
                        event.preventDefault();
                        event.stopImmediatePropagation();
                    } else if (35 == event.keyCode) {
                        $last_link.click().focus();
                        event.preventDefault();
                        event.stopImmediatePropagation();
                    }
            })
            .on("keydown", ".js-tabcontent", function (event) {
                var $this = $(this),
                    $selector_tab_to_focus = $this.attr("aria-labelledby"),
                    $tab_to_focus = $("#" + $selector_tab_to_focus),
                    $parent_item = $tab_to_focus.parent(),
                    $parent_list = $parent_item.parent(),
                    $first_item = $parent_list.find(".js-tablist__item:first-child"),
                    $last_item = $parent_list.find(".js-tablist__item:last-child"),
                    $prev_item = $parent_item,
                    $next_item = $parent_item;
                if (38 == event.keyCode && event.ctrlKey) {
                    $tab_to_focus.focus();
                    event.preventDefault();
                    event.stopImmediatePropagation();
                }
                if (33 == event.keyCode && event.ctrlKey) {
                    do {
                        if ($prev_item.is(".js-tablist__item:first-child")) $prev_item = $last_item;
                        else $prev_item = $prev_item.prev();
                    } while ("true" === $prev_item.children(".js-tablist__link").attr("aria-disabled") && $prev_item !== $parent_item);
                    $prev_item.children(".js-tablist__link").click().focus();
                    event.preventDefault();
                    event.stopImmediatePropagation();
                }
                if (34 == event.keyCode && event.ctrlKey) {
                    $tab_to_focus.focus();
                    do {
                        if ($next_item.is(".js-tablist__item:last-child")) $next_item = $first_item;
                        else $next_item = $next_item.next();
                    } while ("true" === $next_item.children(".js-tablist__link").attr("aria-disabled") && $next_item !== $parent_item);
                    $next_item.children(".js-tablist__link").click().focus();
                    event.preventDefault();
                    event.stopImmediatePropagation();
                }
            })
            .on("click", ".js-link-to-tab", function () {
                var $this = $(this),
                    $tab_to_go = $($this.attr("href")),
                    $button_to_click = $("#" + $tab_to_go.attr("aria-labelledby"));
                if ("true" !== $button_to_click.attr("aria-disabled")) {
                    $button_to_click.click();
                    setTimeout(function () {
                        $button_to_click.focus();
                    }, 10);
                }
            });
    }
}
function colorModeSwitcher() {
    const toggleSwitch = $("#colorModeSwitcher");
    const currentTheme = localStorage.getItem("colorMode");
    let logo = $("#logo"),
        logoMobile = $("#logoMobile");
    if (void 0 !== toggleSwitch && toggleSwitch.length && null !== toggleSwitch && "null" !== toggleSwitch) {
        if (currentTheme) {
            document.documentElement.setAttribute("data-color-mode", currentTheme);
            if ("dark" === currentTheme) {
                toggleSwitch.prop("checked", true);
                toggleSwitch.attr("aria-checked", "true");
                logoMobile.attr("src", "img/global/logo-" + BRAND.name + "-white.svg");
                switchAsset(".ui-datepicker-trigger img", "calendar", "calendar-white");
            } else {
                toggleSwitch.prop("checked", false);
                toggleSwitch.attr("aria-checked", "false");
                switchAsset(".ui-datepicker-trigger img", "calendar-white", "calendar");
                logoMobile.attr("src", "img/global/logo-" + BRAND.name + ".svg");
            }
        } else if (window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches) {
            document.documentElement.setAttribute("data-color-mode", "dark");
            localStorage.setItem("colorMode", "dark");
            logoMobile.attr("src", "img/global/logo-" + BRAND.name + "-white.svg");
            toggleSwitch.prop("checked", true);
            toggleSwitch.attr("aria-checked", "true");
        } else {
            document.documentElement.setAttribute("data-color-mode", "light");
            localStorage.setItem("colorMode", "light");
            logoMobile.attr("src", "img/global/logo-" + BRAND.name + ".svg");
            toggleSwitch.prop("checked", false);
            toggleSwitch.attr("aria-checked", "false");
        }
        toggleSwitch.on("change", switchColorMode);
    } else {
        if (window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches) {
            document.documentElement.setAttribute("data-color-mode", "dark");
            localStorage.setItem("colorMode", "dark");
            if (void 0 !== toggleSwitch && toggleSwitch.length && null !== toggleSwitch && "null" !== toggleSwitch) {
                logoMobile.attr("src", "img/global/logo-" + BRAND.name + "-white.svg");
                toggleSwitch.prop("checked", true);
                toggleSwitch.attr("aria-checked", "true");
            }
        } else {
            document.documentElement.setAttribute("data-color-mode", "light");
            localStorage.setItem("colorMode", "light");
            if (void 0 !== toggleSwitch && toggleSwitch.length && null !== toggleSwitch && "null" !== toggleSwitch) {
                logoMobile.attr("src", "img/global/logo-" + BRAND.name + ".svg");
                toggleSwitch.prop("checked", false);
                toggleSwitch.attr("aria-checked", "false");
            }
        }
        if (void 0 !== toggleSwitch && toggleSwitch.length && null !== toggleSwitch && "null" !== toggleSwitch) toggleSwitch.on("change", switchColorMode);
    }
}
function switchColorMode(e) {
    let logoMobile = $("#logoMobile");
    if (e.target.checked) {
        e.target.ariaChecked = "true";
        document.documentElement.setAttribute("data-color-mode", "dark");
        localStorage.setItem("colorMode", "dark");
        logoMobile.attr("src", "img/global/logo-" + BRAND.name + "-white.svg");
        switchAsset(".ui-datepicker-trigger img", "calendar", "calendar-white");
    } else {
        e.target.ariaChecked = "false";
        document.documentElement.setAttribute("data-color-mode", "light");
        localStorage.setItem("colorMode", "light");
        logoMobile.attr("src", "img/global/logo-" + BRAND.name + ".svg");
        switchAsset(".ui-datepicker-trigger img", "calendar-white", "calendar");
    }
}
function switchAsset(idAsset, assetDark, assetLight) {
    if (document.querySelector(idAsset)) document.querySelector(idAsset).setAttribute("src", document.querySelector(idAsset).getAttribute("src").replace(assetDark, assetLight));
}
function dayTripper() {
    $(".ui-datepicker-trigger").click(function () {
        setTimeout(function () {
            var today = $(".ui-datepicker-today a")[0];
            if (!today) today = $(".ui-state-active")[0] || $(".ui-state-default")[0];
            $("main").attr("id", "dp-container");
            $("#dp-container").attr("aria-hidden", "true");
            $("#skipnav").attr("aria-hidden", "true");
            $(".ui-datepicker-current").hide();
            today.focus();
            datePickHandler();
            $(document).on("click", "#ui-datepicker-div .ui-datepicker-close", function () {
                closeCalendar();
            });
        }, 0);
    });
}
function datePickHandler() {
    var activeDate;
    var container = document.getElementById("ui-datepicker-div");
    var input = document.getElementById("datepicker");
    if (!container || !input) return;
    var prev = $(".ui-datepicker-prev", container)[0],
        next = $(".ui-datepicker-next", container)[0];
    next.href = "javascript:void(0)";
    prev.href = "javascript:void(0)";
    next.setAttribute("role", "button");
    next.removeAttribute("title");
    prev.setAttribute("role", "button");
    prev.removeAttribute("title");
    $(next).on("click", handleNextClicks);
    $(prev).on("click", handlePrevClicks);
    monthDayYearText();
    $(container).on("keydown", function calendarKeyboardListener(keyVent) {
        var which = keyVent.which;
        var target = keyVent.target;
        var dateCurrent = getCurrentDate(container);
        if (!dateCurrent) {
            dateCurrent = $("a.ui-state-default")[0];
            setHighlightState(dateCurrent, container);
        }
        if (27 === which) {
            keyVent.stopPropagation();
            return closeCalendar();
        } else if (9 === which && keyVent.shiftKey) {
            keyVent.preventDefault();
            if ($(target).hasClass("ui-datepicker-close")) $(".ui-datepicker-prev")[0].focus();
            else if ($(target).hasClass("ui-state-default")) $(".ui-datepicker-close")[0].focus();
            else if ($(target).hasClass("ui-datepicker-prev")) $(".ui-datepicker-next")[0].focus();
            else if ($(target).hasClass("ui-datepicker-next")) {
                activeDate = $(".ui-state-highlight") || $(".ui-state-active")[0];
                if (activeDate) activeDate.focus();
            }
        } else if (9 === which) {
            keyVent.preventDefault();
            if ($(target).hasClass("ui-datepicker-close")) {
                activeDate = $(".ui-state-highlight") || $(".ui-state-active")[0];
                if (activeDate) activeDate.focus();
            } else if ($(target).hasClass("ui-state-default")) $(".ui-datepicker-next")[0].focus();
            else if ($(target).hasClass("ui-datepicker-next")) $(".ui-datepicker-prev")[0].focus();
            else if ($(target).hasClass("ui-datepicker-prev")) $(".ui-datepicker-close")[0].focus();
        } else if (37 === which) {
            if (!$(target).hasClass("ui-datepicker-close") && $(target).hasClass("ui-state-default")) {
                keyVent.preventDefault();
                previousDay(target);
            }
        } else if (39 === which) {
            if (!$(target).hasClass("ui-datepicker-close") && $(target).hasClass("ui-state-default")) {
                keyVent.preventDefault();
                nextDay(target);
            }
        } else if (38 === which) {
            if (!$(target).hasClass("ui-datepicker-close") && $(target).hasClass("ui-state-default")) {
                keyVent.preventDefault();
                upHandler(target, container, prev);
            }
        } else if (40 === which) {
            if (!$(target).hasClass("ui-datepicker-close") && $(target).hasClass("ui-state-default")) {
                keyVent.preventDefault();
                downHandler(target, container, next);
            }
        } else if (13 === which) {
            if ($(target).hasClass("ui-state-default"))
                setTimeout(function () {
                    closeCalendar();
                }, 100);
            else if ($(target).hasClass("ui-datepicker-prev")) handlePrevClicks();
            else if ($(target).hasClass("ui-datepicker-next")) handleNextClicks();
        } else if (32 === which) {
            if ($(target).hasClass("ui-datepicker-prev") || $(target).hasClass("ui-datepicker-next")) target.click();
        } else if (33 === which) moveOneMonth(target, "prev");
        else if (34 === which) moveOneMonth(target, "next");
        else if (36 === which) {
            var firstOfMonth = $(target).closest("tbody").find(".ui-state-default")[0];
            if (firstOfMonth) {
                firstOfMonth.focus();
                setHighlightState(firstOfMonth, $("#ui-datepicker-div")[0]);
            }
        } else if (35 === which) {
            var $daysOfMonth = $(target).closest("tbody").find(".ui-state-default");
            var lastDay = $daysOfMonth[$daysOfMonth.length - 1];
            if (lastDay) {
                lastDay.focus();
                setHighlightState(lastDay, $("#ui-datepicker-div")[0]);
            }
        }
        $(".ui-datepicker-current").hide();
    });
}
function closeCalendar() {
    var container = $("#ui-datepicker-div");
    $(container).off("keydown");
    var input = $("#datepicker")[0];
    $(input).datepicker("hide");
    input.focus();
}
function removeAria() {
    $("#dp-container").removeAttr("aria-hidden");
    $("#skipnav").removeAttr("aria-hidden");
}
function isOdd(num) {
    return num % 2;
}
function moveOneMonth(currentDate, dir) {
    var button = "next" === dir ? $(".ui-datepicker-next")[0] : $(".ui-datepicker-prev")[0];
    if (!button) return;
    var ENABLED_SELECTOR = "#ui-datepicker-div tbody td:not(.ui-state-disabled)";
    var $currentCells = $(ENABLED_SELECTOR);
    var currentIdx = $.inArray(currentDate.parentNode, $currentCells);
    button.click();
    setTimeout(function () {
        updateHeaderElements();
        var $newCells = $(ENABLED_SELECTOR);
        var newTd = $newCells[currentIdx];
        var newAnchor = newTd && $(newTd).find("a")[0];
        while (!newAnchor) {
            currentIdx--;
            newTd = $newCells[currentIdx];
            newAnchor = newTd && $(newTd).find("a")[0];
        }
        setHighlightState(newAnchor, $("#ui-datepicker-div")[0]);
        newAnchor.focus();
    }, 0);
}
function handleNextClicks() {
    setTimeout(function () {
        updateHeaderElements();
        prepHighlightState();
        $(".ui-datepicker-next").focus();
        $(".ui-datepicker-current").hide();
    }, 0);
}
function handlePrevClicks() {
    setTimeout(function () {
        updateHeaderElements();
        prepHighlightState();
        $(".ui-datepicker-prev").focus();
        $(".ui-datepicker-current").hide();
    }, 0);
}
function previousDay(dateLink) {
    var container = document.getElementById("ui-datepicker-div");
    if (!dateLink) return;
    var td = $(dateLink).closest("td");
    if (!td) return;
    var prevTd = $(td).prev(),
        prevDateLink = $("a.ui-state-default", prevTd)[0];
    if (prevTd && prevDateLink) {
        setHighlightState(prevDateLink, container);
        prevDateLink.focus();
    } else handlePrevious(dateLink);
}
function handlePrevious(target) {
    var container = document.getElementById("ui-datepicker-div");
    if (!target) return;
    var currentRow = $(target).closest("tr");
    if (!currentRow) return;
    var previousRow = $(currentRow).prev();
    if (!previousRow || 0 === previousRow.length) previousMonth();
    else {
        var prevRowDates = $("td a.ui-state-default", previousRow);
        var prevRowDate = prevRowDates[prevRowDates.length - 1];
        if (prevRowDate)
            setTimeout(function () {
                setHighlightState(prevRowDate, container);
                prevRowDate.focus();
            }, 0);
    }
}
function previousMonth() {
    var prevLink = $(".ui-datepicker-prev")[0];
    var container = document.getElementById("ui-datepicker-div");
    prevLink.click();
    setTimeout(function () {
        var trs = $("tr", container),
            lastRowTdLinks = $("td a.ui-state-default", trs[trs.length - 1]),
            lastDate = lastRowTdLinks[lastRowTdLinks.length - 1];
        updateHeaderElements();
        setHighlightState(lastDate, container);
        lastDate.focus();
    }, 0);
}
function nextDay(dateLink) {
    var container = document.getElementById("ui-datepicker-div");
    if (!dateLink) return;
    var td = $(dateLink).closest("td");
    if (!td) return;
    var nextTd = $(td).next(),
        nextDateLink = $("a.ui-state-default", nextTd)[0];
    if (nextTd && nextDateLink) {
        setHighlightState(nextDateLink, container);
        nextDateLink.focus();
    } else handleNext(dateLink);
}
function handleNext(target) {
    var container = document.getElementById("ui-datepicker-div");
    if (!target) return;
    var currentRow = $(target).closest("tr"),
        nextRow = $(currentRow).next();
    if (!nextRow || 0 === nextRow.length) nextMonth();
    else {
        var nextRowFirstDate = $("a.ui-state-default", nextRow)[0];
        if (nextRowFirstDate) {
            setHighlightState(nextRowFirstDate, container);
            nextRowFirstDate.focus();
        }
    }
}
function nextMonth() {
    nextMon = $(".ui-datepicker-next")[0];
    var container = document.getElementById("ui-datepicker-div");
    nextMon.click();
    setTimeout(function () {
        updateHeaderElements();
        var firstDate = $("a.ui-state-default", container)[0];
        setHighlightState(firstDate, container);
        firstDate.focus();
    }, 0);
}
function upHandler(target, cont, prevLink) {
    prevLink = $(".ui-datepicker-prev")[0];
    var rowContext = $(target).closest("tr");
    if (!rowContext) return;
    var rowTds = $("td", rowContext),
        rowLinks = $("a.ui-state-default", rowContext),
        targetIndex = $.inArray(target, rowLinks),
        prevRow = $(rowContext).prev(),
        prevRowTds = $("td", prevRow),
        parallel = prevRowTds[targetIndex],
        linkCheck = $("a.ui-state-default", parallel)[0];
    if (prevRow && parallel && linkCheck) {
        setHighlightState(linkCheck, cont);
        linkCheck.focus();
    } else {
        prevLink.click();
        setTimeout(function () {
            updateHeaderElements();
            var newRows = $("tr", cont),
                lastRow = newRows[newRows.length - 1],
                lastRowTds = $("td", lastRow),
                tdParallelIndex = $.inArray(target.parentNode, rowTds),
                newParallel = lastRowTds[tdParallelIndex],
                newCheck = $("a.ui-state-default", newParallel)[0];
            if (lastRow && newParallel && newCheck) {
                setHighlightState(newCheck, cont);
                newCheck.focus();
            } else {
                var secondLastRow = newRows[newRows.length - 2],
                    secondTds = $("td", secondLastRow),
                    targetTd = secondTds[tdParallelIndex],
                    linkCheck = $("a.ui-state-default", targetTd)[0];
                if (linkCheck) {
                    setHighlightState(linkCheck, cont);
                    linkCheck.focus();
                }
            }
        }, 0);
    }
}
function downHandler(target, cont, nextLink) {
    nextLink = $(".ui-datepicker-next")[0];
    var targetRow = $(target).closest("tr");
    if (!targetRow) return;
    var targetCells = $("td", targetRow),
        cellIndex = $.inArray(target.parentNode, targetCells),
        nextRow = $(targetRow).next(),
        nextRowCells = $("td", nextRow),
        nextWeekTd = nextRowCells[cellIndex],
        nextWeekCheck = $("a.ui-state-default", nextWeekTd)[0];
    if (nextRow && nextWeekTd && nextWeekCheck) {
        setHighlightState(nextWeekCheck, cont);
        nextWeekCheck.focus();
    } else {
        nextLink.click();
        setTimeout(function () {
            updateHeaderElements();
            var nextMonthTrs = $("tbody tr", cont),
                firstTds = $("td", nextMonthTrs[0]),
                firstParallel = firstTds[cellIndex],
                firstCheck = $("a.ui-state-default", firstParallel)[0];
            if (firstParallel && firstCheck) {
                setHighlightState(firstCheck, cont);
                firstCheck.focus();
            } else {
                var secondRow = nextMonthTrs[1],
                    secondTds = $("td", secondRow),
                    secondRowTd = secondTds[cellIndex],
                    secondCheck = $("a.ui-state-default", secondRowTd)[0];
                if (secondRow && secondCheck) {
                    setHighlightState(secondCheck, cont);
                    secondCheck.focus();
                }
            }
        }, 0);
    }
}
function onCalendarHide() {
    closeCalendar();
}
function monthDayYearText() {
    var cleanUps = $(".amaze-date");
    $(cleanUps).each(function (clean) {
        clean.parentNode.removeChild(clean);
    });
    var datePickDiv = document.getElementById("ui-datepicker-div");
    if (!datePickDiv) return;
    var dates = $("a.ui-state-default", datePickDiv);
    $(dates)
        .attr("role", "button")
        .on("keydown", function (e) {
            if (32 === e.which) {
                e.preventDefault();
                e.target.click();
                setTimeout(function () {
                    closeCalendar();
                }, 100);
            }
        });
    $(dates).each(function (index, date) {
        var currentRow = $(date).closest("tr"),
            currentTds = $("td", currentRow),
            currentIndex = $.inArray(date.parentNode, currentTds),
            headThs = $("thead tr th", datePickDiv),
            dayIndex = headThs[currentIndex],
            daySpan = $("span", dayIndex)[0],
            monthName = $(".ui-datepicker-month", datePickDiv)[0].innerHTML,
            year = $(".ui-datepicker-year", datePickDiv)[0].innerHTML,
            number = date.innerHTML;
        if (!daySpan || !monthName || !number || !year) return;
        var dateText = daySpan.title + " " + date.innerHTML + " " + monthName + " " + year;
        date.setAttribute("aria-label", dateText);
    });
}
function updateHeaderElements() {
    var context = document.getElementById("ui-datepicker-div");
    if (!context) return;
    prev = $(".ui-datepicker-prev", context)[0];
    next = $(".ui-datepicker-next", context)[0];
    next.href = "javascript:void(0)";
    prev.href = "javascript:void(0)";
    next.setAttribute("role", "button");
    prev.setAttribute("role", "button");
    $(next).on("click", handleNextClicks);
    $(prev).on("click", handlePrevClicks);
    monthDayYearText();
}
function prepHighlightState() {
    var highlight;
    var cage = document.getElementById("ui-datepicker-div");
    highlight = $(".ui-state-highlight", cage)[0] || $(".ui-state-default", cage)[0];
    if (highlight && cage) setHighlightState(highlight, cage);
}
function setHighlightState(newHighlight, container) {
    var prevHighlight = getCurrentDate(container);
    $(prevHighlight).removeClass("ui-state-highlight");
    $(newHighlight).addClass("ui-state-highlight");
}
function getCurrentDate(container) {
    var currentDate = $(".ui-state-highlight", container)[0];
    return currentDate;
}
function fileUpload() {
    if ($('input[type="file"]').length)
        $('input[type="file"]').each(function () {
            var $input = $(this),
                $label = $input.next("label"),
                labelVal = $label.html();
            $input.on("change", function (e) {
                var fileName = "";
                if (this.files && this.files.length > 1) fileName = ($input.data("multiple-caption") || "").replace("{count}", this.files.length);
                else if (e.target.value) fileName = e.target.value.split("\\").pop();
                if (fileName) $label.html(fileName);
                else $label.html(labelVal);
            });
            $input
                .on("focus", function () {
                    $input.addClass("has-focus");
                })
                .on("blur", function () {
                    $input.removeClass("has-focus");
                });
        });
}
/*!
 * jquery.base64.js 0.1 - https://github.com/yckart/jquery.base64.js
 * Makes Base64 en & -decoding simpler as it is.
 *
 * Based upon: https://gist.github.com/Yaffle/1284012
 *
 * Copyright (c) 2012 Yannick Albert (http://yckart.com)
 * Licensed under the MIT license (http://www.opensource.org/licenses/mit-license.php).
 * 2013/02/10
 **/ !(function (r) {
    for (
        var e = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
            n = "",
            t = [256],
            o = [256],
            u = 0,
            a = function (r) {
                return r
                    .replace(/[\u0080-\u07ff]/g, function (r) {
                        var e = r.charCodeAt(0);
                        return String.fromCharCode(192 | (e >> 6), 128 | (63 & e));
                    })
                    .replace(/[\u0800-\uffff]/g, function (r) {
                        var e = r.charCodeAt(0);
                        return String.fromCharCode(224 | (e >> 12), 128 | ((e >> 6) & 63), 128 | (63 & e));
                    });
            },
            f = function (r) {
                return r
                    .replace(/[\u00e0-\u00ef][\u0080-\u00bf][\u0080-\u00bf]/g, function (r) {
                        var e = ((15 & r.charCodeAt(0)) << 12) | ((63 & r.charCodeAt(1)) << 6) | (63 & r.charCodeAt(2));
                        return String.fromCharCode(e);
                    })
                    .replace(/[\u00c0-\u00df][\u0080-\u00bf]/g, function (r) {
                        var e = ((31 & r.charCodeAt(0)) << 6) | (63 & r.charCodeAt(1));
                        return String.fromCharCode(e);
                    });
            };
        u < 256;
    
    ) {
        var c = String.fromCharCode(u);
        (n += c), (o[u] = u), (t[u] = e.indexOf(c)), ++u;
    }
    function i(r, e, n, t, o, u) {
        for (var a = 0, f = 0, c = (r = String(r)).length, i = "", d = 0; f < c; ) {
            var h = r.charCodeAt(f);
            for (a = (a << o) + (h = h < 256 ? n[h] : -1), d += o; d >= u; ) {
                var C = a >> (d -= u);
                (i += t.charAt(C)), (a ^= C << d);
            }
            ++f;
        }
        return !e && d > 0 && (i += t.charAt(a << (u - d))), i;
    }
    var d = (r.base64 = function (r, e, n) {
        return e ? d[r](e, n) : r ? null : this;
    });
    (d.btoa = d.encode = function (r, n) {
        return (r = i((r = !1 === d.raw || d.utf8encode || n ? a(r) : r), !1, o, e, 8, 6)) + "====".slice(r.length % 4 || 4);
    }),
        (d.atob = d.decode = function (r, e) {
            var o = (r = String(r).split("=")).length;
            do {
                r[--o] = i(r[o], !0, t, n, 6, 8);
            } while (o > 0);
            return (r = r.join("")), !1 === d.raw || d.utf8decode || e ? f(r) : r;
        });
})(jQuery);
/*!
 * jQuery Internationalization library
 *
 * Copyright (C) 2012 Santhosh Thottingal
 *
 * jquery.i18n is dual licensed GPLv2 or later and MIT. You don't have to do
 * anything special to choose one license or the other and you don't have to
 * notify anyone which license you are using. You are free to use
 * UniversalLanguageSelector in commercial projects as long as the copyright
 * header is left intact. See files GPL-LICENSE and MIT-LICENSE for details.
 *
 * @licence GNU General Public Licence 2.0 or later
 * @licence MIT License
 */ (function ($) {
    "use strict";
    var I18N,
        slice = Array.prototype.slice;
    I18N = function (options) {
        this.options = $.extend({}, I18N.defaults, options);
        this.parser = this.options.parser;
        this.locale = this.options.locale;
        this.messageStore = this.options.messageStore;
        this.languages = {};
    };
    I18N.prototype = {
        localize: function (messageKey) {
            var localeParts, localePartIndex, locale, fallbackIndex, tryingLocale, message;
            locale = this.locale;
            fallbackIndex = 0;
            while (locale) {
                localeParts = locale.split("-");
                localePartIndex = localeParts.length;
                do {
                    tryingLocale = localeParts.slice(0, localePartIndex).join("-");
                    message = this.messageStore.get(tryingLocale, messageKey);
                    if (message) return message;
                    localePartIndex--;
                } while (localePartIndex);
                if (locale === this.options.fallbackLocale) break;
                locale = ($.i18n.fallbacks[this.locale] && $.i18n.fallbacks[this.locale][fallbackIndex]) || this.options.fallbackLocale;
                $.i18n.log("Trying fallback locale for " + this.locale + ": " + locale + " (" + messageKey + ")");
                fallbackIndex++;
            }
            return "";
        },
        destroy: function () {
            $.removeData(document, "i18n");
        },
        load: function (source, locale) {
            var fallbackLocales,
                locIndex,
                fallbackLocale,
                sourceMap = {};
            if (!source && !locale) {
                source = "i18n/" + $.i18n().locale + ".json";
                locale = $.i18n().locale;
            }
            if ("string" === typeof source && "json" !== source.split("?")[0].split(".").pop()) {
                sourceMap[locale] = source + "/" + locale + ".json";
                fallbackLocales = ($.i18n.fallbacks[locale] || []).concat(this.options.fallbackLocale);
                for (locIndex = 0; locIndex < fallbackLocales.length; locIndex++) {
                    fallbackLocale = fallbackLocales[locIndex];
                    sourceMap[fallbackLocale] = source + "/" + fallbackLocale + ".json";
                }
                return this.load(sourceMap);
            } else return this.messageStore.load(source, locale);
        },
        parse: function (key, parameters) {
            var message = this.localize(key);
            this.parser.language = $.i18n.languages[$.i18n().locale] || $.i18n.languages["default"];
            if ("" === message) message = key;
            return this.parser.parse(message, parameters);
        },
    };
    $.i18n = function (key, param1) {
        var parameters,
            i18n = $.data(document, "i18n"),
            options = "object" === typeof key && key;
        if (options && options.locale && i18n && i18n.locale !== options.locale) i18n.locale = options.locale;
        if (!i18n) {
            i18n = new I18N(options);
            $.data(document, "i18n", i18n);
        }
        if ("string" === typeof key) {
            if (void 0 !== param1) parameters = slice.call(arguments, 1);
            else parameters = [];
            return i18n.parse(key, parameters);
        } else return i18n;
    };
    $.fn.i18n = function () {
        var i18n = $.data(document, "i18n");
        if (!i18n) {
            i18n = new I18N();
            $.data(document, "i18n", i18n);
        }
        return this.each(function () {
            var $this = $(this),
                messageKey = $this.data("i18n"),
                lBracket,
                rBracket,
                type,
                key;
            if (messageKey) {
                lBracket = messageKey.indexOf("[");
                rBracket = messageKey.indexOf("]");
                if (-1 !== lBracket && -1 !== rBracket && lBracket < rBracket) {
                    type = messageKey.slice(lBracket + 1, rBracket);
                    key = messageKey.slice(rBracket + 1);
                    if ("html" === type) $this.html(i18n.parse(key));
                    else $this.attr(type, i18n.parse(key));
                } else $this.text(i18n.parse(messageKey));
            } else $this.find("[data-i18n]").i18n();
        });
    };
    function getDefaultLocale() {
        var locale = $("html").attr("lang");
        if (!locale) locale = navigator.language || navigator.userLanguage || "";
        return locale;
    }
    $.i18n.languages = {};
    $.i18n.messageStore = $.i18n.messageStore || {};
    $.i18n.parser = {
        parse: function (message, parameters) {
            return message.replace(/\$(\d+)/g, function (str, match) {
                var index = parseInt(match, 10) - 1;
                return void 0 !== parameters[index] ? parameters[index] : "$" + match;
            });
        },
        emitter: {},
    };
    $.i18n.fallbacks = {};
    $.i18n.debug = false;
    $.i18n.log = function () {
        if (window.console && $.i18n.debug) window.console.log.apply(window.console, arguments);
    };
    I18N.defaults = { locale: getDefaultLocale(), fallbackLocale: "en", parser: $.i18n.parser, messageStore: $.i18n.messageStore };
    $.i18n.constructor = I18N;
})(jQuery);
/*!
 * jQuery Internationalization library - Message Store
 *
 * Copyright (C) 2012 Santhosh Thottingal
 *
 * jquery.i18n is dual licensed GPLv2 or later and MIT. You don't have to do anything special to
 * choose one license or the other and you don't have to notify anyone which license you are using.
 * You are free to use UniversalLanguageSelector in commercial projects as long as the copyright
 * header is left intact. See files GPL-LICENSE and MIT-LICENSE for details.
 *
 * @licence GNU General Public Licence 2.0 or later
 * @licence MIT License
 */ (function ($) {
    "use strict";
    var MessageStore = function () {
        this.messages = {};
        this.sources = {};
    };
    var syncLoad = false;
    function jsonMessageLoader(url) {
        var deferred = $.Deferred();
        $.ajax({ url: url, dataType: "json", async: syncLoad })
            .done(deferred.resolve)
            .fail(function (jqxhr, settings, exception) {
                $.i18n.log("Error in loading messages from " + url + " Exception: " + exception);
                deferred.resolve();
            });
        return deferred.promise();
    }
    MessageStore.prototype = {
        load: function (source, locale) {
            var key = null,
                deferred = null,
                deferreds = [],
                messageStore = this;
            if ("string" === typeof source) {
                $.i18n.log("Loading messages from: " + source);
                deferred = jsonMessageLoader(source).done(function (localization) {
                    messageStore.set(locale, localization);
                });
                return deferred.promise();
            }
            if (locale) {
                messageStore.set(locale, source);
                return $.Deferred().resolve();
            } else {
                for (key in source)
                    if (Object.prototype.hasOwnProperty.call(source, key)) {
                        locale = key;
                        deferreds.push(messageStore.load(source[key], locale));
                    }
                return $.when.apply($, deferreds);
            }
        },
        set: function (locale, messages) {
            if (!this.messages[locale]) this.messages[locale] = messages;
            else this.messages[locale] = $.extend(this.messages[locale], messages);
        },
        get: function (locale, messageKey) {
            return this.messages[locale] && this.messages[locale][messageKey];
        },
    };
    $.extend($.i18n.messageStore, new MessageStore());
})(jQuery);
/*!
 * jQuery Internationalization library
 *
 * Copyright (C) 2012 Santhosh Thottingal
 *
 * jquery.i18n is dual licensed GPLv2 or later and MIT. You don't have to do anything special to
 * choose one license or the other and you don't have to notify anyone which license you are using.
 * You are free to use UniversalLanguageSelector in commercial projects as long as the copyright
 * header is left intact. See files GPL-LICENSE and MIT-LICENSE for details.
 *
 * @licence GNU General Public Licence 2.0 or later
 * @licence MIT License
 */ (function ($) {
    "use strict";
    $.i18n = $.i18n || {};
    $.extend($.i18n.fallbacks, {
        ab: ["ru"],
        ace: ["id"],
        aln: ["sq"],
        als: ["gsw", "de"],
        an: ["es"],
        anp: ["hi"],
        arn: ["es"],
        arz: ["ar"],
        av: ["ru"],
        ay: ["es"],
        ba: ["ru"],
        bar: ["de"],
        "bat-smg": ["sgs", "lt"],
        bcc: ["fa"],
        "be-x-old": ["be-tarask"],
        bh: ["bho"],
        bjn: ["id"],
        bm: ["fr"],
        bpy: ["bn"],
        bqi: ["fa"],
        bug: ["id"],
        "cbk-zam": ["es"],
        ce: ["ru"],
        crh: ["crh-latn"],
        "crh-cyrl": ["ru"],
        csb: ["pl"],
        cv: ["ru"],
        "de-at": ["de"],
        "de-ch": ["de"],
        "de-formal": ["de"],
        dsb: ["de"],
        dtp: ["ms"],
        egl: ["it"],
        eml: ["it"],
        ff: ["fr"],
        fit: ["fi"],
        "fiu-vro": ["vro", "et"],
        frc: ["fr"],
        frp: ["fr"],
        frr: ["de"],
        fur: ["it"],
        gag: ["tr"],
        gan: ["gan-hant", "zh-hant", "zh-hans"],
        "gan-hans": ["zh-hans"],
        "gan-hant": ["zh-hant", "zh-hans"],
        gl: ["pt"],
        glk: ["fa"],
        gn: ["es"],
        gsw: ["de"],
        hif: ["hif-latn"],
        hsb: ["de"],
        ht: ["fr"],
        ii: ["zh-cn", "zh-hans"],
        inh: ["ru"],
        iu: ["ike-cans"],
        jut: ["da"],
        jv: ["id"],
        kaa: ["kk-latn", "kk-cyrl"],
        kbd: ["kbd-cyrl"],
        khw: ["ur"],
        kiu: ["tr"],
        kk: ["kk-cyrl"],
        "kk-arab": ["kk-cyrl"],
        "kk-latn": ["kk-cyrl"],
        "kk-cn": ["kk-arab", "kk-cyrl"],
        "kk-kz": ["kk-cyrl"],
        "kk-tr": ["kk-latn", "kk-cyrl"],
        kl: ["da"],
        "ko-kp": ["ko"],
        koi: ["ru"],
        krc: ["ru"],
        ks: ["ks-arab"],
        ksh: ["de"],
        ku: ["ku-latn"],
        "ku-arab": ["ckb"],
        kv: ["ru"],
        lad: ["es"],
        lb: ["de"],
        lbe: ["ru"],
        lez: ["ru"],
        li: ["nl"],
        lij: ["it"],
        liv: ["et"],
        lmo: ["it"],
        ln: ["fr"],
        ltg: ["lv"],
        lzz: ["tr"],
        mai: ["hi"],
        "map-bms": ["jv", "id"],
        mg: ["fr"],
        mhr: ["ru"],
        min: ["id"],
        mo: ["ro"],
        mrj: ["ru"],
        mwl: ["pt"],
        myv: ["ru"],
        mzn: ["fa"],
        nah: ["es"],
        nap: ["it"],
        nds: ["de"],
        "nds-nl": ["nl"],
        "nl-informal": ["nl"],
        no: ["nb"],
        os: ["ru"],
        pcd: ["fr"],
        pdc: ["de"],
        pdt: ["de"],
        pfl: ["de"],
        pms: ["it"],
        pt: ["pt-br"],
        "pt-br": ["pt"],
        qu: ["es"],
        qug: ["qu", "es"],
        rgn: ["it"],
        rmy: ["ro"],
        "roa-rup": ["rup"],
        rue: ["uk", "ru"],
        ruq: ["ruq-latn", "ro"],
        "ruq-cyrl": ["mk"],
        "ruq-latn": ["ro"],
        sa: ["hi"],
        sah: ["ru"],
        scn: ["it"],
        sg: ["fr"],
        sgs: ["lt"],
        sli: ["de"],
        sr: ["sr-ec"],
        srn: ["nl"],
        stq: ["de"],
        su: ["id"],
        szl: ["pl"],
        tcy: ["kn"],
        tg: ["tg-cyrl"],
        tt: ["tt-cyrl", "ru"],
        "tt-cyrl": ["ru"],
        ty: ["fr"],
        udm: ["ru"],
        ug: ["ug-arab"],
        uk: ["ru"],
        vec: ["it"],
        vep: ["et"],
        vls: ["nl"],
        vmf: ["de"],
        vot: ["fi"],
        vro: ["et"],
        wa: ["fr"],
        wo: ["fr"],
        wuu: ["zh-hans"],
        xal: ["ru"],
        xmf: ["ka"],
        yi: ["he"],
        za: ["zh-hans"],
        zea: ["nl"],
        zh: ["zh-hans"],
        "zh-classical": ["lzh"],
        "zh-cn": ["zh-hans"],
        "zh-hant": ["zh-hans"],
        "zh-hk": ["zh-hant", "zh-hans"],
        "zh-min-nan": ["nan"],
        "zh-mo": ["zh-hk", "zh-hant", "zh-hans"],
        "zh-my": ["zh-sg", "zh-hans"],
        "zh-sg": ["zh-hans"],
        "zh-tw": ["zh-hant", "zh-hans"],
        "zh-yue": ["yue"],
    });
})(jQuery);
/*!
 * jQuery Internationalization library
 *
 * Copyright (C) 2011-2013 Santhosh Thottingal, Neil Kandalgaonkar
 *
 * jquery.i18n is dual licensed GPLv2 or later and MIT. You don't have to do
 * anything special to choose one license or the other and you don't have to
 * notify anyone which license you are using. You are free to use
 * UniversalLanguageSelector in commercial projects as long as the copyright
 * header is left intact. See files GPL-LICENSE and MIT-LICENSE for details.
 *
 * @licence GNU General Public Licence 2.0 or later
 * @licence MIT License
 */ (function ($) {
    "use strict";
    var MessageParser = function (options) {
        this.options = $.extend({}, $.i18n.parser.defaults, options);
        this.language = $.i18n.languages[String.locale] || $.i18n.languages["default"];
        this.emitter = $.i18n.parser.emitter;
    };
    MessageParser.prototype = {
        constructor: MessageParser,
        simpleParse: function (message, parameters) {
            return message.replace(/\$(\d+)/g, function (str, match) {
                var index = parseInt(match, 10) - 1;
                return void 0 !== parameters[index] ? parameters[index] : "$" + match;
            });
        },
        parse: function (message, replacements) {
            if (message.indexOf("{{") < 0) return this.simpleParse(message, replacements);
            this.emitter.language = $.i18n.languages[$.i18n().locale] || $.i18n.languages["default"];
            return this.emitter.emit(this.ast(message), replacements);
        },
        ast: function (message) {
            var pipe,
                colon,
                backslash,
                anyCharacter,
                dollar,
                digits,
                regularLiteral,
                regularLiteralWithoutBar,
                regularLiteralWithoutSpace,
                escapedOrLiteralWithoutBar,
                escapedOrRegularLiteral,
                templateContents,
                templateName,
                openTemplate,
                closeTemplate,
                expression,
                paramExpression,
                result,
                pos = 0;
            function choice(parserSyntax) {
                return function () {
                    var i, result;
                    for (i = 0; i < parserSyntax.length; i++) {
                        result = parserSyntax[i]();
                        if (null !== result) return result;
                    }
                    return null;
                };
            }
            function sequence(parserSyntax) {
                var i,
                    res,
                    originalPos = pos,
                    result = [];
                for (i = 0; i < parserSyntax.length; i++) {
                    res = parserSyntax[i]();
                    if (null === res) {
                        pos = originalPos;
                        return null;
                    }
                    result.push(res);
                }
                return result;
            }
            function nOrMore(n, p) {
                return function () {
                    var originalPos = pos,
                        result = [],
                        parsed = p();
                    while (null !== parsed) {
                        result.push(parsed);
                        parsed = p();
                    }
                    if (result.length < n) {
                        pos = originalPos;
                        return null;
                    }
                    return result;
                };
            }
            function makeStringParser(s) {
                var len = s.length;
                return function () {
                    var result = null;
                    if (message.slice(pos, pos + len) === s) {
                        result = s;
                        pos += len;
                    }
                    return result;
                };
            }
            function makeRegexParser(regex) {
                return function () {
                    var matches = message.slice(pos).match(regex);
                    if (null === matches) return null;
                    pos += matches[0].length;
                    return matches[0];
                };
            }
            pipe = makeStringParser("|");
            colon = makeStringParser(":");
            backslash = makeStringParser("\\");
            anyCharacter = makeRegexParser(/^./);
            dollar = makeStringParser("$");
            digits = makeRegexParser(/^\d+/);
            regularLiteral = makeRegexParser(/^[^{}[\]$\\]/);
            regularLiteralWithoutBar = makeRegexParser(/^[^{}[\]$\\|]/);
            regularLiteralWithoutSpace = makeRegexParser(/^[^{}[\]$\s]/);
            function transform(p, fn) {
                return function () {
                    var result = p();
                    return null === result ? null : fn(result);
                };
            }
            function literalWithoutBar() {
                var result = nOrMore(1, escapedOrLiteralWithoutBar)();
                return null === result ? null : result.join("");
            }
            function literal() {
                var result = nOrMore(1, escapedOrRegularLiteral)();
                return null === result ? null : result.join("");
            }
            function escapedLiteral() {
                var result = sequence([backslash, anyCharacter]);
                return null === result ? null : result[1];
            }
            choice([escapedLiteral, regularLiteralWithoutSpace]);
            escapedOrLiteralWithoutBar = choice([escapedLiteral, regularLiteralWithoutBar]);
            escapedOrRegularLiteral = choice([escapedLiteral, regularLiteral]);
            function replacement() {
                var result = sequence([dollar, digits]);
                if (null === result) return null;
                return ["REPLACE", parseInt(result[1], 10) - 1];
            }
            templateName = transform(makeRegexParser(/^[ !"$&'()*,./0-9;=?@A-Z^_`a-z~\x80-\xFF+-]+/), function (result) {
                return result.toString();
            });
            function templateParam() {
                var expr,
                    result = sequence([pipe, nOrMore(0, paramExpression)]);
                if (null === result) return null;
                expr = result[1];
                return expr.length > 1 ? ["CONCAT"].concat(expr) : expr[0];
            }
            function templateWithReplacement() {
                var result = sequence([templateName, colon, replacement]);
                return null === result ? null : [result[0], result[2]];
            }
            function templateWithOutReplacement() {
                var result = sequence([templateName, colon, paramExpression]);
                return null === result ? null : [result[0], result[2]];
            }
            templateContents = choice([
                function () {
                    var res = sequence([choice([templateWithReplacement, templateWithOutReplacement]), nOrMore(0, templateParam)]);
                    return null === res ? null : res[0].concat(res[1]);
                },
                function () {
                    var res = sequence([templateName, nOrMore(0, templateParam)]);
                    if (null === res) return null;
                    return [res[0]].concat(res[1]);
                },
            ]);
            openTemplate = makeStringParser("{{");
            closeTemplate = makeStringParser("}}");
            function template() {
                var result = sequence([openTemplate, templateContents, closeTemplate]);
                return null === result ? null : result[1];
            }
            expression = choice([template, replacement, literal]);
            paramExpression = choice([template, replacement, literalWithoutBar]);
            function start() {
                var result = nOrMore(0, expression)();
                if (null === result) return null;
                return ["CONCAT"].concat(result);
            }
            result = start();
            if (null === result || pos !== message.length) throw new Error("Parse error at position " + pos.toString() + " in input: " + message);
            return result;
        },
    };
    $.extend($.i18n.parser, new MessageParser());
})(jQuery);
/*!
 * jQuery Internationalization library
 *
 * Copyright (C) 2011-2013 Santhosh Thottingal, Neil Kandalgaonkar
 *
 * jquery.i18n is dual licensed GPLv2 or later and MIT. You don't have to do
 * anything special to choose one license or the other and you don't have to
 * notify anyone which license you are using. You are free to use
 * UniversalLanguageSelector in commercial projects as long as the copyright
 * header is left intact. See files GPL-LICENSE and MIT-LICENSE for details.
 *
 * @licence GNU General Public Licence 2.0 or later
 * @licence MIT License
 */ (function ($) {
    "use strict";
    var MessageParserEmitter = function () {
        this.language = $.i18n.languages[String.locale] || $.i18n.languages["default"];
    };
    MessageParserEmitter.prototype = {
        constructor: MessageParserEmitter,
        emit: function (node, replacements) {
            var ret,
                subnodes,
                operation,
                messageParserEmitter = this;
            switch (typeof node) {
                case "string":
                case "number":
                    ret = node;
                    break;
                case "object":
                    subnodes = $.map(node.slice(1), function (n) {
                        return messageParserEmitter.emit(n, replacements);
                    });
                    operation = node[0].toLowerCase();
                    if ("function" === typeof messageParserEmitter[operation]) ret = messageParserEmitter[operation](subnodes, replacements);
                    else throw new Error('unknown operation "' + operation + '"');
                    break;
                case "undefined":
                    ret = "";
                    break;
                default:
                    throw new Error("unexpected type in AST: " + typeof node);
            }
            return ret;
        },
        concat: function (nodes) {
            var result = "";
            $.each(nodes, function (i, node) {
                result += node;
            });
            return result;
        },
        replace: function (nodes, replacements) {
            var index = parseInt(nodes[0], 10);
            if (index < replacements.length) return replacements[index];
            else return "$" + (index + 1);
        },
        plural: function (nodes) {
            var count = parseFloat(this.language.convertNumber(nodes[0], 10)),
                forms = nodes.slice(1);
            return forms.length ? this.language.convertPlural(count, forms) : "";
        },
        gender: function (nodes) {
            var gender = nodes[0],
                forms = nodes.slice(1);
            return this.language.gender(gender, forms);
        },
        grammar: function (nodes) {
            var form = nodes[0],
                word = nodes[1];
            return word && form && this.language.convertGrammar(word, form);
        },
    };
    $.extend($.i18n.parser.emitter, new MessageParserEmitter());
})(jQuery);
(function ($) {
    "use strict";
    var language = {
        pluralRules: {
            ak: { one: "n = 0..1" },
            am: { one: "i = 0 or n = 1" },
            ar: { zero: "n = 0", one: "n = 1", two: "n = 2", few: "n % 100 = 3..10", many: "n % 100 = 11..99" },
            ars: { zero: "n = 0", one: "n = 1", two: "n = 2", few: "n % 100 = 3..10", many: "n % 100 = 11..99" },
            as: { one: "i = 0 or n = 1" },
            be: { one: "n % 10 = 1 and n % 100 != 11", few: "n % 10 = 2..4 and n % 100 != 12..14", many: "n % 10 = 0 or n % 10 = 5..9 or n % 100 = 11..14" },
            bh: { one: "n = 0..1" },
            bn: { one: "i = 0 or n = 1" },
            br: { one: "n % 10 = 1 and n % 100 != 11,71,91", two: "n % 10 = 2 and n % 100 != 12,72,92", few: "n % 10 = 3..4,9 and n % 100 != 10..19,70..79,90..99", many: "n != 0 and n % 1000000 = 0" },
            bs: { one: "v = 0 and i % 10 = 1 and i % 100 != 11 or f % 10 = 1 and f % 100 != 11", few: "v = 0 and i % 10 = 2..4 and i % 100 != 12..14 or f % 10 = 2..4 and f % 100 != 12..14" },
            cs: { one: "i = 1 and v = 0", few: "i = 2..4 and v = 0", many: "v != 0" },
            cy: { zero: "n = 0", one: "n = 1", two: "n = 2", few: "n = 3", many: "n = 6" },
            da: { one: "n = 1 or t != 0 and i = 0,1" },
            dsb: { one: "v = 0 and i % 100 = 1 or f % 100 = 1", two: "v = 0 and i % 100 = 2 or f % 100 = 2", few: "v = 0 and i % 100 = 3..4 or f % 100 = 3..4" },
            fa: { one: "i = 0 or n = 1" },
            ff: { one: "i = 0,1" },
            fil: { one: "v = 0 and i = 1,2,3 or v = 0 and i % 10 != 4,6,9 or v != 0 and f % 10 != 4,6,9" },
            fr: { one: "i = 0,1" },
            ga: { one: "n = 1", two: "n = 2", few: "n = 3..6", many: "n = 7..10" },
            gd: { one: "n = 1,11", two: "n = 2,12", few: "n = 3..10,13..19" },
            gu: { one: "i = 0 or n = 1" },
            guw: { one: "n = 0..1" },
            gv: { one: "v = 0 and i % 10 = 1", two: "v = 0 and i % 10 = 2", few: "v = 0 and i % 100 = 0,20,40,60,80", many: "v != 0" },
            he: { one: "i = 1 and v = 0", two: "i = 2 and v = 0", many: "v = 0 and n != 0..10 and n % 10 = 0" },
            hi: { one: "i = 0 or n = 1" },
            hr: { one: "v = 0 and i % 10 = 1 and i % 100 != 11 or f % 10 = 1 and f % 100 != 11", few: "v = 0 and i % 10 = 2..4 and i % 100 != 12..14 or f % 10 = 2..4 and f % 100 != 12..14" },
            hsb: { one: "v = 0 and i % 100 = 1 or f % 100 = 1", two: "v = 0 and i % 100 = 2 or f % 100 = 2", few: "v = 0 and i % 100 = 3..4 or f % 100 = 3..4" },
            hy: { one: "i = 0,1" },
            is: { one: "t = 0 and i % 10 = 1 and i % 100 != 11 or t != 0" },
            iu: { one: "n = 1", two: "n = 2" },
            iw: { one: "i = 1 and v = 0", two: "i = 2 and v = 0", many: "v = 0 and n != 0..10 and n % 10 = 0" },
            kab: { one: "i = 0,1" },
            kn: { one: "i = 0 or n = 1" },
            kw: { one: "n = 1", two: "n = 2" },
            lag: { zero: "n = 0", one: "i = 0,1 and n != 0" },
            ln: { one: "n = 0..1" },
            lt: { one: "n % 10 = 1 and n % 100 != 11..19", few: "n % 10 = 2..9 and n % 100 != 11..19", many: "f != 0" },
            lv: { zero: "n % 10 = 0 or n % 100 = 11..19 or v = 2 and f % 100 = 11..19", one: "n % 10 = 1 and n % 100 != 11 or v = 2 and f % 10 = 1 and f % 100 != 11 or v != 2 and f % 10 = 1" },
            mg: { one: "n = 0..1" },
            mk: { one: "v = 0 and i % 10 = 1 or f % 10 = 1" },
            mo: { one: "i = 1 and v = 0", few: "v != 0 or n = 0 or n != 1 and n % 100 = 1..19" },
            mr: { one: "i = 0 or n = 1" },
            mt: { one: "n = 1", few: "n = 0 or n % 100 = 2..10", many: "n % 100 = 11..19" },
            naq: { one: "n = 1", two: "n = 2" },
            nso: { one: "n = 0..1" },
            pa: { one: "n = 0..1" },
            pl: { one: "i = 1 and v = 0", few: "v = 0 and i % 10 = 2..4 and i % 100 != 12..14", many: "v = 0 and i != 1 and i % 10 = 0..1 or v = 0 and i % 10 = 5..9 or v = 0 and i % 100 = 12..14" },
            prg: { zero: "n % 10 = 0 or n % 100 = 11..19 or v = 2 and f % 100 = 11..19", one: "n % 10 = 1 and n % 100 != 11 or v = 2 and f % 10 = 1 and f % 100 != 11 or v != 2 and f % 10 = 1" },
            pt: { one: "i = 0..1" },
            ro: { one: "i = 1 and v = 0", few: "v != 0 or n = 0 or n != 1 and n % 100 = 1..19" },
            ru: { one: "v = 0 and i % 10 = 1 and i % 100 != 11", few: "v = 0 and i % 10 = 2..4 and i % 100 != 12..14", many: "v = 0 and i % 10 = 0 or v = 0 and i % 10 = 5..9 or v = 0 and i % 100 = 11..14" },
            se: { one: "n = 1", two: "n = 2" },
            sh: { one: "v = 0 and i % 10 = 1 and i % 100 != 11 or f % 10 = 1 and f % 100 != 11", few: "v = 0 and i % 10 = 2..4 and i % 100 != 12..14 or f % 10 = 2..4 and f % 100 != 12..14" },
            shi: { one: "i = 0 or n = 1", few: "n = 2..10" },
            si: { one: "n = 0,1 or i = 0 and f = 1" },
            sk: { one: "i = 1 and v = 0", few: "i = 2..4 and v = 0", many: "v != 0" },
            sl: { one: "v = 0 and i % 100 = 1", two: "v = 0 and i % 100 = 2", few: "v = 0 and i % 100 = 3..4 or v != 0" },
            sma: { one: "n = 1", two: "n = 2" },
            smi: { one: "n = 1", two: "n = 2" },
            smj: { one: "n = 1", two: "n = 2" },
            smn: { one: "n = 1", two: "n = 2" },
            sms: { one: "n = 1", two: "n = 2" },
            sr: { one: "v = 0 and i % 10 = 1 and i % 100 != 11 or f % 10 = 1 and f % 100 != 11", few: "v = 0 and i % 10 = 2..4 and i % 100 != 12..14 or f % 10 = 2..4 and f % 100 != 12..14" },
            ti: { one: "n = 0..1" },
            tl: { one: "v = 0 and i = 1,2,3 or v = 0 and i % 10 != 4,6,9 or v != 0 and f % 10 != 4,6,9" },
            tzm: { one: "n = 0..1 or n = 11..99" },
            uk: { one: "v = 0 and i % 10 = 1 and i % 100 != 11", few: "v = 0 and i % 10 = 2..4 and i % 100 != 12..14", many: "v = 0 and i % 10 = 0 or v = 0 and i % 10 = 5..9 or v = 0 and i % 100 = 11..14" },
            wa: { one: "n = 0..1" },
            zu: { one: "i = 0 or n = 1" },
        },
        convertPlural: function (count, forms) {
            var pluralRules,
                pluralFormIndex,
                index,
                explicitPluralPattern = new RegExp("\\d+=", "i"),
                formCount,
                form;
            if (!forms || 0 === forms.length) return "";
            for (index = 0; index < forms.length; index++) {
                form = forms[index];
                if (explicitPluralPattern.test(form)) {
                    formCount = parseInt(form.slice(0, form.indexOf("=")), 10);
                    if (formCount === count) return form.slice(form.indexOf("=") + 1);
                    forms[index] = void 0;
                }
            }
            forms = $.map(forms, function (form) {
                if (void 0 !== form) return form;
            });
            pluralRules = this.pluralRules[$.i18n().locale];
            if (!pluralRules) return 1 === count ? forms[0] : forms[1];
            pluralFormIndex = this.getPluralForm(count, pluralRules);
            pluralFormIndex = Math.min(pluralFormIndex, forms.length - 1);
            return forms[pluralFormIndex];
        },
        getPluralForm: function (number, pluralRules) {
            var i,
                pluralForms = ["zero", "one", "two", "few", "many", "other"],
                pluralFormIndex = 0;
            for (i = 0; i < pluralForms.length; i++)
                if (pluralRules[pluralForms[i]]) {
                    if (pluralRuleParser(pluralRules[pluralForms[i]], number)) return pluralFormIndex;
                    pluralFormIndex++;
                }
            return pluralFormIndex;
        },
        convertNumber: function (num, integer) {
            var tmp, item, i, transformTable, numberString, convertedNumber;
            transformTable = this.digitTransformTable($.i18n().locale);
            numberString = String(num);
            convertedNumber = "";
            if (!transformTable) return num;
            if (integer) {
                if (parseFloat(num, 10) === num) return num;
                tmp = [];
                for (item in transformTable) tmp[transformTable[item]] = item;
                transformTable = tmp;
            }
            for (i = 0; i < numberString.length; i++)
                if (transformTable[numberString[i]]) convertedNumber += transformTable[numberString[i]];
                else convertedNumber += numberString[i];
            return integer ? parseFloat(convertedNumber, 10) : convertedNumber;
        },
        convertGrammar: function (word, form) {
            return word;
        },
        gender: function (gender, forms) {
            if (!forms || 0 === forms.length) return "";
            while (forms.length < 2) forms.push(forms[forms.length - 1]);
            if ("male" === gender) return forms[0];
            if ("female" === gender) return forms[1];
            return 3 === forms.length ? forms[2] : forms[0];
        },
        digitTransformTable: function (language) {
            var tables = {
                ar: "Ù Ù¡Ù¢Ù£Ù¤Ù¥Ù¦Ù§Ù¨Ù©",
                fa: "Û°Û±Û²Û³Û´ÛµÛ¶Û·Û¸Û¹",
                ml: "àµ¦àµ§àµ¨àµ©àµªàµ«àµ¬àµ­àµ®àµ¯",
                kn: "à³¦à³§à³¨à³©à³ªà³«à³¬à³­à³®à³¯",
                lo: "à»à»à»à»à»à»à»à»à»à»",
                or: "à­¦à­§à­¨à­©à­ªà­«à­¬à­­à­®à­¯",
                kh: "á á¡á¢á£á¤á¥á¦á§á¨á©",
                pa: "à©¦à©§à©¨à©©à©ªà©«à©¬à©­à©®à©¯",
                gu: "à«¦à«§à«¨à«©à«ªà««à«¬à«­à«®à«¯",
                hi: "à¥¦à¥§à¥¨à¥©à¥ªà¥«à¥¬à¥­à¥®à¥¯",
                my: "áááááááááá",
                ta: "à¯¦à¯§à¯¨à¯©à¯ªà¯«à¯¬à¯­à¯®à¯¯",
                te: "à±¦à±§à±¨à±©à±ªà±«à±¬à±­à±®à±¯",
                th: "à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹",
                bo: "à¼ à¼¡à¼¢à¼£à¼¤à¼¥à¼¦à¼§à¼¨à¼©",
            };
            if (!tables[language]) return false;
            return tables[language].split("");
        },
    };
    $.extend($.i18n.languages, { default: language });
})(jQuery);
/*!
 * jQuery Validation Plugin v1.20.0
 *
 * https://jqueryvalidation.org/
 *
 * Copyright (c) 2023 JÃ¶rn Zaefferer
 * Released under the MIT license
 */ (function (factory) {
    if ("function" === typeof define && define.amd) define(["jquery"], factory);
    else if ("object" === typeof module && module.exports) module.exports = factory(require("jquery"));
    else factory(jQuery);
})(function ($) {
    $.extend($.fn, {
        validate: function (options) {
            if (!this.length) {
                if (options && options.debug && window.console) console.warn("Nothing selected, can't validate, returning nothing.");
                return;
            }
            var validator = $.data(this[0], "validator");
            if (validator) return validator;
            this.attr("novalidate", "novalidate");
            validator = new $.validator(options, this[0]);
            $.data(this[0], "validator", validator);
            if (validator.settings.onsubmit) {
                this.on("click.validate", ":submit", function (event) {
                    validator.submitButton = event.currentTarget;
                    if ($(this).hasClass("cancel")) validator.cancelSubmit = true;
                    if (void 0 !== $(this).attr("formnovalidate")) validator.cancelSubmit = true;
                });
                this.on("submit.validate", function (event) {
                    if (validator.settings.debug) event.preventDefault();
                    function handle() {
                        var hidden, result;
                        if (validator.submitButton && (validator.settings.submitHandler || validator.formSubmitted))
                            hidden = $("<input type='hidden'/>").attr("name", validator.submitButton.name).val($(validator.submitButton).val()).appendTo(validator.currentForm);
                        if (validator.settings.submitHandler && !validator.settings.debug) {
                            result = validator.settings.submitHandler.call(validator, validator.currentForm, event);
                            if (hidden) hidden.remove();
                            if (void 0 !== result) return result;
                            return false;
                        }
                        return true;
                    }
                    if (validator.cancelSubmit) {
                        validator.cancelSubmit = false;
                        return handle();
                    }
                    if (validator.form()) {
                        if (validator.pendingRequest) {
                            validator.formSubmitted = true;
                            return false;
                        }
                        return handle();
                    } else {
                        validator.focusInvalid();
                        return false;
                    }
                });
            }
            return validator;
        },
        valid: function () {
            var valid, validator, errorList;
            if ($(this[0]).is("form")) valid = this.validate().form();
            else {
                errorList = [];
                valid = true;
                validator = $(this[0].form).validate();
                this.each(function () {
                    valid = validator.element(this) && valid;
                    if (!valid) errorList = errorList.concat(validator.errorList);
                });
                validator.errorList = errorList;
            }
            return valid;
        },
        rules: function (command, argument) {
            var element = this[0],
                isContentEditable = "undefined" !== typeof this.attr("contenteditable") && "false" !== this.attr("contenteditable"),
                settings,
                staticRules,
                existingRules,
                data,
                param,
                filtered;
            if (null == element) return;
            if (!element.form && isContentEditable) {
                element.form = this.closest("form")[0];
                element.name = this.attr("name");
            }
            if (null == element.form) return;
            if (command) {
                settings = $.data(element.form, "validator").settings;
                staticRules = settings.rules;
                existingRules = $.validator.staticRules(element);
                switch (command) {
                    case "add":
                        $.extend(existingRules, $.validator.normalizeRule(argument));
                        delete existingRules.messages;
                        staticRules[element.name] = existingRules;
                        if (argument.messages) settings.messages[element.name] = $.extend(settings.messages[element.name], argument.messages);
                        break;
                    case "remove":
                        if (!argument) {
                            delete staticRules[element.name];
                            return existingRules;
                        }
                        filtered = {};
                        $.each(argument.split(/\s/), function (index, method) {
                            filtered[method] = existingRules[method];
                            delete existingRules[method];
                        });
                        return filtered;
                }
            }
            data = $.validator.normalizeRules($.extend({}, $.validator.classRules(element), $.validator.attributeRules(element), $.validator.dataRules(element), $.validator.staticRules(element)), element);
            if (data.required) {
                param = data.required;
                delete data.required;
                data = $.extend({ required: param }, data);
            }
            if (data.remote) {
                param = data.remote;
                delete data.remote;
                data = $.extend(data, { remote: param });
            }
            return data;
        },
    });
    var trim = function (str) {
        return str.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
    };
    $.extend($.expr.pseudos || $.expr[":"], {
        blank: function (a) {
            return !trim("" + $(a).val());
        },
        filled: function (a) {
            var val = $(a).val();
            return null !== val && !!trim("" + val);
        },
        unchecked: function (a) {
            return !$(a).prop("checked");
        },
    });
    $.validator = function (options, form) {
        this.settings = $.extend(true, {}, $.validator.defaults, options);
        this.currentForm = form;
        this.init();
    };
    $.validator.format = function (source, params) {
        if (1 === arguments.length)
            return function () {
                var args = $.makeArray(arguments);
                args.unshift(source);
                return $.validator.format.apply(this, args);
            };
        if (void 0 === params) return source;
        if (arguments.length > 2 && params.constructor !== Array) params = $.makeArray(arguments).slice(1);
        if (params.constructor !== Array) params = [params];
        $.each(params, function (i, n) {
            source = source.replace(new RegExp("\\{" + i + "\\}", "g"), function () {
                return n;
            });
        });
        return source;
    };
    $.extend($.validator, {
        defaults: {
            messages: {},
            groups: {},
            rules: {},
            errorClass: "error",
            pendingClass: "pending",
            validClass: "valid",
            errorElement: "label",
            focusCleanup: false,
            focusInvalid: true,
            errorContainer: $([]),
            errorLabelContainer: $([]),
            onsubmit: true,
            ignore: ":hidden",
            ignoreTitle: false,
            onfocusin: function (element) {
                this.lastActive = element;
                if (this.settings.focusCleanup) {
                    if (this.settings.unhighlight) this.settings.unhighlight.call(this, element, this.settings.errorClass, this.settings.validClass);
                    this.hideThese(this.errorsFor(element));
                }
            },
            onfocusout: function (element) {
                if (!this.checkable(element) && (element.name in this.submitted || !this.optional(element))) this.element(element);
            },
            onkeyup: function (element, event) {
                var excludedKeys = [16, 17, 18, 20, 35, 36, 37, 38, 39, 40, 45, 144, 225];
                if ((9 === event.which && "" === this.elementValue(element)) || -1 !== $.inArray(event.keyCode, excludedKeys)) return;
                else if (element.name in this.submitted || element.name in this.invalid) this.element(element);
            },
            onclick: function (element) {
                if (element.name in this.submitted) this.element(element);
                else if (element.parentNode.name in this.submitted) this.element(element.parentNode);
            },
            highlight: function (element, errorClass, validClass) {
                if ("radio" === element.type) this.findByName(element.name).addClass(errorClass).removeClass(validClass);
                else $(element).addClass(errorClass).removeClass(validClass);
            },
            unhighlight: function (element, errorClass, validClass) {
                if ("radio" === element.type) this.findByName(element.name).removeClass(errorClass).addClass(validClass);
                else $(element).removeClass(errorClass).addClass(validClass);
            },
        },
        setDefaults: function (settings) {
            $.extend($.validator.defaults, settings);
        },
        messages: {
            required: "This field is required.",
            remote: "Please fix this field.",
            email: "Please enter a valid email address.",
            url: "Please enter a valid URL.",
            date: "Please enter a valid date.",
            dateISO: "Please enter a valid date (ISO).",
            number: "Please enter a valid number.",
            digits: "Please enter only digits.",
            equalTo: "Please enter the same value again.",
            maxlength: $.validator.format("Please enter no more than {0} characters."),
            minlength: $.validator.format("Please enter at least {0} characters."),
            rangelength: $.validator.format("Please enter a value between {0} and {1} characters long."),
            range: $.validator.format("Please enter a value between {0} and {1}."),
            max: $.validator.format("Please enter a value less than or equal to {0}."),
            min: $.validator.format("Please enter a value greater than or equal to {0}."),
            step: $.validator.format("Please enter a multiple of {0}."),
        },
        autoCreateRanges: false,
        prototype: {
            init: function () {
                this.labelContainer = $(this.settings.errorLabelContainer);
                this.errorContext = (this.labelContainer.length && this.labelContainer) || $(this.currentForm);
                this.containers = $(this.settings.errorContainer).add(this.settings.errorLabelContainer);
                this.submitted = {};
                this.valueCache = {};
                this.pendingRequest = 0;
                this.pending = {};
                this.invalid = {};
                this.reset();
                var currentForm = this.currentForm,
                    groups = (this.groups = {}),
                    rules;
                $.each(this.settings.groups, function (key, value) {
                    if ("string" === typeof value) value = value.split(/\s/);
                    $.each(value, function (index, name) {
                        groups[name] = key;
                    });
                });
                rules = this.settings.rules;
                $.each(rules, function (key, value) {
                    rules[key] = $.validator.normalizeRule(value);
                });
                function delegate(event) {
                    var isContentEditable = "undefined" !== typeof $(this).attr("contenteditable") && "false" !== $(this).attr("contenteditable");
                    if (!this.form && isContentEditable) {
                        this.form = $(this).closest("form")[0];
                        this.name = $(this).attr("name");
                    }
                    if (currentForm !== this.form) return;
                    var validator = $.data(this.form, "validator"),
                        eventType = "on" + event.type.replace(/^validate/, ""),
                        settings = validator.settings;
                    if (settings[eventType] && !$(this).is(settings.ignore)) settings[eventType].call(validator, this, event);
                }
                $(this.currentForm)
                    .on(
                        "focusin.validate focusout.validate keyup.validate",
                        ":text, [type='password'], [type='file'], select, textarea, [type='number'], [type='search'], " +
                        "[type='tel'], [type='url'], [type='email'], [type='datetime'], [type='date'], [type='month'], " +
                        "[type='week'], [type='time'], [type='datetime-local'], [type='range'], [type='color'], " +
                        "[type='radio'], [type='checkbox'], [contenteditable], [type='button']",
                        delegate
                    )
                    .on("click.validate", "select, option, [type='radio'], [type='checkbox']", delegate);
                if (this.settings.invalidHandler) $(this.currentForm).on("invalid-form.validate", this.settings.invalidHandler);
            },
            form: function () {
                this.checkForm();
                $.extend(this.submitted, this.errorMap);
                this.invalid = $.extend({}, this.errorMap);
                if (!$.isEmptyObject(this.errorMap)) {
                    $(this.currentForm).triggerHandler("invalid-form", [this]);
                    this.showErrors();
                    return false;
                } else return this.valid();
            },
            checkForm: function () {
                this.prepareForm();
                for (var i = 0, elements = (this.currentElements = this.elements()); elements[i]; i++) this.check(elements[i]);
                return this.valid();
            },
            element: function (element) {
                var cleanElement = this.clean(element),
                    checkElement = this.validationTargetFor(cleanElement),
                    v = this,
                    result = true,
                    rs,
                    group;
                if (void 0 === checkElement) delete this.invalid[cleanElement.name];
                else {
                    this.prepareElement(checkElement);
                    this.currentElements = $(checkElement);
                    group = this.groups[checkElement.name];
                    if (group)
                        $.each(this.groups, function (name, testgroup) {
                            if (testgroup === group && name !== checkElement.name) {
                                cleanElement = v.validationTargetFor(v.clean(v.findByName(name)));
                                if (cleanElement && cleanElement.name in v.invalid) {
                                    v.currentElements.push(cleanElement);
                                    result = v.check(cleanElement) && result;
                                }
                            }
                        });
                    rs = false !== this.check(checkElement);
                    result = result && rs;
                    if (rs) this.invalid[checkElement.name] = false;
                    else this.invalid[checkElement.name] = true;
                    if (!this.numberOfInvalids()) this.toHide = this.toHide.add(this.containers);
                    this.showErrors();
                    $(element).attr("aria-invalid", !rs);
                }
                return result;
            },
            showErrors: function (errors) {
                if (errors) {
                    var validator = this;
                    $.extend(this.errorMap, errors);
                    this.errorList = $.map(this.errorMap, function (message, name) {
                        return { message: message, element: validator.findByName(name)[0] };
                    });
                    this.successList = $.grep(this.successList, function (element) {
                        return !(element.name in errors);
                    });
                }
                if (this.settings.showErrors) this.settings.showErrors.call(this, this.errorMap, this.errorList);
                else this.defaultShowErrors();
            },
            resetForm: function () {
                if ($.fn.resetForm) $(this.currentForm).resetForm();
                this.invalid = {};
                this.submitted = {};
                this.prepareForm();
                this.hideErrors();
                var elements = this.elements().removeData("previousValue").removeAttr("aria-invalid");
                this.resetElements(elements);
            },
            resetElements: function (elements) {
                var i;
                if (this.settings.unhighlight)
                    for (i = 0; elements[i]; i++) {
                        this.settings.unhighlight.call(this, elements[i], this.settings.errorClass, "");
                        this.findByName(elements[i].name).removeClass(this.settings.validClass);
                    }
                else elements.removeClass(this.settings.errorClass).removeClass(this.settings.validClass);
            },
            numberOfInvalids: function () {
                return this.objectLength(this.invalid);
            },
            objectLength: function (obj) {
                var count = 0,
                    i;
                for (i in obj) if (void 0 !== obj[i] && null !== obj[i] && false !== obj[i]) count++;
                return count;
            },
            hideErrors: function () {
                this.hideThese(this.toHide);
            },
            hideThese: function (errors) {
                errors.not(this.containers).text("");
                this.addWrapper(errors).hide();
            },
            valid: function () {
                return 0 === this.size();
            },
            size: function () {
                return this.errorList.length;
            },
            focusInvalid: function () {
                if (this.settings.focusInvalid)
                    try {
                        $(this.findLastActive() || (this.errorList.length && this.errorList[0].element) || [])
                            .filter(":visible")
                            .trigger("focus")
                            .trigger("focusin");
                    } catch (e) {}
            },
            findLastActive: function () {
                var lastActive = this.lastActive;
                return (
                    lastActive &&
                    1 ===
                    $.grep(this.errorList, function (n) {
                        return n.element.name === lastActive.name;
                    }).length &&
                    lastActive
                );
            },
            elements: function () {
                var validator = this,
                    rulesCache = {};
                return $(this.currentForm)
                    .find("input, select, textarea, [contenteditable]")
                    .not(":submit, :reset, :image, :disabled")
                    .not(this.settings.ignore)
                    .filter(function () {
                        var name = this.name || $(this).attr("name");
                        var isContentEditable = "undefined" !== typeof $(this).attr("contenteditable") && "false" !== $(this).attr("contenteditable");
                        if (!name && validator.settings.debug && window.console) console.error("%o has no name assigned", this);
                        if (isContentEditable) {
                            this.form = $(this).closest("form")[0];
                            this.name = name;
                        }
                        if (this.form !== validator.currentForm) return false;
                        if (name in rulesCache || !validator.objectLength($(this).rules())) return false;
                        rulesCache[name] = true;
                        return true;
                    });
            },
            clean: function (selector) {
                return $(selector)[0];
            },
            errors: function () {
                var errorClass = this.settings.errorClass.split(" ").join(".");
                return $(this.settings.errorElement + "." + errorClass, this.errorContext);
            },
            resetInternals: function () {
                this.successList = [];
                this.errorList = [];
                this.errorMap = {};
                this.toShow = $([]);
                this.toHide = $([]);
            },
            reset: function () {
                this.resetInternals();
                this.currentElements = $([]);
            },
            prepareForm: function () {
                this.reset();
                this.toHide = this.errors().add(this.containers);
            },
            prepareElement: function (element) {
                this.reset();
                this.toHide = this.errorsFor(element);
            },
            elementValue: function (element) {
                var $element = $(element),
                    type = element.type,
                    isContentEditable = "undefined" !== typeof $element.attr("contenteditable") && "false" !== $element.attr("contenteditable"),
                    val,
                    idx;
                if ("radio" === type || "checkbox" === type) return this.findByName(element.name).filter(":checked").val();
                else if ("number" === type && "undefined" !== typeof element.validity) return element.validity.badInput ? "NaN" : $element.val();
                if (isContentEditable) val = $element.text();
                else val = $element.val();
                if ("file" === type) {
                    if ("C:\\fakepath\\" === val.substr(0, 12)) return val.substr(12);
                    idx = val.lastIndexOf("/");
                    if (idx >= 0) return val.substr(idx + 1);
                    idx = val.lastIndexOf("\\");
                    if (idx >= 0) return val.substr(idx + 1);
                    return val;
                }
                if ("string" === typeof val) return val.replace(/\r/g, "");
                return val;
            },
            check: function (element) {
                element = this.validationTargetFor(this.clean(element));
                var rules = $(element).rules(),
                    rulesCount = $.map(rules, function (n, i) {
                        return i;
                    }).length,
                    dependencyMismatch = false,
                    val = this.elementValue(element),
                    result,
                    method,
                    rule,
                    normalizer;
                this.abortRequest(element);
                if ("function" === typeof rules.normalizer) normalizer = rules.normalizer;
                else if ("function" === typeof this.settings.normalizer) normalizer = this.settings.normalizer;
                if (normalizer) {
                    val = normalizer.call(element, val);
                    delete rules.normalizer;
                }
                for (method in rules) {
                    rule = { method: method, parameters: rules[method] };
                    try {
                        result = $.validator.methods[method].call(this, val, element, rule.parameters);
                        if ("dependency-mismatch" === result && 1 === rulesCount) {
                            dependencyMismatch = true;
                            continue;
                        }
                        dependencyMismatch = false;
                        if ("pending" === result) {
                            this.toHide = this.toHide.not(this.errorsFor(element));
                            return;
                        }
                        if (!result) {
                            this.formatAndAdd(element, rule);
                            return false;
                        }
                    } catch (e) {
                        if (this.settings.debug && window.console) console.log("Exception occurred when checking element " + element.id + ", check the '" + rule.method + "' method.", e);
                        if (e instanceof TypeError) e.message += ".  Exception occurred when checking element " + element.id + ", check the '" + rule.method + "' method.";
                        throw e;
                    }
                }
                if (dependencyMismatch) return;
                if (this.objectLength(rules)) this.successList.push(element);
                return true;
            },
            customDataMessage: function (element, method) {
                return $(element).data("msg" + method.charAt(0).toUpperCase() + method.substring(1).toLowerCase()) || $(element).data("msg");
            },
            customMessage: function (name, method) {
                var m = this.settings.messages[name];
                return m && (m.constructor === String ? m : m[method]);
            },
            findDefined: function () {
                for (var i = 0; i < arguments.length; i++) if (void 0 !== arguments[i]) return arguments[i];
                return;
            },
            defaultMessage: function (element, rule) {
                if ("string" === typeof rule) rule = { method: rule };
                var message = this.findDefined(
                        this.customMessage(element.name, rule.method),
                        this.customDataMessage(element, rule.method),
                        (!this.settings.ignoreTitle && element.title) || void 0,
                        $.validator.messages[rule.method],
                        "<strong>Warning: No message defined for " + element.name + "</strong>"
                    ),
                    theregex = /\$?\{(\d+)\}/g;
                if ("function" === typeof message) message = message.call(this, rule.parameters, element);
                else if (theregex.test(message)) message = $.validator.format(message.replace(theregex, "{$1}"), rule.parameters);
                return message;
            },
            formatAndAdd: function (element, rule) {
                var message = this.defaultMessage(element, rule);
                this.errorList.push({ message: message, element: element, method: rule.method });
                this.errorMap[element.name] = message;
                this.submitted[element.name] = message;
            },
            addWrapper: function (toToggle) {
                if (this.settings.wrapper) toToggle = toToggle.add(toToggle.parent(this.settings.wrapper));
                return toToggle;
            },
            defaultShowErrors: function () {
                var i, elements, error;
                for (i = 0; this.errorList[i]; i++) {
                    error = this.errorList[i];
                    if (this.settings.highlight) this.settings.highlight.call(this, error.element, this.settings.errorClass, this.settings.validClass);
                    this.showLabel(error.element, error.message);
                }
                if (this.errorList.length) this.toShow = this.toShow.add(this.containers);
                if (this.settings.success) for (i = 0; this.successList[i]; i++) this.showLabel(this.successList[i]);
                if (this.settings.unhighlight) for (i = 0, elements = this.validElements(); elements[i]; i++) this.settings.unhighlight.call(this, elements[i], this.settings.errorClass, this.settings.validClass);
                this.toHide = this.toHide.not(this.toShow);
                this.hideErrors();
                this.addWrapper(this.toShow).show();
            },
            validElements: function () {
                return this.currentElements.not(this.invalidElements());
            },
            invalidElements: function () {
                return $(this.errorList).map(function () {
                    return this.element;
                });
            },
            showLabel: function (element, message) {
                var place,
                    group,
                    errorID,
                    v,
                    error = this.errorsFor(element),
                    elementID = this.idOrName(element),
                    describedBy = $(element).attr("aria-describedby");
                if (error.length) {
                    error.removeClass(this.settings.validClass).addClass(this.settings.errorClass);
                    if (this.settings && this.settings.escapeHtml) error.text(message || "");
                    else error.html(message || "");
                } else {
                    error = $("<" + this.settings.errorElement + ">")
                        .attr("id", elementID + "-error")
                        .addClass(this.settings.errorClass);
                    if (this.settings && this.settings.escapeHtml) error.text(message || "");
                    else error.html(message || "");
                    place = error;
                    if (this.settings.wrapper)
                        place = error
                            .hide()
                            .show()
                            .wrap("<" + this.settings.wrapper + "/>")
                            .parent();
                    if (this.labelContainer.length) this.labelContainer.append(place);
                    else if (this.settings.errorPlacement) this.settings.errorPlacement.call(this, place, $(element));
                    else place.insertAfter(element);
                    if (error.is("label")) error.attr("for", elementID);
                    else if (0 === error.parents("label[for='" + this.escapeCssMeta(elementID) + "']").length) {
                        errorID = error.attr("id");
                        if (!describedBy) describedBy = errorID;
                        else if (!describedBy.match(new RegExp("\\b" + this.escapeCssMeta(errorID) + "\\b"))) describedBy += " " + errorID;
                        $(element).attr("aria-describedby", describedBy);
                        group = this.groups[element.name];
                        if (group) {
                            v = this;
                            $.each(v.groups, function (name, testgroup) {
                                if (testgroup === group) $("[name='" + v.escapeCssMeta(name) + "']", v.currentForm).attr("aria-describedby", error.attr("id"));
                            });
                        }
                    }
                }
                if (!message && this.settings.success) {
                    error.text("");
                    if ("string" === typeof this.settings.success) error.addClass(this.settings.success);
                    else this.settings.success(error, element);
                }
                this.toShow = this.toShow.add(error);
            },
            errorsFor: function (element) {
                var name = this.escapeCssMeta(this.idOrName(element)),
                    describer = $(element).attr("aria-describedby"),
                    selector = "label[for='" + name + "'], label[for='" + name + "'] *";
                if (describer) selector = selector + ", #" + this.escapeCssMeta(describer).replace(/\s+/g, ", #");
                return this.errors().filter(selector);
            },
            escapeCssMeta: function (string) {
                if (void 0 === string) return "";
                return string.replace(/([\\!"#$%&'()*+,./:;<=>?@\[\]^`{|}~])/g, "\\$1");
            },
            idOrName: function (element) {
                return this.groups[element.name] || (this.checkable(element) ? element.name : element.id || element.name);
            },
            validationTargetFor: function (element) {
                if (this.checkable(element)) element = this.findByName(element.name);
                return $(element).not(this.settings.ignore)[0];
            },
            checkable: function (element) {
                return /radio|checkbox/i.test(element.type);
            },
            findByName: function (name) {
                return $(this.currentForm).find("[name='" + this.escapeCssMeta(name) + "']");
            },
            getLength: function (value, element) {
                switch (element.nodeName.toLowerCase()) {
                    case "select":
                        return $("option:selected", element).length;
                    case "input":
                        if (this.checkable(element)) return this.findByName(element.name).filter(":checked").length;
                }
                return value.length;
            },
            depend: function (param, element) {
                return this.dependTypes[typeof param] ? this.dependTypes[typeof param](param, element) : true;
            },
            dependTypes: {
                boolean: function (param) {
                    return param;
                },
                string: function (param, element) {
                    return !!$(param, element.form).length;
                },
                function: function (param, element) {
                    return param(element);
                },
            },
            optional: function (element) {
                var val = this.elementValue(element);
                return !$.validator.methods.required.call(this, val, element) && "dependency-mismatch";
            },
            elementAjaxPort: function (element) {
                return "validate" + element.name;
            },
            startRequest: function (element) {
                if (!this.pending[element.name]) {
                    this.pendingRequest++;
                    $(element).addClass(this.settings.pendingClass);
                    this.pending[element.name] = true;
                }
            },
            stopRequest: function (element, valid) {
                this.pendingRequest--;
                if (this.pendingRequest < 0) this.pendingRequest = 0;
                delete this.pending[element.name];
                $(element).removeClass(this.settings.pendingClass);
                if (valid && 0 === this.pendingRequest && this.formSubmitted && this.form() && 0 === this.pendingRequest) {
                    $(this.currentForm).trigger("submit");
                    if (this.submitButton) $("input:hidden[name='" + this.submitButton.name + "']", this.currentForm).remove();
                    this.formSubmitted = false;
                } else if (!valid && 0 === this.pendingRequest && this.formSubmitted) {
                    $(this.currentForm).triggerHandler("invalid-form", [this]);
                    this.formSubmitted = false;
                }
            },
            abortRequest: function (element) {
                var port;
                if (this.pending[element.name]) {
                    port = this.elementAjaxPort(element);
                    $.ajaxAbort(port);
                    this.pendingRequest--;
                    if (this.pendingRequest < 0) this.pendingRequest = 0;
                    delete this.pending[element.name];
                    $(element).removeClass(this.settings.pendingClass);
                }
            },
            previousValue: function (element, method) {
                method = ("string" === typeof method && method) || "remote";
                return $.data(element, "previousValue") || $.data(element, "previousValue", { old: null, valid: true, message: this.defaultMessage(element, { method: method }) });
            },
            destroy: function () {
                this.resetForm();
                $(this.currentForm)
                    .off(".validate")
                    .removeData("validator")
                    .find(".validate-equalTo-blur")
                    .off(".validate-equalTo")
                    .removeClass("validate-equalTo-blur")
                    .find(".validate-lessThan-blur")
                    .off(".validate-lessThan")
                    .removeClass("validate-lessThan-blur")
                    .find(".validate-lessThanEqual-blur")
                    .off(".validate-lessThanEqual")
                    .removeClass("validate-lessThanEqual-blur")
                    .find(".validate-greaterThanEqual-blur")
                    .off(".validate-greaterThanEqual")
                    .removeClass("validate-greaterThanEqual-blur")
                    .find(".validate-greaterThan-blur")
                    .off(".validate-greaterThan")
                    .removeClass("validate-greaterThan-blur");
            },
        },
        classRuleSettings: { required: { required: true }, email: { email: true }, url: { url: true }, date: { date: true }, dateISO: { dateISO: true }, number: { number: true }, digits: { digits: true }, creditcard: { creditcard: true } },
        addClassRules: function (className, rules) {
            if (className.constructor === String) this.classRuleSettings[className] = rules;
            else $.extend(this.classRuleSettings, className);
        },
        classRules: function (element) {
            var rules = {},
                classes = $(element).attr("class");
            if (classes)
                $.each(classes.split(" "), function () {
                    if (this in $.validator.classRuleSettings) $.extend(rules, $.validator.classRuleSettings[this]);
                });
            return rules;
        },
        normalizeAttributeRule: function (rules, type, method, value) {
            if (/min|max|step/.test(method) && (null === type || /number|range|text/.test(type))) {
                value = Number(value);
                if (isNaN(value)) value = void 0;
            }
            if (value || 0 === value) rules[method] = value;
            else if (type === method && "range" !== type) rules["date" === type ? "dateISO" : method] = true;
        },
        attributeRules: function (element) {
            var rules = {},
                $element = $(element),
                type = element.getAttribute("type"),
                method,
                value;
            for (method in $.validator.methods) {
                if ("required" === method) {
                    value = element.getAttribute(method);
                    if ("" === value) value = true;
                    value = !!value;
                } else value = $element.attr(method);
                this.normalizeAttributeRule(rules, type, method, value);
            }
            if (rules.maxlength && /-1|2147483647|524288/.test(rules.maxlength)) delete rules.maxlength;
            return rules;
        },
        dataRules: function (element) {
            var rules = {},
                $element = $(element),
                type = element.getAttribute("type"),
                method,
                value;
            for (method in $.validator.methods) {
                value = $element.data("rule" + method.charAt(0).toUpperCase() + method.substring(1).toLowerCase());
                if ("" === value) value = true;
                this.normalizeAttributeRule(rules, type, method, value);
            }
            return rules;
        },
        staticRules: function (element) {
            var rules = {},
                validator = $.data(element.form, "validator");
            if (validator.settings.rules) rules = $.validator.normalizeRule(validator.settings.rules[element.name]) || {};
            return rules;
        },
        normalizeRules: function (rules, element) {
            $.each(rules, function (prop, val) {
                if (false === val) {
                    delete rules[prop];
                    return;
                }
                if (val.param || val.depends) {
                    var keepRule = true;
                    switch (typeof val.depends) {
                        case "string":
                            keepRule = !!$(val.depends, element.form).length;
                            break;
                        case "function":
                            keepRule = val.depends.call(element, element);
                            break;
                    }
                    if (keepRule) rules[prop] = void 0 !== val.param ? val.param : true;
                    else {
                        $.data(element.form, "validator").resetElements($(element));
                        delete rules[prop];
                    }
                }
            });
            $.each(rules, function (rule, parameter) {
                rules[rule] = "function" === typeof parameter && "normalizer" !== rule ? parameter(element) : parameter;
            });
            $.each(["minlength", "maxlength"], function () {
                if (rules[this]) rules[this] = Number(rules[this]);
            });
            $.each(["rangelength", "range"], function () {
                var parts;
                if (rules[this])
                    if (Array.isArray(rules[this])) rules[this] = [Number(rules[this][0]), Number(rules[this][1])];
                    else if ("string" === typeof rules[this]) {
                        parts = rules[this].replace(/[\[\]]/g, "").split(/[\s,]+/);
                        rules[this] = [Number(parts[0]), Number(parts[1])];
                    }
            });
            if ($.validator.autoCreateRanges) {
                if (null != rules.min && null != rules.max) {
                    rules.range = [rules.min, rules.max];
                    delete rules.min;
                    delete rules.max;
                }
                if (null != rules.minlength && null != rules.maxlength) {
                    rules.rangelength = [rules.minlength, rules.maxlength];
                    delete rules.minlength;
                    delete rules.maxlength;
                }
            }
            return rules;
        },
        normalizeRule: function (data) {
            if ("string" === typeof data) {
                var transformed = {};
                $.each(data.split(/\s/), function () {
                    transformed[this] = true;
                });
                data = transformed;
            }
            return data;
        },
        addMethod: function (name, method, message) {
            $.validator.methods[name] = method;
            $.validator.messages[name] = void 0 !== message ? message : $.validator.messages[name];
            if (method.length < 3) $.validator.addClassRules(name, $.validator.normalizeRule(name));
        },
        methods: {
            required: function (value, element, param) {
                if (!this.depend(param, element)) return "dependency-mismatch";
                if ("select" === element.nodeName.toLowerCase()) {
                    var val = $(element).val();
                    return val && val.length > 0;
                }
                if (this.checkable(element)) return this.getLength(value, element) > 0;
                return void 0 !== value && null !== value && value.length > 0;
            },
            email: function (value, element) {
                return this.optional(element) || /^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(value);
            },
            url: function (value, element) {
                return (
                    this.optional(element) ||
                    /^(?:(?:(?:https?|ftp):)?\/\/)(?:(?:[^\]\[?\/<~#`!@$^&*()+=}|:";',>{ ]|%[0-9A-Fa-f]{2})+(?::(?:[^\]\[?\/<~#`!@$^&*()+=}|:";',>{ ]|%[0-9A-Fa-f]{2})*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z0-9\u00a1-\uffff][a-z0-9\u00a1-\uffff_-]{0,62})?[a-z0-9\u00a1-\uffff]\.)+(?:[a-z\u00a1-\uffff]{2,}\.?))(?::\d{2,5})?(?:[/?#]\S*)?$/i.test(
                        value
                    )
                );
            },
            date: (function () {
                var called = false;
                return function (value, element) {
                    if (!called) {
                        called = true;
                        if (this.settings.debug && window.console)
                            console.warn(
                                "The `date` method is deprecated and will be removed in version '2.0.0'.\n" +
                                "Please don't use it, since it relies on the Date constructor, which\n" +
                                "behaves very differently across browsers and locales. Use `dateISO`\n" +
                                "instead or one of the locale specific methods in `localizations/`\n" +
                                "and `additional-methods.js`."
                            );
                    }
                    return this.optional(element) || !/Invalid|NaN/.test(new Date(value).toString());
                };
            })(),
            dateISO: function (value, element) {
                return this.optional(element) || /^\d{4}[\/\-](0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])$/.test(value);
            },
            number: function (value, element) {
                return this.optional(element) || /^(?:-?\d+|-?\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test(value);
            },
            digits: function (value, element) {
                return this.optional(element) || /^\d+$/.test(value);
            },
            minlength: function (value, element, param) {
                var length = Array.isArray(value) ? value.length : this.getLength(value, element);
                return this.optional(element) || length >= param;
            },
            maxlength: function (value, element, param) {
                var length = Array.isArray(value) ? value.length : this.getLength(value, element);
                return this.optional(element) || length <= param;
            },
            rangelength: function (value, element, param) {
                var length = Array.isArray(value) ? value.length : this.getLength(value, element);
                return this.optional(element) || (length >= param[0] && length <= param[1]);
            },
            min: function (value, element, param) {
                return this.optional(element) || value >= param;
            },
            max: function (value, element, param) {
                return this.optional(element) || value <= param;
            },
            range: function (value, element, param) {
                return this.optional(element) || (value >= param[0] && value <= param[1]);
            },
            step: function (value, element, param) {
                var type = $(element).attr("type"),
                    errorMessage = "Step attribute on input type " + type + " is not supported.",
                    supportedTypes = ["text", "number", "range"],
                    re = new RegExp("\\b" + type + "\\b"),
                    notSupported = type && !re.test(supportedTypes.join()),
                    decimalPlaces = function (num) {
                        var match = ("" + num).match(/(?:\.(\d+))?$/);
                        if (!match) return 0;
                        return match[1] ? match[1].length : 0;
                    },
                    toInt = function (num) {
                        return Math.round(num * Math.pow(10, decimals));
                    },
                    valid = true,
                    decimals;
                if (notSupported) throw new Error(errorMessage);
                decimals = decimalPlaces(param);
                if (decimalPlaces(value) > decimals || toInt(value) % toInt(param) !== 0) valid = false;
                return this.optional(element) || valid;
            },
            equalTo: function (value, element, param) {
                var target = $(param);
                if (this.settings.onfocusout && target.not(".validate-equalTo-blur").length)
                    target.addClass("validate-equalTo-blur").on("blur.validate-equalTo", function () {
                        $(element).valid();
                    });
                return value === target.val();
            },
            remote: function (value, element, param, method) {
                if (this.optional(element)) return "dependency-mismatch";
                method = ("string" === typeof method && method) || "remote";
                var previous = this.previousValue(element, method),
                    validator,
                    data,
                    optionDataString;
                if (!this.settings.messages[element.name]) this.settings.messages[element.name] = {};
                previous.originalMessage = previous.originalMessage || this.settings.messages[element.name][method];
                this.settings.messages[element.name][method] = previous.message;
                param = ("string" === typeof param && { url: param }) || param;
                optionDataString = $.param($.extend({ data: value }, param.data));
                if (previous.old === optionDataString) return previous.valid;
                previous.old = optionDataString;
                validator = this;
                this.startRequest(element);
                data = {};
                data[element.name] = value;
                $.ajax(
                    $.extend(
                        true,
                        {
                            mode: "abort",
                            port: this.elementAjaxPort(element),
                            dataType: "json",
                            data: data,
                            context: validator.currentForm,
                            success: function (response) {
                                var valid = true === response || "true" === response,
                                    errors,
                                    message,
                                    submitted;
                                validator.settings.messages[element.name][method] = previous.originalMessage;
                                if (valid) {
                                    submitted = validator.formSubmitted;
                                    validator.toHide = validator.errorsFor(element);
                                    validator.formSubmitted = submitted;
                                    validator.successList.push(element);
                                    validator.invalid[element.name] = false;
                                    validator.showErrors();
                                } else {
                                    errors = {};
                                    message = response || validator.defaultMessage(element, { method: method, parameters: value });
                                    errors[element.name] = previous.message = message;
                                    validator.invalid[element.name] = true;
                                    validator.showErrors(errors);
                                }
                                previous.valid = valid;
                                validator.stopRequest(element, valid);
                            },
                        },
                        param
                    )
                );
                return "pending";
            },
        },
    });
    var pendingRequests = {},
        ajax;
    if ($.ajaxPrefilter)
        $.ajaxPrefilter(function (settings, _, xhr) {
            var port = settings.port;
            if ("abort" === settings.mode) {
                $.ajaxAbort(port);
                pendingRequests[port] = xhr;
            }
        });
    else {
        ajax = $.ajax;
        $.ajax = function (settings) {
            var mode = ("mode" in settings ? settings : $.ajaxSettings).mode,
                port = ("port" in settings ? settings : $.ajaxSettings).port;
            if ("abort" === mode) {
                $.ajaxAbort(port);
                pendingRequests[port] = ajax.apply(this, arguments);
                return pendingRequests[port];
            }
            return ajax.apply(this, arguments);
        };
    }
    $.ajaxAbort = function (port) {
        if (pendingRequests[port]) {
            pendingRequests[port].abort();
            delete pendingRequests[port];
        }
    };
    return $;
});
var self = this || {};
try {
    !(function (t, n) {
        if (new t("q=%2B").get("q") !== n || new t({ q: n }).get("q") !== n || new t([["q", n]]).get("q") !== n || "q=%0A" !== new t("q=\n").toString() || "q=+%26" !== new t({ q: " &" }).toString()) throw t;
        self.URLSearchParams = t;
    })(URLSearchParams, "+");
} catch (t) {
    !(function (t, a, o) {
        "use strict";
        var u = t.create,
            h = t.defineProperty,
            n = /[!'\(\)~]|%20|%00/g,
            e = /\+/g,
            r = { "!": "%21", "'": "%27", "(": "%28", ")": "%29", "~": "%7E", "%20": "+", "%00": "\0" },
            i = {
                append: function (t, n) {
                    l(this._ungap, t, n);
                },
                delete: function (t) {
                    delete this._ungap[t];
                },
                get: function (t) {
                    return this.has(t) ? this._ungap[t][0] : null;
                },
                getAll: function (t) {
                    return this.has(t) ? this._ungap[t].slice(0) : [];
                },
                has: function (t) {
                    return t in this._ungap;
                },
                set: function (t, n) {
                    this._ungap[t] = [a(n)];
                },
                forEach: function (n, e) {
                    var r = this;
                    for (var i in r._ungap) r._ungap[i].forEach(t, i);
                    function t(t) {
                        n.call(e, t, a(i), r);
                    }
                },
                toJSON: function () {
                    return {};
                },
                toString: function () {
                    var t = [];
                    for (var n in this._ungap) for (var e = g(n), r = 0, i = this._ungap[n]; r < i.length; r++) t.push(e + "=" + g(i[r]));
                    return t.join("&");
                },
            };
        for (var s in i) h(c.prototype, s, { configurable: !0, writable: !0, value: i[s] });
        function c(t) {
            var n = u(null);
            switch ((h(this, "_ungap", { value: n }), !0)) {
                case !t:
                    break;
                case "string" == typeof t:
                    "?" === t.charAt(0) && (t = t.slice(1));
                    for (var e = t.split("&"), r = 0, i = e.length; r < i; r++) {
                        var a = (s = e[r]).indexOf("=");
                        -1 < a ? l(n, p(s.slice(0, a)), p(s.slice(a + 1))) : s.length && l(n, p(s), "");
                    }
                    break;
                case o(t):
                    for (r = 0, i = t.length; r < i; r++) {
                        var s;
                        l(n, (s = t[r])[0], s[1]);
                    }
                    break;
                case "forEach" in t:
                    t.forEach(f, n);
                    break;
                default:
                    for (var c in t) l(n, c, t[c]);
            }
        }
        function f(t, n) {
            l(this, n, t);
        }
        function l(t, n, e) {
            var r = o(e) ? e.join(",") : e;
            n in t ? t[n].push(r) : (t[n] = [r]);
        }
        function p(t) {
            return decodeURIComponent(t.replace(e, " "));
        }
        function g(t) {
            return encodeURIComponent(t).replace(n, v);
        }
        function v(t) {
            return r[t];
        }
        self.URLSearchParams = c;
    })(Object, String, Array.isArray);
}
!(function (l) {
    var r = !1;
    try {
        r = !!Symbol.iterator;
    } catch (t) {}
    function t(t, n) {
        var e = [];
        return (
            t.forEach(n, e),
                r
                    ? e[Symbol.iterator]()
                    : {
                        next: function () {
                            var t = e.shift();
                            return { done: void 0 === t, value: t };
                        },
                    }
        );
    }
    "forEach" in l ||
    (l.forEach = function (e, r) {
        var i = this,
            t = Object.create(null);
        this.toString()
            .replace(/=[\s\S]*?(?:&|$)/g, "=")
            .split("=")
            .forEach(function (n) {
                !n.length ||
                n in t ||
                (t[n] = i.getAll(n)).forEach(function (t) {
                    e.call(r, t, n, i);
                });
            });
    }),
    "keys" in l ||
    (l.keys = function () {
        return t(this, function (t, n) {
            this.push(n);
        });
    }),
    "values" in l ||
    (l.values = function () {
        return t(this, function (t, n) {
            this.push(t);
        });
    }),
    "entries" in l ||
    (l.entries = function () {
        return t(this, function (t, n) {
            this.push([n, t]);
        });
    }),
    !r || Symbol.iterator in l || (l[Symbol.iterator] = l.entries),
    "sort" in l ||
    (l.sort = function () {
        for (var t, n, e, r = this.entries(), i = r.next(), a = i.done, s = [], c = Object.create(null); !a; ) (n = (e = i.value)[0]), s.push(n), n in c || (c[n] = []), c[n].push(e[1]), (a = (i = r.next()).done);
        for (s.sort(), t = 0; t < s.length; t++) this.delete(s[t]);
        for (t = 0; t < s.length; t++) (n = s[t]), this.append(n, c[n].shift());
    }),
        (function (c) {
            var o = c.defineProperty,
                u = c.getOwnPropertyDescriptor,
                h = function (t) {
                    var n = t.append;
                    (t.append = l.append), URLSearchParams.call(t, t._usp.search.slice(1)), (t.append = n);
                },
                f = function (t, n) {
                    if (!(t instanceof n)) throw new TypeError("'searchParams' accessed on an object that does not implement interface " + n.name);
                },
                t = function (n) {
                    var e,
                        r,
                        t = n.prototype,
                        i = u(t, "searchParams"),
                        a = u(t, "href"),
                        s = u(t, "search");
                    !i &&
                    s &&
                    s.set &&
                    ((r = (function (e) {
                        function r(t, n) {
                            l.append.call(this, t, n), (t = this.toString()), e.set.call(this._usp, t ? "?" + t : "");
                        }
                        function i(t) {
                            l.delete.call(this, t), (t = this.toString()), e.set.call(this._usp, t ? "?" + t : "");
                        }
                        function a(t, n) {
                            l.set.call(this, t, n), (t = this.toString()), e.set.call(this._usp, t ? "?" + t : "");
                        }
                        return function (t, n) {
                            return (t.append = r), (t.delete = i), (t.set = a), o(t, "_usp", { configurable: !0, writable: !0, value: n });
                        };
                    })(s)),
                        (e = function (t, n) {
                            return o(t, "_searchParams", { configurable: !0, writable: !0, value: r(n, t) }), n;
                        }),
                        c.defineProperties(t, {
                            href: {
                                get: function () {
                                    return a.get.call(this);
                                },
                                set: function (t) {
                                    var n = this._searchParams;
                                    a.set.call(this, t), n && h(n);
                                },
                            },
                            search: {
                                get: function () {
                                    return s.get.call(this);
                                },
                                set: function (t) {
                                    var n = this._searchParams;
                                    s.set.call(this, t), n && h(n);
                                },
                            },
                            searchParams: {
                                get: function () {
                                    return f(this, n), this._searchParams || e(this, new URLSearchParams(this.search.slice(1)));
                                },
                                set: function (t) {
                                    f(this, n), e(this, t);
                                },
                            },
                        }));
                };
            try {
                t(HTMLAnchorElement), /^function|object$/.test(typeof URL) && URL.prototype && t(URL);
            } catch (t) {}
        })(Object);
})(self.URLSearchParams.prototype, Object);
function entriesPolyFill(obj) {
    Object.entries = function (obj) {
        var ownProps = Object.keys(obj),
            i = ownProps.length,
            resArray = new Array(i);
        while (i--) resArray[i] = [ownProps[i], obj[ownProps[i]]];
        return resArray;
    };
}
if ("function" != typeof Object.assign)
    Object.assign = function (target) {
        "use strict";
        if (null == target) throw new TypeError("Cannot convert undefined or null to object");
        target = Object(target);
        for (var index = 1; index < arguments.length; index++) {
            var source = arguments[index];
            if (null != source) for (var key in source) if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
!(function (e) {
    ("object" != typeof exports || "undefined" == typeof module) && "function" == typeof define && define.amd ? define(e) : e();
})(function () {
    "use strict";
    function e(n) {
        var t = this.constructor;
        return this.then(
            function (e) {
                return t.resolve(n()).then(function () {
                    return e;
                });
            },
            function (e) {
                return t.resolve(n()).then(function () {
                    return t.reject(e);
                });
            }
        );
    }
    var n = setTimeout;
    function a(e) {
        return e && "undefined" != typeof e.length;
    }
    function o() {}
    function i(e) {
        if (!(this instanceof i)) throw new TypeError("Promises must be constructed via new");
        if ("function" != typeof e) throw new TypeError("not a function");
        (this._state = 0), (this._handled = !1), (this._value = void 0), (this._deferreds = []), s(e, this);
    }
    function r(o, r) {
        for (; 3 === o._state; ) o = o._value;
        0 !== o._state
            ? ((o._handled = !0),
                i._immediateFn(function () {
                    var e = 1 === o._state ? r.onFulfilled : r.onRejected;
                    if (null !== e) {
                        var n;
                        try {
                            n = e(o._value);
                        } catch (t) {
                            return void u(r.promise, t);
                        }
                        f(r.promise, n);
                    } else (1 === o._state ? f : u)(r.promise, o._value);
                }))
            : o._deferreds.push(r);
    }
    function f(e, n) {
        try {
            if (n === e) throw new TypeError("A promise cannot be resolved with itself.");
            if (n && ("object" == typeof n || "function" == typeof n)) {
                var t = n.then;
                if (n instanceof i) return (e._state = 3), (e._value = n), void c(e);
                if ("function" == typeof t)
                    return void s(
                        (function o(e, n) {
                            return function () {
                                e.apply(n, arguments);
                            };
                        })(t, n),
                        e
                    );
            }
            (e._state = 1), (e._value = n), c(e);
        } catch (r) {
            u(e, r);
        }
    }
    function u(e, n) {
        (e._state = 2), (e._value = n), c(e);
    }
    function c(e) {
        2 === e._state &&
        0 === e._deferreds.length &&
        i._immediateFn(function () {
            e._handled || i._unhandledRejectionFn(e._value);
        });
        for (var n = 0, t = e._deferreds.length; n < t; n++) r(e, e._deferreds[n]);
        e._deferreds = null;
    }
    function l(e, n, t) {
        (this.onFulfilled = "function" == typeof e ? e : null), (this.onRejected = "function" == typeof n ? n : null), (this.promise = t);
    }
    function s(e, n) {
        var t = !1;
        try {
            e(
                function (e) {
                    t || ((t = !0), f(n, e));
                },
                function (e) {
                    t || ((t = !0), u(n, e));
                }
            );
        } catch (o) {
            if (t) return;
            (t = !0), u(n, o);
        }
    }
    (i.prototype["catch"] = function (e) {
        return this.then(null, e);
    }),
        (i.prototype.then = function (e, n) {
            var t = new this.constructor(o);
            return r(this, new l(e, n, t)), t;
        }),
        (i.prototype["finally"] = e),
        (i.all = function (n) {
            return new i(function (r, i) {
                if (!a(n)) return i(new TypeError("Promise.all accepts an array"));
                var f = Array.prototype.slice.call(n);
                if (0 === f.length) return r([]);
                var u = f.length;
                function c(n, e) {
                    try {
                        if (e && ("object" == typeof e || "function" == typeof e)) {
                            var t = e.then;
                            if ("function" == typeof t)
                                return void t.call(
                                    e,
                                    function (e) {
                                        c(n, e);
                                    },
                                    i
                                );
                        }
                        (f[n] = e), 0 == --u && r(f);
                    } catch (o) {
                        i(o);
                    }
                }
                for (var e = 0; e < f.length; e++) c(e, f[e]);
            });
        }),
        (i.resolve = function (n) {
            return n && "object" == typeof n && n.constructor === i
                ? n
                : new i(function (e) {
                    e(n);
                });
        }),
        (i.reject = function (t) {
            return new i(function (e, n) {
                n(t);
            });
        }),
        (i.race = function (r) {
            return new i(function (e, n) {
                if (!a(r)) return n(new TypeError("Promise.race accepts an array"));
                for (var t = 0, o = r.length; t < o; t++) i.resolve(r[t]).then(e, n);
            });
        }),
        (i._immediateFn =
            "function" == typeof setImmediate
                ? function (e) {
                    setImmediate(e);
                }
                : function (e) {
                    n(e, 0);
                }),
        (i._unhandledRejectionFn = function (e) {
            void 0 !== console && console && console.warn("Possible Unhandled Promise Rejection:", e);
        });
    var t = (function () {
        if ("undefined" != typeof self) return self;
        if ("undefined" != typeof window) return window;
        if ("undefined" != typeof global) return global;
        throw Error("unable to locate global object");
    })();
    "function" != typeof t.Promise ? (t.Promise = i) : t.Promise.prototype["finally"] || (t.Promise.prototype["finally"] = e);
});
(function () {
    var SELECTOR, addEventListener, clickEvents, numberRegExp, sortable, touchDevice, trimRegExp;
    SELECTOR = "table[data-sortable]";
    numberRegExp = /^-?[Â£$Â¤]?[\d,.]+%?$/;
    trimRegExp = /^\s+|\s+$/g;
    clickEvents = ["click"];
    touchDevice = "ontouchstart" in document.documentElement;
    if (touchDevice) clickEvents.push("touchstart");
    addEventListener = function (el, event, handler) {
        if (null != el.addEventListener) return el.addEventListener(event, handler, false);
        else return el.attachEvent("on" + event, handler);
    };
    sortable = {
        init: function (options) {
            var table, tables, _i, _len, _results;
            if (null == options) options = {};
            if (null == options.selector) options.selector = SELECTOR;
            tables = document.querySelectorAll(options.selector);
            _results = [];
            for (_i = 0, _len = tables.length; _i < _len; _i++) {
                table = tables[_i];
                _results.push(sortable.initTable(table));
            }
            return _results;
        },
        initTable: function (table) {
            var i, th, ths, _i, _len, _ref;
            if (1 !== (null != (_ref = table.tHead) ? _ref.rows.length : void 0)) return;
            if ("true" === table.getAttribute("data-sortable-initialized")) return;
            table.setAttribute("data-sortable-initialized", "true");
            ths = table.querySelectorAll("th button");
            for (i = _i = 0, _len = ths.length; _i < _len; i = ++_i) {
                th = ths[i];
                if ("false" !== th.getAttribute("data-sortable")) sortable.setupClickableTH(table, th, i);
            }
            return table;
        },
        setupClickableTH: function (table, th, i) {
            var eventName, onClick, type, _i, _len, _results;
            type = sortable.getColumnType(table, i);
            onClick = function (e) {
                var compare, item, newSortedDirection, position, row, rowArray, sorted, sortedDirection, tBody, ths, value, _compare, _i, _j, _k, _l, _len, _len1, _len2, _len3, _len4, _m, _ref, _ref1;
                if (true !== e.handled) e.handled = true;
                else return false;
                sorted = "true" === this.getAttribute("data-sorted");
                sortedDirection = this.getAttribute("data-sorted-direction");
                if (sorted) newSortedDirection = "ascending" === sortedDirection ? "descending" : "ascending";
                else newSortedDirection = type.defaultSortDirection;
                ths = this.parentNode.querySelectorAll("th button");
                for (_i = 0, _len = ths.length; _i < _len; _i++) {
                    th = ths[_i];
                    th.setAttribute("data-sorted", "false");
                    th.removeAttribute("data-sorted-direction");
                }
                this.setAttribute("data-sorted", "true");
                this.setAttribute("data-sorted-direction", newSortedDirection);
                this.parentNode.setAttribute("aria-sort", newSortedDirection);
                tBody = table.tBodies[0];
                rowArray = [];
                if (!sorted) {
                    if (null != type.compare) _compare = type.compare;
                    else
                        _compare = function (a, b) {
                            return b - a;
                        };
                    compare = function (a, b) {
                        if (a[0] === b[0]) return a[2] - b[2];
                        if (type.reverse) return _compare(b[0], a[0]);
                        else return _compare(a[0], b[0]);
                    };
                    _ref = tBody.rows;
                    for (position = _j = 0, _len1 = _ref.length; _j < _len1; position = ++_j) {
                        row = _ref[position];
                        value = sortable.getNodeValue(row.cells[i]);
                        if (null != type.comparator) value = type.comparator(value);
                        rowArray.push([value, row, position]);
                    }
                    rowArray.sort(compare);
                    for (_k = 0, _len2 = rowArray.length; _k < _len2; _k++) {
                        row = rowArray[_k];
                        tBody.appendChild(row[1]);
                    }
                } else {
                    _ref1 = tBody.rows;
                    for (_l = 0, _len3 = _ref1.length; _l < _len3; _l++) {
                        item = _ref1[_l];
                        rowArray.push(item);
                    }
                    rowArray.reverse();
                    for (_m = 0, _len4 = rowArray.length; _m < _len4; _m++) {
                        row = rowArray[_m];
                        tBody.appendChild(row);
                    }
                }
                if ("function" === typeof window["CustomEvent"]) return "function" === typeof table.dispatchEvent ? table.dispatchEvent(new CustomEvent("Sortable.sorted", { bubbles: true })) : void 0;
            };
            _results = [];
            for (_i = 0, _len = clickEvents.length; _i < _len; _i++) {
                eventName = clickEvents[_i];
                _results.push(addEventListener(th, eventName, onClick));
            }
            return _results;
        },
        getColumnType: function (table, i) {
            var row, specified, text, type, _i, _j, _len, _len1, _ref, _ref1, _ref2;
            specified = null != (_ref = table.querySelectorAll("th button")[i]) ? _ref.getAttribute("data-sortable-type") : void 0;
            if (null != specified) return sortable.typesObject[specified];
            _ref1 = table.tBodies[0].rows;
            for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
                row = _ref1[_i];
                text = sortable.getNodeValue(row.cells[i]);
                _ref2 = sortable.types;
                for (_j = 0, _len1 = _ref2.length; _j < _len1; _j++) {
                    type = _ref2[_j];
                    if (type.match(text)) return type;
                }
            }
            return sortable.typesObject.alpha;
        },
        getNodeValue: function (node) {
            var dataValue;
            if (!node) return "";
            dataValue = node.getAttribute("data-value");
            if (null !== dataValue) return dataValue;
            if ("undefined" !== typeof node.innerHTML) return node.innerHTML.replace(/<h4 class="hybrid-table__column">[a-zA-z0-9]*?<\/h4>/g, "").replace(trimRegExp, "");
            return node.textContent.replace(trimRegExp, "");
        },
        setupTypes: function (types) {
            var type, _i, _len, _results;
            sortable.types = types;
            sortable.typesObject = {};
            _results = [];
            for (_i = 0, _len = types.length; _i < _len; _i++) {
                type = types[_i];
                _results.push((sortable.typesObject[type.name] = type));
            }
            return _results;
        },
    };
    sortable.setupTypes([
        {
            name: "numeric",
            defaultSortDirection: "descending",
            match: function (a) {
                return a.match(numberRegExp);
            },
            comparator: function (a) {
                return parseFloat(a.replace(/[^0-9.-]/g, ""), 10) || 0;
            },
        },
        {
            name: "date",
            defaultSortDirection: "ascending",
            reverse: true,
            match: function (a) {
                return !isNaN(Date.parse(a));
            },
            comparator: function (a) {
                return Date.parse(a) || 0;
            },
        },
        {
            name: "alpha",
            defaultSortDirection: "ascending",
            match: function () {
                return true;
            },
            compare: function (a, b) {
                return a.localeCompare(b);
            },
        },
    ]);
    setTimeout(sortable.init, 0);
    if ("function" === typeof define && define.amd)
        define(function () {
            return sortable;
        });
    else if ("undefined" !== typeof exports) module.exports = sortable;
    else window.Sortable = sortable;
}.call(this));
TextResizeDetector = (function () {
    var el = null;
    var iIntervalDelay = 200;
    var iInterval = null;
    var iCurrSize = -1;
    var iBase = -1;
    var aListeners = [];
    var createControlElement = function () {
        el = document.createElement("span");
        el.id = "textResizeControl";
        el.innerHTML = "&nbsp;";
        el.style.position = "absolute";
        el.style.left = "-9999px";
        var elC = document.getElementById(TextResizeDetector.TARGET_ELEMENT_ID);
        if (elC) elC.insertBefore(el, elC.firstChild);
        iBase = iCurrSize = TextResizeDetector.getSize();
        test = TextResizeDetector.detect();
    };
    function _stopDetector() {
        window.clearInterval(iInterval);
        iInterval = null;
    }
    function _startDetector() {
        if (!iInterval)
            iInterval = window.setInterval(function () {
                TextResizeDetector.detect();
            }, iIntervalDelay);
    }
    function _detect() {
        var iNewSize = TextResizeDetector.getSize();
        if (iNewSize !== iCurrSize)
            for (var i = 0; i < aListeners.length; i++) {
                aListnr = aListeners[i];
                var oArgs = { iBase: iBase, iDelta: -1 != iCurrSize ? iNewSize - iCurrSize + "px" : "0px", iSize: (iCurrSize = iNewSize) };
                if (!aListnr.obj) aListnr.fn("textSizeChanged", [oArgs]);
                else aListnr.fn.apply(aListnr.obj, ["textSizeChanged", [oArgs]]);
            }
        return iCurrSize;
    }
    var onAvailable = function () {
        if (!TextResizeDetector.onAvailableCount_i) TextResizeDetector.onAvailableCount_i = 0;
        if (document.getElementById(TextResizeDetector.TARGET_ELEMENT_ID)) {
            TextResizeDetector.init();
            if (TextResizeDetector.USER_INIT_FUNC) TextResizeDetector.USER_INIT_FUNC();
            TextResizeDetector.onAvailableCount_i = null;
        } else if (TextResizeDetector.onAvailableCount_i < 600) {
            TextResizeDetector.onAvailableCount_i++;
            setTimeout(onAvailable, 200);
        }
    };
    setTimeout(onAvailable, 500);
    return {
        init: function () {
            createControlElement();
            _startDetector();
        },
        addEventListener: function (fn, obj, bScope) {
            aListeners[aListeners.length] = { fn: fn, obj: obj };
            return iBase;
        },
        detect: function () {
            return _detect();
        },
        getSize: function () {
            var iSize;
            return el.offsetHeight;
        },
        stopDetector: function () {
            return _stopDetector();
        },
        startDetector: function () {
            return _startDetector();
        },
    };
})();
TextResizeDetector.TARGET_ELEMENT_ID = "doc";
TextResizeDetector.USER_INIT_FUNC = null;
function throttle(func, wait, leading, trailing, context) {
    var ctx, args, result;
    var timeout = null;
    var previous = 0;
    var later = function () {
        previous = new Date();
        timeout = null;
        result = func.apply(ctx, args);
    };
    return function () {
        var now = new Date();
        if (!previous && !leading) previous = now;
        var remaining = wait - (now - previous);
        ctx = context || this;
        args = arguments;
        if (remaining <= 0) {
            clearTimeout(timeout);
            timeout = null;
            previous = now;
            result = func.apply(ctx, args);
        } else if (!timeout && trailing) timeout = setTimeout(later, remaining);
        return result;
    };
}
!(function (t, e, i) {
    "use strict";
    var c;
    (c = function () {
        var t;
        this.init = function (i) {
            e((t = i)), c(t);
        };
        var e = function (t) {
                "checkbox" === t.getAttribute("type") ? t.setAttribute("role", "switch") : console.error(t.id + " is not a checkbox...");
            },
            i = function (t) {
                switch (t.keyCode || t.which) {
                    case 13:
                        t.preventDefault(), t.target.click();
                }
            },
            c = function (t) {
                t.addEventListener("keypress", i, !1);
            };
        return this;
    }),
        (t.A11YswitchCheck = c);
})(window, document);
function toggleVisibility(toggler, toggled, submitBtn) {
    toggler.off("click").on("click", function () {
        if (toggler.attr("aria-expanded", "false")) {
            toggler.attr("aria-expanded", "true");
            toggled.show();
            if (submitBtn.length) submitBtn.show();
        } else {
            toggler.attr("aria-expanded", "false");
            toggled.hide();
            if (submitBtn.length && !toggler.parents("form").find('input[type="checkbox"]:checked').length) submitBtn.hide();
        }
    });
}
function uuidv4() {
    return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function (c) {
        var r = (16 * Math.random()) | 0,
            v = "x" == c ? r : (3 & r) | 8;
        return v.toString(16);
    });
}
function call(url, type, data) {
    var requestInit = { url: url, type: type, Accept: "application/json, text/html", crossDomain: true, dataType: "json", cache: false, xhrFields: { withCredentials: true } };
    if ("POST" === type) requestInit = Object.assign(requestInit, { data: data, contentType: "application/json" });
    return $.ajax(requestInit).then(
        (response, textStatus, jqXHR) => {
            if (void 0 !== jqXHR && void 0 !== jqXHR.responseText && jqXHR.responseText.indexOf("<!DOCTYPE html>") > -1 && jqXHR.responseText.indexOf("cas-external") > -1) window.location.href = SERVICE_URL.url;
            else return jqXHR;
        },
        (jqXHR, textStatus, response) => {
            if (void 0 !== jqXHR && void 0 !== jqXHR.responseText && jqXHR.responseText.indexOf("<!DOCTYPE html>") > -1 && jqXHR.responseText.indexOf("cas-external") > -1) window.location.href = SERVICE_URL.url;
            else return jqXHR;
        }
    );
}
function callPDF(url, type, data) {
    requestInit = {
        url: url,
        type: type,
        Accept: "application/pdf, text/html",
        crossDomain: true,
        cache: false,
        xhrFields: { withCredentials: true, responseType: "blob" },
        headers: { "requestor-id": "myaccount-ui", "root-correlation-id": "r" + uuidv4(), "correlation-id": "c" + uuidv4(), Accept: "application/pdf" },
    };
    if ("POST" === type) requestInit = Object.assign(requestInit, { data: data, contentType: false, processData: false, enctype: "multipart/form-data" });
    return $.ajax(requestInit).then(
        (response, textStatus, jqXHR) => {
            if (void 0 !== jqXHR && void 0 !== jqXHR.responseText && jqXHR.responseText.indexOf("<!DOCTYPE html>") > -1 && jqXHR.responseText.indexOf("cas-external") > -1) window.location.href = SERVICE_URL.url;
            else return jqXHR;
        },
        (jqXHR, textStatus, response) => {
            if (void 0 !== jqXHR && void 0 !== jqXHR.responseText && jqXHR.responseText.indexOf("<!DOCTYPE html>") > -1 && jqXHR.responseText.indexOf("cas-external") > -1) window.location.href = SERVICE_URL.url;
            else return jqXHR;
        }
    );
}
function callFormData(url, type, data) {
    requestInit = { url: url, type: type, Accept: "application/json", crossDomain: true, cache: false, xhrFields: { withCredentials: true } };
    if ("POST" === type) requestInit = Object.assign(requestInit, { data: data, contentType: false, processData: false, enctype: "multipart/form-data" });
    return $.ajax(requestInit);
}
function callOctetStream(url, type) {
    const requestInit = { url: url, type: type, Accept: "application/octet-stream", crossDomain: true, cache: false, xhrFields: { withCredentials: true, responseType: "blob" } };
    return $.ajax(requestInit).then((response) => response);
}
function getCustomerInfo() {
    return call(APP_URL.url + "application/status", "GET");
}
function getSubscriptionsList() {
    return call(APP_URL.url + "subscription/list", "GET");
}
function getRecurring(subID) {
    return call(APP_URL.url + "subscription/mobile/" + subID + "/recurring", "GET");
}
function getFixRecurring(subID) {
    return call(APP_URL.url + "subscription/fix/" + subID + "/recurring", "GET");
}
function getCostControl(subID, lang) {
    return call(APP_URL.urlV2 + "subscription/mobile/" + subID + "/costcontrol/" + lang, "GET");
}
function getCounters(subID, lang) {
    return call(APP_URL.url + "subscription/mobile/" + subID + "/counters/" + lang, "GET");
}
function postUpsell(payload) {
    return call(APP_URL.url + "subscription/mobile/activateUpsell", "POST", payload);
}
function getPastUpsells(subID) {
    return call(APP_URL.url + "subscription/mobile/" + subID + "/pastUpsells", "GET");
}
function getSubscriptionsUsages(subID, lang) {
    return call(APP_URL.url + "subscription/mobile/" + subID + "/usages/" + lang, "GET");
}
function getBillingList() {
    return call(APP_URL.url + "billing/list", "GET");
}
function getBalancePostPaid(billingAccountID) {
    return call(APP_URL.url + "billing/mobile/" + billingAccountID + "/balance", "GET");
}
function getAccountSummary(billingAccountID) {
    return call(APP_URL.url + "billing/" + billingAccountID + "/accountSummary", "GET");
}
function getInvoiceDocument(billingAccountID, invoiceNumber) {
    return callPDF(APP_URL.url + "billing/" + billingAccountID + "/invoice/" + invoiceNumber, "GET");
}
function getAccountMobile(billingAccountID) {
    return call(APP_URL.url + "billing/mobile/" + billingAccountID + "/account", "GET");
}
function getQrCode(billingAccountID, domain) {
    return callOctetStream(APP_URL.url + "billing/" + domain + "/generate/qrcode/" + billingAccountID, "GET");
}
function getMobilePaymentPlan(billingAccountID) {
    return call(APP_URL.url + "billing/mobile/" + billingAccountID + "/paymentPlan", "GET");
}
function getMobilePaymentPlanEligibility(billingAccountID) {
    return call(APP_URL.url + "billing/mobile/" + billingAccountID + "/paymentPlan/eligibility", "GET");
}
function postMobilePaymentPlan(billingAccountID, payload) {
    return call(APP_URL.url + "billing/mobile/" + billingAccountID + "/paymentPlan", "POST", payload);
}
function postPasswordStrength(payload) {
    return call(APP_URL.url + "credential/strength", "POST", payload);
}
function postNewPassword(payload) {
    return call(APP_URL.url + "credential/password", "POST", payload);
}
function postNewIdentifier(payload) {
    return call(APP_URL.url + "credential/identifier", "POST", payload);
}
function postNewCommonName(payload) {
    return call(APP_URL.url + "credential/commonName", "POST", payload);
}
function startMobilePayment(billingAccountID, payload) {
    return call(APP_URL.url + "billing/mobile/" + billingAccountID + "/balancePayment/start", "POST", payload);
}
function postMobilePaymentMeans(billingAccountID, payload) {
    return call(APP_URL.url + "billing/mobile/" + billingAccountID + "/onlinePaymentMeans/start", "POST", payload);
}
function postMobileInvoicingMethods(billingAccountID, payload) {
    return call(APP_URL.url + "billing/mobile/" + billingAccountID + "/invoicingMethods", "POST", payload);
}
function postMobileDDSubscription(billingAccountID, payerID, payload) {
    return call(APP_URL.url + "billing/mobile/" + billingAccountID + "/directDebitSubscribe/" + payerID + "/start", "POST", payload);
}
function postStartMobilePaymentDatatrans(billingAccountID, customerID, payload) {
    return call(APP_URL.url + "billing/mobile/" + billingAccountID + "/balance/payment/" + customerID + "/start", "POST", payload);
}
function postEndMobilePaymentDatatrans(billingAccountID, payload) {
    return call(APP_URL.url + "billing/mobile/" + billingAccountID + "/balance/payment/end", "POST", payload);
}
function postMobilePaymentExecute(billingAccountID, customerID, payload) {
    return call(APP_URL.url + "billing/mobile/" + billingAccountID + "/balance/payment/" + customerID + "/execute", "POST", payload);
}
function getMobileStoredPaymentMethods(customerID) {
    return call(APP_URL.url + "customer/mobile/" + customerID + "/storedPaymentMethod", "GET");
}
function getMobileStoredPaymentMethodStatus(customerID, transactionId) {
    return call(APP_URL.url + "customer/mobile/" + customerID + "/storedPaymentMethod/" + transactionId + "/status", "GET");
}
function postAddPaymentMethodMobile(customerID, payload) {
    return call(APP_URL.url + "customer/mobile/" + customerID + "/storedPaymentMethod/add", "POST", payload);
}
function removePaymentMethodMobile(customerID, payload) {
    return call(APP_URL.url + "customer/mobile/" + customerID + "/storedPaymentMethod/remove", "POST", payload);
}
function getMobileSubPrivilege(subID) {
    return call(APP_URL.url + "subscription/mobile/" + subID + "/privilege", "GET");
}
function postMobileSubscribeAutomaticPurchase(billingAccountID, payerID, payload) {
    return call(APP_URL.url + "billing/mobile/" + billingAccountID + "/automaticPurchaseService/" + payerID + "/subscribe", "POST", payload);
}
function postMobileSubscribeUpdatePurchase(billingAccountID, payerID, payload) {
    return call(APP_URL.url + "billing/mobile/" + billingAccountID + "/automaticPurchaseService/" + payerID + "/update", "POST", payload);
}
function postStartFixPaymentDatatrans(billingAccountID, customerID, payload) {
    return call(APP_URL.url + "billing/fix/" + billingAccountID + "/balance/payment/" + customerID + "/start", "POST", payload);
}
function postFixPaymentExecute(billingAccountID, customerID, payload) {
    return call(APP_URL.url + "billing/fix/" + billingAccountID + "/balance/payment/" + customerID + "/execute", "POST", payload);
}
function postEndFixPaymentDatatrans(billingAccountID, payload) {
    return call(APP_URL.url + "billing/fix/" + billingAccountID + "/balance/payment/end", "POST", payload);
}
function getFixStoredPaymentMethods(customerID) {
    return call(APP_URL.url + "customer/fix/" + customerID + "/storedPaymentMethod", "GET");
}
function postAddPaymentMethodFix(customerID, payload) {
    return call(APP_URL.url + "customer/fix/" + customerID + "/storedPaymentMethod/add", "POST", payload);
}
function removePaymentMethodFix(customerID, payload) {
    return call(APP_URL.url + "customer/fix/" + customerID + "/storedPaymentMethod/remove", "POST", payload);
}
function getFixStoredPaymentMethodStatus(customerID, transactionId) {
    return call(APP_URL.url + "customer/fix/" + customerID + "/storedPaymentMethod/" + transactionId + "/status", "GET");
}
function getFixSubPrivilege(subID) {
    return call(APP_URL.url + "subscription/fix/" + subID + "/privilege", "GET");
}
function getFixOptions(customerID) {
    return call(APP_URL.url + "subscription/fix/" + customerID + "/packages", "GET");
}
function postFixOptions(customerID, payload) {
    return call(APP_URL.url + "subscription/fix/" + customerID + "/packages/add", "POST", payload);
}
function removeFixOptions(customerID, payload) {
    return call(APP_URL.url + "subscription/fix/" + customerID + "/packages/remove", "POST", payload);
}
function getMobileOptions(subID) {
    return call(APP_URL.url + "subscription/mobile/" + subID + "/packages", "GET");
}
function postMobileOptions(subID, payload) {
    return call(APP_URL.url + "subscription/mobile/" + subID + "/package/add", "POST", payload);
}
function removeMobileOptions(subID, payload) {
    return call(APP_URL.url + "subscription/mobile/" + subID + "/package/remove", "POST", payload);
}
function postZattoo(subID, payload) {
    return call(APP_URL.url + "subscription/mobile/" + subID + "/zattoo", "POST", payload);
}
function getRoamingCostInfo(subID) {
    return call(APP_URL.url + "subscription/mobile/" + subID + "/control/limits", "GET");
}
function postNewRoamingCost(subID, payload) {
    return call(APP_URL.url + "subscription/mobile/" + subID + "/control/limits", "POST", payload);
}
function getSimInfo(subID) {
    return call(APP_URL.url + "subscription/mobile/" + subID + "/sim", "GET");
}
function postSuspendSim(subID, payload) {
    return call(APP_URL.url + "subscription/mobile/" + subID + "/suspend", "POST", payload);
}
function postSwapSim(subID, payload) {
    return call(APP_URL.url + "subscription/mobile/" + subID + "/swapSim", "POST", payload);
}
function postSimCardDelivery(subID, payload) {
    return call(APP_URL.url + "subscription/mobile/" + subID + "/requestSimCardDelivery", "POST", payload);
}
function getSimCardOrderStatus(subID) {
    return call(APP_URL.url + "subscription/mobile/" + subID + "/simCardOrderStatus", "GET");
}
function getBalancePrepaid(subID) {
    return call(APP_URL.url + "subscription/mobile/" + subID + "/prepay/balance", "GET");
}
function getEventHistoryPrepaid(subID) {
    return call(APP_URL.url + "subscription/mobile/" + subID + "/prepay/events", "GET");
}
function refillVoucher(payload) {
    return call(APP_URL.url + "subscription/mobile/refill/voucher", "POST", payload);
}
function refillCC(subID, payload) {
    return call(APP_URL.url + "subscription/mobile/refill/amount/" + subID + "/start", "POST", payload);
}
function postStartRefillDatatrans(subID, customerID, payload) {
    return call(APP_URL.url + "subscription/mobile/" + subID + "/refill/amount/" + customerID + "/start", "POST", payload);
}
function postRefillExecute(subID, customerID, payload) {
    return call(APP_URL.url + "subscription/mobile/" + subID + "/refill/amount/" + customerID + "/execute", "POST", payload);
}
function postEndRefillDatatrans(subID, payload) {
    return call(APP_URL.url + "subscription/mobile/" + subID + "/refill/amount/end", "POST", payload);
}
function getPrivilege(subID) {
    return call(APP_URL.url + "subscription/mobile/" + subID + "/privilege", "GET");
}
function getCustomerList() {
    return call(APP_URL.url + "customer/list", "GET");
}
function getCustomerSkyAccount(customerID) {
    return call(APP_URL.url + "customer/" + customerID + "/skyAccount", "GET");
}
function unlinkCustomerSkyAccount(customerID) {
    return call(APP_URL.url + "customer/" + customerID + "/skyAccount", "DELETE");
}
function linkCustomerSkyAccount(customerID, payload) {
    return call(APP_URL.url + "customer/" + customerID + "/skyAccount/startLink", "POST", payload);
}
function confirmLinkCustomerSkyAccount(customerID, payload) {
    return call(APP_URL.url + "customer/" + customerID + "/skyAccount/completeStartLink", "POST", payload);
}
function postCustomerGender(customerID, payload) {
    return call(APP_URL.url + "customer/mobile/" + customerID + "/gender", "POST", payload);
}
function postCustomerLang(customerID, payload) {
    return call(APP_URL.url + "customer/mobile/" + customerID + "/language", "POST", payload);
}
function postCustomerEmail(customerID, payload) {
    return call(APP_URL.url + "customer/mobile/" + customerID + "/email", "POST", payload);
}
function postCustomerAddress(customerID, payload) {
    return call(APP_URL.url + "customer/mobile/" + customerID + "/address", "POST", payload);
}
function postUnlinkCustomer(payload) {
    return call(APP_URL.url + "credential/unlinkCustomer", "POST", payload);
}
function postLinkFixByContract(payload) {
    return call(APP_URL.url + "credential/linkCustomer/fix/byContract", "POST", payload);
}
function postLinkFixByOTO(payload) {
    return call(APP_URL.url + "credential/linkCustomer/fix/byOtoId", "POST", payload);
}
function postLinkMobileByContract(payload) {
    return call(APP_URL.url + "credential/linkCustomer/mobile/byContract", "POST", payload);
}
function postLinkMobileByMsisdn(payload) {
    return call(APP_URL.url + "credential/linkCustomer/mobile/byMsisdn", "POST", payload);
}
function postLinkByBillingAccount(payload) {
    return call(APP_URL.url + "credential/linkCustomer/byBillingAccount", "POST", payload);
}
function getIsMfaConfigured() {
    return call(APP_URL.url + "credential/mfa/isConfigured", "GET");
}
function postUpdateMfaStart(payload) {
    return call(APP_URL.url + "credential/mfa/update/start", "POST", payload);
}
function postUpdateMfaEnd(payload) {
    return call(APP_URL.url + "credential/mfa/update/end", "POST", payload);
}
function getCredentialInfo() {
    return call(APP_URL.url + "credential/getByIdentifier", "GET");
}
function postDeleteCustomer() {
    return call(APP_URL.url + "credential/delete", "POST");
}
function getMobileOrders(customerID) {
    return call(APP_URL.url + "customer/mobile/" + customerID + "/orders", "GET");
}
function getMobileOrderContract(customerID, confirmationCode) {
    return callPDF(APP_URL.url + "customer/mobile/" + customerID + "/order/" + confirmationCode + "/contract", "GET");
}
function postCustomerMobileConsent(customerID, payload) {
    return call(APP_URL.url + "customer/mobile/" + customerID + "/consents", "POST", payload);
}
function getCustomerMobileConsent(customerID) {
    return call(APP_URL.url + "customer/mobile/" + customerID + "/consents", "GET");
}
function postACS(payload) {
    return call(APP_URL.url + "address/address", "POST", payload);
}
function getZipcode(zipcode) {
    return call(APP_URL.url + "address/cities?zipCode=" + zipcode, "GET");
}
function getCity(zipcode, town) {
    return call(APP_URL.url + "address/cities?zipCode=" + zipcode + "&town=" + town, "GET");
}
function getStreet(zipcode, town, street) {
    return call(APP_URL.url + "address/streets?zipCode=" + zipcode + "&town=" + town + "&streetName=" + street, "GET");
}
function getHouseNb(zipcode, town, street, houseNb) {
    return call(APP_URL.url + "address/addresses?zipCode=" + zipcode + "&town=" + town + "&streetName=" + street + "&houseNumber=" + houseNb, "GET");
}
function getFixBalance(billingAccountID) {
    return call(APP_URL.url + "billing/fix/" + billingAccountID + "/balance", "GET");
}
function getAccountFix(billingAccountID) {
    return call(APP_URL.url + "billing/fix/" + billingAccountID + "/account", "GET");
}
function getOngoingStatus(customerID) {
    return call(APP_URL.url + "subscription/fix/" + customerID + "/ongoing", "GET");
}
function getCustomerDetail(customerID) {
    return call(APP_URL.url + "subscription/fix/" + customerID + "/details", "GET");
}
function postFixPaymentMeans(billingAccountID, payload) {
    return call(APP_URL.url + "billing/fix/" + billingAccountID + "/onlinePaymentMeans/start", "POST", payload);
}
function startFixPayment(billingAccountID, payload) {
    return call(APP_URL.url + "billing/fix/" + billingAccountID + "/balancePayment/start", "POST", payload);
}
function getVoipFeatures(customerID, voipNumber) {
    return call(APP_URL.url + "subscription/fix/" + customerID + "/voip/" + voipNumber + "/features", "GET");
}
function postEnableVoipFeatures(customerID, payload) {
    return call(APP_URL.url + "subscription/fix/" + customerID + "/voip/enable", "POST", payload);
}
function postDisableVoipFeatures(customerID, payload) {
    return call(APP_URL.url + "subscription/fix/" + customerID + "/voip/disable", "POST", payload);
}
function postSipPwd(customerID, payload) {
    return call(APP_URL.url + "subscription/fix/" + customerID + "/changeSipPassword", "POST", payload);
}
function postFixInvoicingMethod(billingAccountId, payload) {
    return call(APP_URL.url + "billing/fix/" + billingAccountId + "/invoicingMethods", "POST", payload);
}
function getFixAccessories() {
    return call(APP_URL.url + "subscription/fix/accessories", "GET");
}
function postFixAccessories(customerID, payload) {
    return call(APP_URL.url + "subscription/fix/" + customerID + "/accessories", "POST", payload);
}
function postCustomerFixLang(customerID, payload) {
    return call(APP_URL.url + "customer/fix/" + customerID + "/language", "POST", payload);
}
function postCustomerFixEmail(customerID, payload) {
    return call(APP_URL.url + "customer/fix/" + customerID + "/email", "POST", payload);
}
function postCustomerFixConsent(customerID, payload) {
    return call(APP_URL.url + "customer/fix/" + customerID + "/consents", "POST", payload);
}
function getCustomerFixConsent(customerID) {
    return call(APP_URL.url + "customer/fix/" + customerID + "/consents", "GET");
}
function postMobileDiscount(customerID, payload) {
    return call(APP_URL.url + "subscription/fix/" + customerID + "/mobileDiscount/start", "POST", payload);
}
function postHOTPMobileDiscount(customerID, payload) {
    return call(APP_URL.url + "subscription/fix/" + customerID + "/mobileDiscount/end", "POST", payload);
}
function postResendHOTP(customerID, payload) {
    return call(APP_URL.url + "subscription/fix/" + customerID + "/mobileDiscount/challenge", "POST", payload);
}
function postCancelMobileDiscount(customerID, payload) {
    return call(APP_URL.url + "subscription/fix/" + customerID + "/mobileDiscount/cancel", "POST", payload);
}
function deleteMobileDiscount(customerID) {
    return call(APP_URL.url + "subscription/fix/" + customerID + "/mobileDiscount", "DELETE");
}
function getMobileDiscount(customerID) {
    return call(APP_URL.url + "subscription/fix/" + customerID + "/mobileDiscount", "GET");
}
function postOTOID(customerID, payload) {
    return call(APP_URL.url + "subscription/fix/" + customerID + "/otoid", "POST", payload);
}
function getTvLogin(customerID) {
    return call(APP_URL.url + "subscription/fix/" + customerID + "/tv/login", "GET");
}
function postTVLogin(customerID, payload) {
    return call(APP_URL.url + "subscription/fix/" + customerID + "/tv/login", "POST", payload);
}
function postTVPwd(customerID, payload) {
    return call(APP_URL.url + "subscription/fix/" + customerID + "/tv/password", "POST", payload);
}
function postTVPinPurchase(customerID, payload) {
    return call(APP_URL.url + "subscription/fix/" + customerID + "/tv/pin", "POST", payload);
}
function postTVActivatePinPurchase(customerID, payload) {
    return call(APP_URL.url + "subscription/fix/" + customerID + "/tv/purchaseRequestControl", "POST", payload);
}
function postTVPinYouth(customerID, payload) {
    return call(APP_URL.url + "subscription/fix/" + customerID + "/tv/youthPin", "POST", payload);
}
function postTVYouthProtection(customerID, payload) {
    return call(APP_URL.url + "subscription/fix/" + customerID + "/tv/youthPermission", "POST", payload);
}
function getPortinStatus(id, domain) {
    return call(APP_URL.url + "subscription/" + domain + "/" + id + "/portin", "GET");
}
function postRegisterPortin(id, domain, payload) {
    return call(APP_URL.url + "subscription/" + domain + "/" + id + "/portin/register", "POST", payload);
}
function getPortinDocument(id, domain, portinID) {
    return callPDF(APP_URL.url + "subscription/" + domain + "/" + id + "/portin/" + portinID + "/download", "GET");
}
function sendPortin(id, domain, portinID, payload) {
    return callFormData(APP_URL.url + "subscription/" + domain + "/" + id + "/portin/" + portinID + "/upload", "POST", payload);
}
function postOffers(payload) {
    return call(APP_URL.url + "offer/list/", "POST", payload);
}
function getDiscountConditionalPricings(subscriptionId) {
    return call(APP_URL.url + "offer/discountConditionalPricings/" + subscriptionId, "GET");
}
function getCustomerInfoAPI() {
    return new Promise(function (resolve, reject) {
        var userName = $(".userName"),
            logo = $("#logo"),
            logoPrint = $("#logoPrint"),
            logoMobile = $("#logoMobile");
        getCustomerInfo()
            .done(function (result) {
                sessionStorage.setItem("identifier", result.identity.credentialIdentifier);
                logo.attr("src", logo.attr("src").replace("salt", BRAND.name));
                logoMobile.attr("src", logoMobile.attr("src").replace("salt", BRAND.name));
                if (logoPrint.length) logoPrint.attr("src", logoPrint.attr("src").replace("salt", BRAND.name));
                userName.text($.i18n("utils.header.welcome"));
                if ("ACTIVE" === result.configuration.features.billing[0]) {
                    $("#linkBill").removeClass("hidden");
                    sessionStorage.setItem("hasBilling", true);
                } else {
                    $("#linkBill").addClass("hidden");
                    sessionStorage.setItem("hasBilling", false);
                }
                if ("ACTIVE" === result.configuration.features.subscription[0]) {
                    $("#linkSub").removeClass("hidden");
                    sessionStorage.setItem("hasSub", true);
                } else {
                    $("#linkSub").addClass("hidden");
                    sessionStorage.setItem("hasSub", false);
                }
                if ("INACTIVE" === result.configuration.features.subscription[0] && "INACTIVE" === result.configuration.features.billing[0]) {
                    var infoText = $.i18n("subscription.warning.no_sub");
                    $("#wrapper").removeClass("hidden").focus();
                    $("#loadingMsg").addClass("hidden");
                    $("#dashboardPage").append(infoText);
                }
                resolve();
            })
            .fail(function () {
                $("#wrapper").removeClass("hidden").focus();
                $("#loadingMsg").addClass("hidden");
            });
    });
}
(function ($) {
    var toggleMenu = $("#toggleMenu"),
        navContainer = $("#navContainer"),
        triggerClose = $("#closeMenu");
    $(document).ready(function () {
        sessionStorage.setItem("ftSize", 16);
        $("body").addClass(BRAND.name);
        if ("post" === BRAND.name) {
            brandIcon("user", BRAND.name);
            brandIcon("logout", BRAND.name);
        }
        dropdownToggle($("#profileToggler"), $("#profileContent"), true);
        openVerticalMenu(toggleMenu, navContainer, triggerClose);
        colorModeSwitcher();
        if ($(".animation", $("#page")).length > 0)
            $(document).on("scroll", function () {
                animateBlock();
            });
        setTimeout(function () {
            floatingLabels();
        }, 100);
        onResize();
        unsetCurrentID($("#linkBill a"), "bid");
        unsetCurrentID($("#linkProfile"), "custid");
        var currentUrl = document.location.pathname;
        currentUrl = currentUrl.replace("/", "");
        loadPage($("#page"), currentUrl).then(function (resultLoad) {
            if ("success" === resultLoad) {
                sessionStorage.setItem("isPopState", false);
                $("#page").hide().fadeIn("slow");
            }
        });
        $("#mainNav a, #linkProfile")
            .off("click")
            .on("click", function (ev) {
                ev.preventDefault();
                navigation($(this).attr("href"));
                return false;
            });
        $(window)
            .off("popstate")
            .on("popstate", function (event) {
                sessionStorage.setItem("isPopState", true);
                var currentUrl = document.location.pathname;
                currentUrl = currentUrl.replace("/", "");
                loadPage($("#page"), currentUrl).then(function (resultLoad) {
                    if ("success" === resultLoad) $("#page").hide().fadeIn("slow");
                });
            });
    });
})(jQuery);
function onHashChange() {
    if (window.location.hash) {
        var hashTab = window.location.hash.split(1);
        hashTab = hashTab[0].replace("#", "");
        if ($("#profilePage").length) {
            if ("profileMarketingPrivacy" === hashTab) selectDefaultCustomer($("#customerListMarketingPrivacy"));
            else if ("profileDataPrivacy" === hashTab) selectDefaultCustomer($("#customerListPrivacy"));
            else if ("profilePersonalInfo" === hashTab) selectDefaultCustomer($("#customerList"));
        } else if ($("#label_" + hashTab).length) {
            if ($("input[data-id]").length) {
                $('input[data-id="' + hashTab + '"]')
                    .prop("checked", true)
                    .trigger("change");
                $("#tabListFix").find(".js-tablist__link").attr({ tabindex: -1, "aria-selected": "false" });
                $("#tabListFix")
                    .find('a[aria-controls="' + hashTab + '"]')
                    .attr({ "aria-selected": "true", tabindex: 0 });
                $(".tabs__content").attr("aria-hidden", "true");
                $("#" + hashTab).removeAttr("aria-hidden");
            } else $("#label_" + hashTab).trigger("click");
            window.scrollTo(0, 0);
        }
    }
}
$(window).resize(onResize);
function animateBlock() {
    var docScroll = $(window).scrollTop(),
        animationOffset = $(".animation", $("#page"));
    animationOffset.not(".animated").each(function () {
        var animationBlock = $(this);
        animationOffset = animationBlock.offset().top - 700;
        if (docScroll >= animationOffset) animationBlock.addClass("animated");
    });
}
function unsetCurrentID(trigger, idToUnset) {
    if (trigger.length)
        trigger.on("click", function (e) {
            e.preventDefault();
            e.stopPropagation();
            sessionStorage.setItem(idToUnset, "");
            window.location.href = $(this).attr("href");
        });
}
function onResize() {
    var toggleMenu = $("#toggleMenu"),
        navContainer = $("#navContainer"),
        triggerClose = $("#closeMenu"),
        filterListToggler = $("#filterListToggler"),
        subListToggler = $("#subListToggler"),
        billingListToggler = $("#billingListToggler"),
        customerListToggler = $("#customerListToggler"),
        customerListPrivacyToggler = $("#customerListPrivacyToggler"),
        customerList = $("#customerList"),
        customerListPrivacy = $("#customerListPrivacy"),
        tableFilter = $("#tableFilter"),
        subscriptionAccount = $("#subscriptionAccount"),
        billingList = $("#billingList"),
        subOfferList = $("#subOfferList"),
        dashboardPage = $("#dashboardPage"),
        orderCustomerListToggler = $("#orderCustomerListToggler"),
        orderCustomerList = $("#orderCustomerList"),
        overlayID = $("#wrapper");
    seeMore();
    if ($(window).width() < 1016) {
        if (navContainer.hasClass("open")) closeMenu(triggerClose, toggleMenu, navContainer, overlayID, false);
        if ($(".hybrid-table", $("#page")).length) $(".hybrid-table", $("#page")).attr("role", "presentation");
        if ($(".slider", $("#page")).length && !$(".slick-accessible").length) {
            //!$('.slick-accessible').length to avoid multiple slider build when resizing
            $(".slider").attr({ role: "group", "aria-roledescription": "carousel" });
            $(".slider").each(function (i, e) {
                if ($(e).hasClass("option")) $(e).attr("aria-label", $.i18n("tabs.options.title") + " " + $(this).prev().text());
            });
            if ($(".slider", $("#page")).hasClass("slick-initialized"))
                setTimeout(function () {
                    $(".slider", $("#page")).slick("reInit");
                }, 300);
            else {
                $(".slider", $("#page")).slick({ dots: true, arrows: false, infinite: true, slidesToShow: 1, slidesToScroll: 1 });
                $(".slick-slide").attr({ role: "group", "aria-roledescription": "slide" });
            }
            if ($(".btn--action").length) $(".btn--action").removeAttr("tabindex");
        }
    } else {
        if (sessionStorage.getItem("ftSize") && sessionStorage.getItem("ftSize") >= 27) {
            closeMenu(triggerClose, toggleMenu, navContainer, overlayID, true);
            openVerticalMenu(toggleMenu, navContainer, triggerClose, true);
        } else openMenu(triggerClose, toggleMenu, navContainer, overlayID, false);
        if ($(".hybrid-table", $("#page")).length) $(".hybrid-table", $("#page")).removeAttr("role");
        if ($(".slider", $("#page")).length && $(".slider").hasClass("slick-initialized")) {
            $(".slider", $("#page")).slick("unslick");
            $(".slider", $("#page")).removeAttr("role");
            $(".slider", $("#page")).removeAttr("aria-roledescription");
            $(".slider", $("#page")).removeAttr("aria-label");
            if ($(".btn--action").length) $(".btn--action").removeAttr("tabindex");
        }
        function fontSizeInit() {
            var iBase = TextResizeDetector.addEventListener(onFontResize, null);
            sessionStorage.setItem("ftSize", iBase);
            if (iBase >= 24) {
                closeMenu(triggerClose, toggleMenu, navContainer, overlayID, true);
                openVerticalMenu(toggleMenu, navContainer, triggerClose, true);
                if ($(".hybrid-table", $("#page")).length) $(".hybrid-table", $("#page")).attr("role", "presentation");
            } else {
                openMenu(triggerClose, toggleMenu, navContainer, overlayID, false);
                if ($(".dropdown-sort").length) $(".dropdown-sort").addClass("hidden");
            }
        }
        function onFontResize(e, args) {
            sessionStorage.setItem("ftSize", args[0].iSize);
            if (args[0].iSize >= 24) {
                closeMenu(triggerClose, toggleMenu, navContainer, overlayID, true);
                openVerticalMenu(toggleMenu, navContainer, triggerClose, true);
                if ($(".hybrid-table", $("#page")).length) $(".hybrid-table", $("#page")).attr("role", "presentation");
                if ($(".dropdown-sort").length) $(".dropdown-sort").removeClass("hidden");
            } else {
                openMenu(triggerClose, toggleMenu, navContainer, overlayID, false);
                if ($(".dropdown-sort").length) $(".dropdown-sort").addClass("hidden");
            }
        }
        TextResizeDetector.TARGET_ELEMENT_ID = "resizeText";
        TextResizeDetector.USER_INIT_FUNC = fontSizeInit;
    }
    if (customerListToggler.length) {
        if ($(window).width() < 1016) {
            customerList.addClass("dropdown__list item-list").removeClass("grid-4-large-3 has-gutter-l dropdown__visible");
            customerListToggler.removeClass("hidden-desktop");
            dropdownToggle(customerListToggler, customerList, true);
        } else {
            customerListToggler.addClass("hidden-desktop");
            customerList.removeClass("dropdown__list item-list").addClass("grid-4-large-3 has-gutter-l dropdown__visible");
        }
        removeDropdownZoom(customerListToggler);
    }
    if (customerListPrivacyToggler.length) {
        if ($(window).width() < 1016) {
            customerListPrivacy.addClass("dropdown__list item-list").removeClass("grid-4-large-3 has-gutter-l dropdown__visible");
            customerListPrivacyToggler.removeClass("hidden-desktop");
            dropdownToggle(customerListPrivacyToggler, customerListPrivacy, true);
        } else {
            customerListPrivacyToggler.addClass("hidden-desktop");
            customerListPrivacy.removeClass("dropdown__list item-list").addClass("grid-4-large-3 has-gutter-l dropdown__visible");
        }
        removeDropdownZoom(customerListPrivacyToggler);
    }
    if (subscriptionAccount.length)
        if ($(window).width() < 1016 || subscriptionAccount.children("li").length > 3 || dashboardPage.length) {
            subscriptionAccount.addClass("dropdown__list item-list").removeClass("grid-4-large-3 has-gutter-l dropdown__visible");
            subListToggler.removeClass("hidden-desktop");
            dropdownToggle(subListToggler, subscriptionAccount, true);
        } else {
            subListToggler.addClass("hidden-desktop");
            subscriptionAccount.removeClass("dropdown__list item-list").addClass("grid-4-large-3 has-gutter-l dropdown__visible");
        }
    if (billingList.length)
        if ($(window).width() < 1016 || billingList.children("li").length > 4) {
            billingList.find(".price:not(.alert)").hide();
            billingList.addClass("dropdown__list item-list").removeClass("grid-4-large-3 has-gutter-l dropdown__visible");
            billingListToggler.removeClass("hidden-desktop");
            dropdownToggle(billingListToggler, billingList, true);
        } else {
            billingList.find(".price:not(.alert)").show();
            billingListToggler.addClass("hidden-desktop");
            billingList.removeClass("dropdown__list item-list").addClass("grid-4-large-3 has-gutter-l dropdown__visible");
        }
    if (subOfferList.length)
        if ($(window).width() < 1016 || subOfferList.children("li").length > 3) {
            subOfferList.addClass("dropdown__list item-list").removeClass("grid-4-large-3 has-gutter-l dropdown__visible");
            subListToggler.removeClass("hidden-desktop");
            dropdownToggle(subListToggler, subOfferList, true);
        } else {
            subListToggler.addClass("hidden-desktop");
            subOfferList.removeClass("dropdown__list item-list").addClass("grid-4-large-3 has-gutter-l dropdown__visible");
        }
    if (orderCustomerList.length)
        if ($(window).width() < 1016 || orderCustomerList.children("li").length > 4) {
            orderCustomerList.addClass("dropdown__list item-list").removeClass("grid-4-large-3 has-gutter-l dropdown__visible");
            orderCustomerListToggler.removeClass("hidden-desktop");
            dropdownToggle(orderCustomerListToggler, orderCustomerList, true);
        } else {
            orderCustomerListToggler.addClass("hidden-desktop");
            orderCustomerList.removeClass("dropdown__list item-list").addClass("grid-4-large-3 has-gutter-l dropdown__visible");
        }
    if (tableFilter.length) {
        if ($(window).width() < 1016) {
            tableFilter.addClass("dropdown__list item-list").removeClass("dropdown__visible").hide();
            filterListToggler.removeClass("hidden-desktop");
            filterListToggler.removeClass("active").attr("aria-expanded", "false");
            dropdownToggle(filterListToggler, tableFilter);
            if ("" === filterListToggler.find(".current").html()) filterListToggler.find(".current").html($(tableFilter.find("button").first()).html());
        } else {
            filterListToggler.addClass("hidden-desktop");
            tableFilter.removeClass("dropdown__list item-list").addClass(" dropdown__visible").fadeIn();
        }
        removeDropdownZoom(filterListToggler);
    }
}
function removeDropdownZoom(toggler) {
    setTimeout(function () {
        if ($(window).width() > 1016 && sessionStorage.getItem("ftSize") && sessionStorage.getItem("ftSize") >= 27) toggler.addClass("hidden");
        else toggler.removeClass("hidden");
    }, 500);
}
function searchInObject(arrayToSearch, objToSearch) {
    return arrayToSearch.filter(function (ats) {
        return Object.keys(objToSearch).every(function (propertyName) {
            return ats[propertyName] === objToSearch[propertyName];
        });
    });
}
(function ($) {
    var balancePayment = $("#balancePayment"),
        amountPayment = $("#amountPayment"),
        backBilling = $("#backBilling"),
        backPaymentReceipt = $("#backPaymentReceipt"),
        globalError = $("#globalError"),
        urlParams = new URLSearchParams(location.search),
        currentLanguage = setDefaultLang();
    $(document).ready(function () {
        if (balancePayment.length) {
            translatePage();
            getCustomerInfoAPI().then(function () {
                if (urlParams.get("domain")) sessionStorage.setItem("domain", urlParams.get("domain"));
                if (urlParams.get("datatransTrxId")) {
                    var paymentInfo = sessionStorage.getItem("paymentInfo");
                    var payload = { paymentId: paymentInfo, language: currentLanguage };
                    if (urlParams.get("type") && "prepay" === urlParams.get("type")) {
                        backBilling.attr("href", "/subscription.html?acc=" + urlParams.get("acc") + "#subOverview");
                        backPaymentReceipt.attr("href", "/subscription.html?acc=" + urlParams.get("acc") + "#subOverview");
                    } else {
                        backBilling.attr("href", "/billing.html?acc=" + urlParams.get("acc") + "#billingOverview");
                        backPaymentReceipt.attr("href", "/billing.html?acc=" + urlParams.get("acc") + "#billingOverview");
                    }
                    postEndPaymentDatatransAPI(globalError, null, urlParams.get("acc"), JSON.stringify(payload));
                } else
                    getAccountInfoAPI(globalError, urlParams.get("acc")).then(function (accountResult) {
                        if (urlParams.get("type") && "prepay" === urlParams.get("type")) {
                            getPayerAndSPMPrepay(accountResult);
                            backBilling.attr("href", "/subscription.html?acc=" + urlParams.get("acc") + "#subOverview");
                            backPaymentReceipt.attr("href", "/subscription.html?acc=" + urlParams.get("acc") + "#subOverview");
                        } else {
                            getPaymentInfoAPI(urlParams.get("acc"), urlParams.get("domain"));
                            backBilling.attr("href", "/billing.html?acc=" + urlParams.get("acc") + "#billingOverview");
                            backPaymentReceipt.attr("href", "/billing.html?acc=" + urlParams.get("acc") + "#billingOverview");
                            getPayerAndSPMPostpaid(accountResult);
                        }
                        if ("mobile" === sessionStorage.getItem("domain")) displayInstantPayFee();
                        amountPayment
                            .on("keydown", function (event) {
                                numberOnly(event);
                            })
                            .on("input", function () {
                                normalizeAmount(amountPayment);
                            })
                            .on("wheel.disableScroll", function (event) {
                                event.preventDefault();
                            });
                    });
                $("#wrapper").removeClass("hidden").focus();
                $("#loadingMsg").addClass("hidden");
            });
        }
    });
})(jQuery);
function alphaOrder(item) {
    var result = item.sort(function (a, b) {
        var nameA = a.name;
        var nameB = b.name;
        if (nameA < nameB) return -1;
        if (nameA > nameB) return 1;
        return 0;
    });
    return result;
}
function brandIcon(iconName, brandName) {
    $("." + iconName)
        .removeClass(iconName)
        .addClass(iconName + "-" + brandName)
        .find("use")
        .attr("xlink:href", "#" + iconName + "-" + brandName);
}
function buildHeadMeta() {
    var headMeta = "",
        currentLanguage = setDefaultLang(),
        url = SERVICE_SALT,
        assetPath = "global";
    if ("salt" === BRAND.name)
        headMeta +=
            '<link rel="stylesheet" type="text/css" href="./css/thema-' +
            BRAND.name +
            '.min.css" media="all"/>            <link rel="stylesheet" type="text/css" href="./css/color-mode.min.css" media="all"/>            <link rel="stylesheet" type="text/css" media="all" href="./css/all.min.css"/>';
    else if ("lidl" === BRAND.name) {
        (url = SERVICE_LIDL), (assetPath = "lidl");
        headMeta +=
            '<link rel="stylesheet" type="text/css" href="./css/thema-' +
            BRAND.name +
            '-color.min.css" media="all"/>        <link rel="stylesheet" type="text/css" href="./css/color-mode.min.css" media="all"/>        <link rel="stylesheet" type="text/css" media="all" href="./css/all.min.css"/>        <link rel="stylesheet" type="text/css" href="./css/thema-' +
            BRAND.name +
            '.min.css" media="all"/>';
        if ($(".en").length) $(".en").remove();
    } else if ("post" === BRAND.name) {
        (url = SERVICE_POST), (assetPath = "post");
        headMeta +=
            '<link rel="stylesheet" type="text/css" href="./css/thema-' +
            BRAND.name +
            '-color.min.css" media="all"/>        <link rel="stylesheet" type="text/css" href="./css/color-mode.min.css" media="all"/>        <link rel="stylesheet" type="text/css" media="all" href="./css/all.min.css"/>        <link rel="stylesheet" type="text/css" href="./css/thema-' +
            BRAND.name +
            '.min.css" media="all"/>';
    } else if ("sky" === BRAND.name) {
        (url = SERVICE_SKY), (assetPath = "sky");
        headMeta +=
            '<link rel="stylesheet" type="text/css" href="./css/thema-' +
            BRAND.name +
            '-color.min.css" media="all"/>        <link rel="stylesheet" type="text/css" href="./css/color-mode.min.css" media="all"/>        <link rel="stylesheet" type="text/css" media="all" href="./css/all.min.css"/>        <link rel="stylesheet" type="text/css" href="./css/thema-' +
            BRAND.name +
            '.min.css" media="all"/>';
    } else {
        (url = SERVICE_GOMO), (assetPath = "gomo");
        headMeta +=
            '<link rel="stylesheet" type="text/css" href="./css/thema-' +
            BRAND.name +
            '-color.min.css" media="all"/>        <link rel="stylesheet" type="text/css" href="./css/color-mode.min.css" media="all"/>        <link rel="stylesheet" type="text/css" media="all" href="./css/all.min.css"/>        <link rel="stylesheet" type="text/css" href="./css/thema-' +
            BRAND.name +
            '.min.css" media="all"/>';
    }
    headMeta +=
        '<meta http-equiv="X-UA-Compatible" content="IE=edge">        <meta charset="utf-8"/>        <meta name="description" content="My Account">        <meta content="width=device-width, initial-scale=1.0" name="viewport"/>        <link rel="shortcut icon" href="#" />        <link rel="apple-touch-icon" sizes="152x152" href="./img/' +
        assetPath +
        '/apple-touch-icon.png">        <link rel="icon" type="image/png" sizes="32x32" href="./img/' +
        assetPath +
        '/favicon-32x32.png">        <link rel="icon" type="image/png" sizes="16x16" href="./img/' +
        assetPath +
        '/favicon-16x16.png">        <link rel="icon" href="./img/' +
        assetPath +
        '/favicon.ico">        <link rel="manifest" href="./img/' +
        assetPath +
        '/site.webmanifest" crossorigin="use-credentials">        <link rel="mask-icon" href="./img/' +
        assetPath +
        '/safari-pinned-tab.svg" color="#5bbad5">        <style>            .hidden {display: none;}        </style>        <link rel="stylesheet" type="text/css" href="./css/print.min.css" media="print"/>';
    if ($("#logoutURL").length) {
        url = url.replace(/\/?$/, "/");
        url = url + "?v=" + Date.now();
        $("#logoutURL")
            .off("click")
            .on("click", function () {
                window.location.href = APP_URL.casUrl + "/cas-external/logout?service=" + encodeURIComponent(url) + "&lang=" + currentLanguage.toLowerCase();
                return false;
            });
    }
    $("head").html(headMeta);
}
function commonErrors(result, errorContainer, submitCurrentForm) {
    if ("INVALID_OBJECT" === result) displayMessageAfterSubmit(errorContainer, submitCurrentForm, "", $.i18n("utils.error.missing_parameter_" + BRAND.name));
    else if ("FAILED" === result) displayMessageAfterSubmit(errorContainer, submitCurrentForm, "", $.i18n("utils.technical_error_" + BRAND.name));
    else if ("PASSWORD_TOO_WEAK" === result) displayMessageAfterSubmit(errorContainer, submitCurrentForm, "", $.i18n("utils.error.pwd_too_weak"));
    else if ("DUPLICATE_CREDENTIAL_PERSON_LINK" === result) displayMessageAfterSubmit(errorContainer, submitCurrentForm, "", $.i18n("utils.error.email_already_exists_link_" + BRAND.name, SUPPORT_URL.url + "/recoveryPassword.html"));
    else if ("INVALID_EMAIL_FORMAT" === result) displayMessageAfterSubmit(errorContainer, submitCurrentForm, "", $.i18n("utils.error.wrong_email_" + BRAND.name));
    else displayMessageAfterSubmit(errorContainer, submitCurrentForm, "", $.i18n("utils.technical_error_" + BRAND.name));
}
function convertAmount(stringAmount) {
    if (Number(stringAmount) < 0) return parseInt(100 * Number(stringAmount) - 0.5);
    else return parseInt(100 * Number(stringAmount) + 0.5);
}
function customOnChange(fieldTrigger, targetDisplay, displayedItemPath, callback, optParam1, optParam2, optParam3, optParam4) {
    $(fieldTrigger)
        .off("change")
        .on("change", function (event) {
            callback(event, fieldTrigger, targetDisplay, displayedItemPath, optParam1, optParam2, optParam3, optParam4);
            return false;
        });
}
dateToDateObject = function (dateToConvert) {
    var newDate = dateToConvert.split(/[./-]/);
    dateReturn = newDate[2] + "-" + newDate[1] + "-" + newDate[0];
    return dateReturn.toString();
};
dateToDateObjectTrim = function (dateToConvert) {
    console.log(dateToConvert);
    var newDate = dateToConvert.split(/([ T]+)/);
    var convertibleDate = newDate[0].split(/[./-]/);
    dateReturn = convertibleDate[2] + "-" + convertibleDate[1] + "-" + convertibleDate[0];
    return dateReturn.toString();
};
dateWSToRealDate = function (dateToConvert) {
    var newDate = dateToConvert.split("-"),
        dateReturn = newDate[0] + "." + newDate[1] + "." + newDate[2];
    return dateReturn;
};
function isValidDate(d) {
    var dateReturn = new Date(dateToDateObject(d));
    return dateReturn instanceof Date && !isNaN(dateReturn);
}
function isDateBeforeToday(date) {
    date = dateToDateObject(date);
    date = new Date(date.replace(/-/g, "/"));
    return new Date(date) < new Date();
}
function secondsToTime(seconds) {
    return new Date(1e3 * seconds).toISOString().substr(11, 8);
}
function callDatepicker(selectorDP) {
    var imgButton = "/img/global/calendar.svg";
    if (BRAND.name)
        switch (BRAND.name) {
            case "LIDL_CONSUMER":
                imgButton = "/img/global/lidl-calendar.svg";
                break;
            case "GOMO_CONSUMER":
                imgButton = "/img/global/gomo-calendar.svg";
                break;
            case "POST_CONSUMER":
                imgButton = "/img/post/calendar.svg";
                break;
            default:
                break;
        }
    if ($('[data-color-mode="dark"]').length) {
        imgButton = "/img/global/calendar-white.svg";
        if (BRAND.name)
            switch (BRAND.name) {
                case "LIDL_CONSUMER":
                    imgButton = "/img/global/lidl-calendar-white.svg";
                    break;
                case "GOMO_CONSUMER":
                    imgButton = "/img/global/gomo-calendar-white.svg";
                    break;
                case "POST_CONSUMER":
                    imgButton = "/img/post/calendar-white.svg";
                    break;
                default:
                    break;
            }
    }
    if (selectorDP.length) {
        selectorDP.datepicker({
            dateFormat: "dd.mm.yy",
            minDate: "01.01.1900",
            maxDate: "0",
            defaultDate: "01.01.1990",
            showOn: "button",
            buttonImage: imgButton,
            buttonImageOnly: false,
            buttonText: "",
            changeYear: true,
            showButtonPanel: false,
            onClose: removeAria,
            beforeShow: function (input) {
                setTimeout(function () {
                    var prevYrBtn = $('<a href="javascript:void(0);" class="datepicker-prev-year" title="' + $.i18n("utils.datepicker.prev_year") + '"></button>');
                    prevYrBtn.off("click").on("click", function () {
                        $.datepicker._adjustDate(selectorDP, -1, "Y");
                    });
                    var nextYrBtn = $('<a href="javascript:void(0);" class="datepicker-next-year" title="' + $.i18n("utils.datepicker.next_year") + '"></a>');
                    nextYrBtn.off("click").on("click", function () {
                        $.datepicker._adjustDate(selectorDP, +1, "Y");
                    });
                    prevYrBtn.insertBefore($(".ui-datepicker-prev"));
                    nextYrBtn.insertAfter($(".ui-datepicker-next"));
                    $(".ui-datepicker-prev").attr("href", "javascript:void(0);");
                    $(".ui-datepicker-next").attr("href", "javascript:void(0);");
                }, 1);
            },
            onChangeMonthYear: function (input) {
                setTimeout(function () {
                    var prevYrBtn = $('<a href="javascript:void(0);" class="datepicker-prev-year" title="' + $.i18n("utils.datepicker.prev_year") + '"></a>');
                    prevYrBtn.off("click").on("click", function () {
                        $.datepicker._adjustDate(selectorDP, -1, "Y");
                    });
                    var nextYrBtn = $('<a href="javascript:void(0);" class="datepicker-next-year" title="' + $.i18n("utils.datepicker.next_year") + '"></a>');
                    nextYrBtn.off("click").on("click", function () {
                        $.datepicker._adjustDate(selectorDP, +1, "Y");
                    });
                    prevYrBtn.insertBefore($(".ui-datepicker-prev"));
                    nextYrBtn.insertAfter($(".ui-datepicker-next"));
                }, 1);
            },
        });
        dayTripper();
        $(".ui-datepicker-trigger img").attr("alt", $.i18n("utils.labels.display_calendar"));
    }
}
function displayEditForm(triggerBtn, targetForm, visibleArea, bDisableTrigger) {
    triggerBtn.on("click", function () {
        triggerBtn.attr("aria-expanded", true);
        if (bDisableTrigger) triggerBtn.attr("aria-disabled", true);
        visibleArea.hide();
        targetForm.show().focus();
        targetForm.siblings(".highlight-form").hide();
    });
}
function downloadDocument(blobPDF, namePDF) {
    const newBlob = new Blob([blobPDF], { type: "application/pdf" });
    if (window.navigator && window.navigator.msSaveOrOpenBlob) {
        window.navigator.msSaveOrOpenBlob(newBlob);
        return;
    }
    const data = window.URL.createObjectURL(newBlob);
    const link = document.createElement("a");
    link.href = data;
    link.download = namePDF + ".pdf";
    document.body.appendChild(link);
    link.click();
    setTimeout(function () {
        document.body.removeChild(link);
        window.URL.revokeObjectURL(data);
    }, 100);
}
(function ($) {
    dropdownToggle = function (btnToggler, contentToggled, bCloseClickOutside) {
        btnToggler.off("click").on("click", function (e) {
            e.stopPropagation();
            contentToggled.fadeToggle();
            $(this).toggleClass("active");
            $(this).attr("aria-expanded", function (index, attr) {
                if ("false" == attr) return (attr = "true");
                else return (attr = "false");
            });
        });
        $(".dropdown")
            .on("blur", function () {
                if (!$(this).find(".dropdown__visible")) {
                    contentToggled.fadeOut();
                    btnToggler.removeClass("active").attr("aria-expanded", "false");
                }
            })
            .on("keydown", function (e) {
                if (27 === e.keyCode) {
                    contentToggled.fadeOut();
                    btnToggler.removeClass("active").attr("aria-expanded", "false");
                }
            });
        if (bCloseClickOutside)
            $(document).click(function () {
                if (contentToggled.is(":visible")) {
                    contentToggled.fadeOut();
                    btnToggler.removeClass("active").attr("aria-expanded", "false");
                }
            });
        contentToggled.keydown(function (e) {
            var focusedElement = $(":focus");
            if (9 === e.keyCode) {
                if (false === e.shiftKey && focusedElement.is($(this).find(":tabbable").last())) {
                    $(this).fadeOut();
                    $(this).prev().removeClass("active").attr("aria-expanded", "false");
                    e.preventDefault();
                }
                if (true === e.shiftKey && focusedElement.is($(this).find(":tabbable").first())) {
                    $(this).fadeOut();
                    $(this).prev().removeClass("active").attr("aria-expanded", "false");
                    e.preventDefault();
                }
            }
            if (27 === e.keyCode) {
                $(this).fadeOut();
                $(this).prev().focus();
                btnToggler.removeClass("active").attr("aria-expanded", "false");
            }
        });
    };
})(jQuery);
function dropdownSort() {
    if (sessionStorage.getItem("ftSize") && sessionStorage.getItem("ftSize") >= 27) {
        $(".dropdown-sort").removeClass("hidden");
        $(".dropdown-sort").each(function (ind, ele) {
            $(ele)
                .find("button")
                .off("click")
                .on("click", function () {
                    $(ele)
                        .next(".responsive-table")
                        .find("th button#" + $(this).attr("data-sort"))
                        .trigger("click");
                });
        });
    } else $(".dropdown-sort").addClass("hidden");
}
function floatingLabels() {
    if ($(".floating-label").length) {
        var show = "show";
        $(".floating-label").each(function (i, e) {
            if ("" != $(e).find("input, textarea").val() && !$(e).hasClass("custom-select")) $(e).find("label").addClass(show);
        });
        $(".floating-label")
            .find('input:not([type="radio"]):not([type="checkbox"]), textarea, select')
            .on("checkval change blur", function () {
                var label = $(this).parent().find("label");
                if ("" !== this.value || "datepicker" == this.classList[0]) label.addClass(show);
                else label.removeClass(show);
            })
            .on("focus", function () {
                $(this).parent().find("label").addClass(show);
            });
        if ($(".ui-datepicker-trigger").length)
            $(".ui-datepicker-trigger").on("click", function () {
                $(".ui-datepicker-calendar a").on("click", function () {
                    $("input.datepicker").trigger("checkval");
                });
            });
    }
}
function formatBytes(bytes, decimals = 2) {
    var k = 1024,
        dm = decimals < 0 ? 0 : decimals,
        sizes = ["Bytes", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"],
        i = Math.floor(Math.log(bytes) / Math.log(k));
    if ("fr" === document.documentElement.lang) {
        if (0 === bytes) return "0 octet";
        sizes = ["octets", "Ko", "Mo", "Go", "To", "Po", "Eo", "Zo", "Yo"];
    } else if (0 === bytes) return "0 Bytes";
    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + " " + sizes[i];
}
function formatSkyDiscountAmount(discountResponse) {
    const discounts = discountResponse.discountConditionalPricings;
    let amount = "0.-";
    if (discounts?.length > 0) {
        const firstDiscount = Number(discounts[0].discountValue) / 100;
        if (Number.isInteger(firstDiscount)) amount = firstDiscount.toFixed(0);
        else amount = firstDiscount.toFixed(2);
    }
    return amount;
}
function linkCustomerValidated(customMessage) {
    var linkCustomerForm = $("#linkCustomerForm"),
        linkCustomerError = $("#linkCustomerError"),
        linkCustomerValid = $("#linkCustomerValid"),
        linkCustomerSubmit = $("#linkCustomerSubmit");
    linkCustomerForm.hide();
    linkCustomerError.hide();
    if (customMessage) displayMessageAfterSubmit(linkCustomerValid, linkCustomerSubmit, "", $.i18n("utils.valid." + customMessage + "_" + BRAND.name));
    else displayMessageAfterSubmit(linkCustomerValid, linkCustomerSubmit, "", $.i18n("utils.valid.self_registration_validated_" + BRAND.name));
}
function loadImage(selectorImg, imgPath, imgAlt) {
    if ($(selectorImg).length) {
        $(selectorImg).attr("src", imgPath);
        $(selectorImg).attr("alt", $.i18n(imgAlt));
    }
}
(function ($) {
    openMenu = function (triggerClose, triggerOpen, menuID, overlayID, isZoom) {
        if ($(window).width() < 1016 || isZoom) {
            triggerOpen.addClass("active");
            triggerOpen.attr("aria-hidden", "true");
            $("body").addClass("no-scroll");
            menuID.addClass("open").removeAttr("aria-hidden").find(":focusable").first().focus();
            overlayID.addClass("overlay-menu");
            menuID.parent().siblings().attr("aria-hidden", true);
            menuID.siblings().attr("aria-hidden", true);
            menuID.addClass("zoom");
            menuID.attr({ "aria-modal": true, role: "dialog", "aria-hidden": false, "aria-labelledby": "menuLabel" });
        } else {
            menuID.addClass("open").removeAttr("aria-hidden");
            overlayID.removeClass("overlay-menu");
            menuID.parent().siblings().removeAttr("aria-hidden");
            menuID.siblings().removeAttr("aria-hidden");
            $("header").removeClass("zoom");
            menuID.removeAttr("aria-modal");
            menuID.removeAttr("role");
        }
    };
    closeMenu = function (triggerClose, triggerOpen, menuID, overlayID, isZoom) {
        menuID.removeClass("open").attr("aria-hidden", true);
        $("body").removeClass("no-scroll");
        menuID.parent().siblings().removeAttr("aria-hidden");
        menuID.siblings().removeAttr("aria-hidden");
        menuID.removeAttr("aria-modal");
        menuID.removeAttr("role");
        menuID.removeAttr("aria-labelledby");
        if ($(window).width() < 1016) {
            menuID.attr("aria-hidden", true);
            triggerOpen.removeAttr("aria-hidden");
        } else menuID.removeAttr("aria-hidden");
        overlayID.removeClass("overlay-menu");
        if (triggerOpen.hasClass("active")) triggerOpen.removeClass("active").focus();
        if (isZoom) triggerOpen.show().parent().addClass("zoom");
        else triggerOpen.show().parent().removeClass("zoom");
    };
})(jQuery);
function manageLinkCustomer(event, fieldTrigger, targetDisplay, displayedItemPath) {
    return new Promise(function (resolve, reject) {
        var customLoad = loadOnTrigger(event, fieldTrigger, targetDisplay, displayedItemPath),
            linkCustomerError = $("#linkCustomerError");
        linkCustomerSubmit = $("#linkCustomerSubmit");
        customLoad.then(function (result) {
            if ("" !== result) {
                var currentLanguage = setDefaultLang();
                switch (event.currentTarget.id) {
                    case "byMsisdn":
                        linkCustomerError.hide();
                        loadPhoneNumber();
                        linkCustomerSubmit.hide().attr("type", "button");
                        resolve();
                        break;
                    case "byMobileBA":
                        linkCustomerError.hide();
                        linkCustomerSubmit.show().attr("type", "submit");
                        callDatepicker($("#dateBirth"));
                        $("#helpInvoice").text($.i18n("profile.form.help_invoice_" + BRAND.name));
                        $("#registerPayerLabel").text($.i18n("profile.form.register_payer_" + BRAND.name));
                        $('input[name="registerPayerOption"]')
                            .off("change")
                            .on("change", function () {
                                if ("true" === $('input[name="registerPayerOption"]:checked').val()) $("#birthDate label").text($.i18n("profile.form.birthdate_payer"));
                                else $("#birthDate label").text($.i18n("profile.form.birthdate_owner"));
                            });
                        $("#registerPayerNo").prop("checked", true).trigger("change");
                        postLinkByBillingAccountAPI("MOBILE");
                        loadImage("#invoiceSample", "./img/salt/ba-mobile-" + currentLanguage.toLowerCase() + ".png", $.i18n("profile.image.billing_account_" + BRAND.name));
                        resolve();
                        break;
                    case "byMobileContract":
                        linkCustomerError.hide();
                        linkCustomerSubmit.show().attr("type", "submit");
                        callDatepicker($("#dateBirth"));
                        postLinkMobileByContractAPI();
                        $("#helpContract").html($.i18n("profile.form.method_contract_" + BRAND.name));
                        if ("lidl" === BRAND.name) loadImage("#contractMobile", "./img/lidl/contract_mobile_" + currentLanguage.toLowerCase() + ".jpg", $.i18n("profile.image.mobile"));
                        else loadImage("#contractMobile", "./img/salt/contract_mobile_" + currentLanguage.toLowerCase() + ".jpg", $.i18n("profile.image.mobile"));
                        resolve();
                        break;
                    case "byOtoID":
                        linkCustomerError.hide();
                        linkCustomerSubmit.show().attr("type", "submit");
                        callDatepicker($("#dateBirth"));
                        postLinkFixByOTOAPI();
                        resolve();
                        break;
                    case "byFixBA":
                        linkCustomerError.hide();
                        linkCustomerSubmit.show().attr("type", "submit");
                        callDatepicker($("#dateBirth"));
                        $("#helpInvoice").text($.i18n("profile.form.help_invoice_" + BRAND.name));
                        postLinkByBillingAccountAPI("FIX");
                        loadImage("#invoiceSample", "./img/salt/ba-fix-" + currentLanguage.toLowerCase() + ".png", $.i18n("profile.image.billing_account_" + BRAND.name));
                        resolve();
                        break;
                    case "byFixContract":
                        linkCustomerError.hide();
                        linkCustomerSubmit.show().attr("type", "submit");
                        callDatepicker($("#dateBirth"));
                        loadImage("#contractFix", "./img/salt/contract_fix_" + currentLanguage.toLowerCase() + ".jpg", $.i18n("profile.image.fix"));
                        postLinkFixByContractAPI();
                        resolve();
                        break;
                    default:
                        break;
                }
            }
        });
    });
}
function navigation(pageUrl) {
    sessionStorage.setItem("isPopState", false);
    history.pushState(null, null, pageUrl);
    loadPage($("#page"), pageUrl).then(function (resultLoad) {
        if ("success" === resultLoad) $("#page").hide().fadeIn("slow");
    });
}
function normalizeAmount(selector) {
    let result = selector.val().replace(/[^\d\.,]/g, "");
    if ("." === result.substring(0, 1) || "," === result.substring(0, 1)) result = "0" + result;
    if (result.indexOf(".") > 0 && result.length > result.indexOf(".") + 3) result = result.substring(0, result.indexOf(".") + 3);
    if (result.indexOf(",") > 0 && result.length > result.indexOf(",") + 3) result = result.substring(0, result.indexOf(",") + 3);
    selector.val(result);
}
function numberOnly(event) {
    if (
        !(
            event.ctrlKey ||
            event.altKey ||
            (event.keyCode >= 48 && event.keyCode <= 57) ||
            (96 <= event.keyCode && event.keyCode <= 105) ||
            190 == event.keyCode ||
            110 == event.keyCode ||
            188 == event.keyCode ||
            13 == event.keyCode ||
            8 == event.keyCode ||
            9 == event.keyCode ||
            (event.keyCode > 34 && event.keyCode <= 40) ||
            46 == event.keyCode
        )
    )
        event.preventDefault();
}
function orderByDisplayOrder(a, b) {
    if (a.displayOrder < b.displayOrder) return -1;
    if (a.displayOrder > b.displayOrder) return 1;
    return 0;
}
function orderByTermId(a, b) {
    if (a.term_id < b.term_id) return -1;
    if (a.term_id > b.term_id) return 1;
    return 0;
}
function togglePassword() {
    var pwdToggler = $(".pwd-toggler");
    if (pwdToggler.length > 0) {
        if ("post" === BRAND.name) brandIcon("show-password", BRAND.name);
        pwdToggler.find(".helper-icon").attr("title", $.i18n("form_controls.show_pwd"));
        pwdToggler.find("svg").attr("aria-label", $.i18n("form_controls.show_pwd"));
        $(".pwd-toggler").on("click", function () {
            $(this)
                .find("use")
                .attr("xlink:href", function (index, attr) {
                    if ("post" === BRAND.name) return attr == "#show-password-" + BRAND.name ? "#hide-password-" + BRAND.name : "#show-password-" + BRAND.name;
                    else return "#show-password" == attr ? "#hide-password" : "#show-password";
                });
            $(this)
                .find("svg")
                .attr("aria-label", function (index, attr) {
                    return attr == $.i18n("form_controls.show_pwd") ? $.i18n("form_controls.hide_pwd") : $.i18n("form_controls.show_pwd");
                });
            $(this)
                .find(".helper-icon")
                .attr("title", function (index, attr) {
                    return attr == $.i18n("form_controls.show_pwd") ? $.i18n("form_controls.hide_pwd") : $.i18n("form_controls.show_pwd");
                });
            $(this)
                .parent()
                .find("input")
                .attr("type", function (index, attr) {
                    return "password" == attr ? "text" : "password";
                });
        });
    }
}
function searchInObject(oObjs, property) {
    return oObjs.filter(function (oObj) {
        return Object.keys(property).every(function (propertyName) {
            return oObj[propertyName] === property[propertyName];
        });
    });
}
(function ($) {
    var phoneNumberLength = 9;
    phoneExtractorForDisplay = function (phoneNumber) {
        if (phoneNumber) {
            phoneNumber = phoneNumber.toString();
            var beginPhoneNumber = phoneNumber.length - phoneNumberLength;
            return "0" + phoneNumber.substring(beginPhoneNumber);
        }
    };
    phoneNumberFormatting = function (str) {
        if (str) {
            var prettyPhoneNumber = str.slice(0, 3) + " " + str.slice(3, 6) + " " + str.slice(6, 8) + " " + str.slice(8, 10);
            return prettyPhoneNumber;
        }
    };
    prettifyPhoneNumber = function (phoneNumber) {
        if (phoneNumber) {
            phoneNumber = phoneNumber.toString();
            var beginPhoneNumber = phoneNumber.length - phoneNumberLength;
            var newPhoneNumber = "0" + phoneNumber.substring(beginPhoneNumber);
            var prettyPhoneNumber = newPhoneNumber.slice(0, 3) + " " + newPhoneNumber.slice(3, 6) + " " + newPhoneNumber.slice(6, 8) + " " + newPhoneNumber.slice(8, 10);
            return prettyPhoneNumber;
        }
    };
    validatePhoneNumber = function (phone_number, element, bForeign, bFix, bMobile) {
        phone_number = phone_number.replace(/[-\s.'(){}\[\]\/\\]/g, "");
        if (0 == phone_number.indexOf("00")) phone_number = phone_number.replace(/00/, "+");
        if (0 == phone_number.indexOf("+410")) phone_number = phone_number.replace(/\+410/, "+41");
        else if (0 == phone_number.indexOf("+4230")) phone_number = phone_number.replace(/\+4230/, "423");
        if (0 == phone_number.indexOf("0")) phone_number = phone_number.replace(/0/, "+41");
        if (0 != phone_number.indexOf("+")) return false;
        if (0 == phone_number.indexOf("+")) phone_number = phone_number.replace(/\+/g, "");
        if (!phone_number.match(/[0-9]*$/)) return false;
        if (0 == phone_number.indexOf("41")) {
            if (11 !== phone_number.length) return false;
            if (false === bFix) if (phone_number.match(/^41([2345689]|71)/)) return false;
            if (false === bMobile)
                if (phone_number.match(/^417[^1]/)) return false;
                else {
                    element.setAttribute("data-number", phone_number);
                    return true;
                }
            else {
                element.setAttribute("data-number", phone_number);
                return true;
            }
        } else if (0 == phone_number.indexOf("423")) {
            if (10 !== phone_number.length) return false;
            if (false === bFix) if (phone_number.match(/^423[2345]/)) return false;
            if (false === bMobile)
                if (phone_number.match(/^423[67]/)) return false;
                else {
                    element.setAttribute("data-number", phone_number);
                    return true;
                }
            else {
                element.setAttribute("data-number", phone_number);
                return true;
            }
        } else if (false === bForeign)
            if (phone_number.match(/^[0-9]*$/)) return false;
            else {
                element.setAttribute("data-number", phone_number);
                return true;
            }
    };
})(jQuery);
function toggleFields(trigger, toggled) {
    trigger.off("change").on("change", function () {
        $(this).parents("form").find('[id^="status"]').empty().removeClass("valid");
        $(this).parents("form").find('[id^="submit"]').removeAttr("disabled");
        if ($(this).is(":checked")) $(this).parents("form").find(toggled).removeClass("hidden");
        else $(this).parents("form").find(toggled).addClass("hidden");
    });
}
function validateForm(selectorForm, submitButton) {
    if (selectorForm.length > 0) {
        var isFormValid = selectorForm.validate({
            rules: {
                email: { emailValid: true },
                confirmNewLogin: { emailValid: true, equalTo: "#newLogin" },
                confirmNewPwd: { maxlength: 128, equalTo: "#newPwd" },
                confirmNewTvLogin: { equalTo: "#newTvLogin" },
                newTvPwd: { tvPwdValid: true },
                confirmNewTvPwd: { equalTo: "#newTvPwd", tvPwdValid: true },
                newTvPin: { minlength: 4, maxlength: 4, digits: true },
                confirmNewTvPin: { equalTo: "#newTvPin", minlength: 4, maxlength: 4, digits: true },
                newTvPinPurchase: { minlength: 4, maxlength: 4, digits: true },
                confirmNewTvPinPurchase: { equalTo: "#newTvPinPurchase", minlength: 4, maxlength: 4, digits: true },
                newEmailMark: { emailValid: true },
                amountPayment: { amountMin: true, amountMax: true },
                ccMobile: { CHLIMobilePhone: true },
                phoneCFNR: { cirpackPhone: true },
                phoneCFB: { cirpackPhone: true },
                phoneCFU: { cirpackPhone: true },
                currentNumber: { swissLandlinePhone: true },
                registrationMobilePhone: { CHLIMobilePhone: true },
                phoneHotp: { CHLIMobilePhone: true },
                mfaPhoneHotp: { CHLIMobilePhone: true },
                ccAmount: { amountMin: true, amountMax: true },
                voucherMobile: { CHLIMobilePhone: true },
                dateBirth: { dateFormat: true, isValidDate: true, isDateBeforeToday: true, maxAge: true },
                msisdn: { CHLIMobilePhone: true },
                newSipPwd: { sipPwdValid: true },
                newTvPinYp: { minlength: 4, maxlength: 4, digits: true },
                confirmNewTvPinYp: { equalTo: "#newTvPinYp", minlength: 4, maxlength: 4, digits: true },
                uploadPOA: { required: true, extension: "pdf" },
            },
            messages: {
                newTvPwd: { tvPwdValid: $.validator.messages.newTvPwd.pattern },
                confirmNewTvPwd: { equalTo: $.validator.messages.confirmNewTvPwd.equalTo, tvPwdValid: $.validator.messages.confirmNewTvPwd.pattern },
                confirmNewPwd: { equalTo: $.validator.messages.confirmNewPwd.equalTo },
                newSipPwd: { sipPwdValid: $.validator.messages.newSipPwd.pattern },
                confirmNewLogin: { equalTo: $.validator.messages.confirmNewLogin.equalTo },
                amountPayment: { pattern: $.validator.messages.pattern },
                dateBirth: { isValidDate: $.validator.messages.isValidDate, isDateBeforeToday: $.validator.messages.isValidDate },
                uploadPOA: { extension: $.validator.messages.extension },
            },
            highlight: function (element, errorClass) {
                if (($(element).is(":radio") || $(element).is(":checkbox")) && $(element).closest("fieldset").length) {
                    $(element).attr("aria-invalid", true);
                    $(element).closest("fieldset").addClass(errorClass);
                    $(element).closest("fieldset").focus();
                } else {
                    $(element).parent().addClass(errorClass);
                    $(element).attr("aria-invalid", true);
                }
            },
            unhighlight: function (element, errorClass) {
                if (($(element).is(":radio") || $(element).is(":checkbox")) && $(element).closest("fieldset").length) {
                    $(element).attr("aria-invalid", false);
                    $(element).removeAttr("aria-describedby");
                    $(element).closest("fieldset").removeClass(errorClass);
                } else {
                    $(element).parent().removeClass(errorClass);
                    $(element).attr("aria-invalid", false);
                    $(element).removeAttr("aria-describedby");
                }
            },
            errorElement: "p",
            errorPlacement: function (error, element) {
                if ((element.is(":radio") || element.is(":checkbox")) && $(element).parents("fieldset").length) {
                    if (!$(element).closest("fieldset").find(".error").length) error.appendTo($(element).closest("fieldset"));
                } else if (!$(element).parent().find(".error").length) error.appendTo($(element.parent(".error")));
            },
            invalidHandler: function (event, validator) {
                var errors = validator.numberOfInvalids();
                if (errors > 0) {
                    submitButton.removeAttr("disabled");
                    validator.errorList[0].element.focus();
                    return false;
                }
            },
        });
        selectorForm.valid();
        if (!isFormValid.form()) {
            submitButton.removeAttr("disabled");
            return false;
        } else {
            submitButton.attr("disabled", true);
            return true;
        }
    }
}
function openVerticalMenu(trigger, verticalMenu, triggerClose, isZoom) {
    var focusableElements = verticalMenu.find('a[href], button:not([disabled]), [tabindex="0"]'),
        overlayID = $("#wrapper");
    var keyboardHandler;
    trigger.on("click", function (e) {
        openMenu(triggerClose, trigger, verticalMenu, overlayID, isZoom);
        e.preventDefault();
        e.stopPropagation();
        if (focusableElements.length > 0) {
            var firstFocusableEl = focusableElements[0],
                lastFocusableEl = focusableElements[focusableElements.length - 1];
            keyboardHandler = function keyboardHandler(e) {
                if (9 === e.keyCode)
                    if (e.shiftKey && document.activeElement === firstFocusableEl) {
                        e.preventDefault();
                        lastFocusableEl.focus();
                    } else if (!e.shiftKey && document.activeElement === lastFocusableEl) {
                        e.preventDefault();
                        firstFocusableEl.focus();
                    }
                if (27 === e.keyCode) closeMenu(triggerClose, trigger, verticalMenu, overlayID);
            };
            verticalMenu.on("keydown", keyboardHandler);
        }
    });
    triggerClose.on("click", function () {
        closeMenu(triggerClose, trigger, verticalMenu, overlayID);
    });
}
function displayAccessoryList(accessoryList, serviceFamily, wrapperList) {
    if (accessoryList.length) {
        let accessoryHTML = "",
            currentLangUpper = setDefaultLang();
        for (let iAccessory = 0; iAccessory < accessoryList.length; iAccessory++) {
            const currentAccessory = accessoryList[iAccessory];
            if (currentAccessory.serviceFamily === serviceFamily) {
                let accessoryImage = "",
                    accessoryName = "";
                if ("" !== currentAccessory.name) accessoryName = currentAccessory.name;
                if (void 0 !== currentAccessory.commercialTexts && currentAccessory.commercialTexts.length)
                    for (let iContext = 0; iContext < currentAccessory.commercialTexts.length; iContext++) {
                        const currentContext = currentAccessory.commercialTexts[iContext];
                        if ("IMAGE_URL" === currentContext.context) accessoryImage = currentContext.texts[currentLangUpper];
                        if ("COMMERCIAL_NAME" === currentContext.context) accessoryDesc = currentContext.texts[currentLangUpper];
                    }
                accessoryHTML +=
                    '<div class="highlight accessory">                    <div id="accessoryContent' +
                    currentAccessory.code +
                    '" class="accessory__content">                        <div class="grid-2-medium-1-small-1 has-gutter-l">                            <img src="' +
                    accessoryImage +
                    '" alt="' +
                    accessoryName +
                    '" class="accessory__visual">                            <div class="accessory__desc two_thirds">                                <h3 class="accessory__title">' +
                    accessoryName +
                    " <br/>CHF " +
                    (currentAccessory.price / 100).toFixed(2) +
                    "</h3>                                <p>" +
                    accessoryDesc +
                    ' </p>                                <p class="align-center space-top">                                    <button id="order' +
                    currentAccessory.code +
                    '"                                             data-id="' +
                    currentAccessory.code +
                    '"                                             data-unit-price="' +
                    currentAccessory.price +
                    '"                                             type="button"                                             aria-label="' +
                    $.i18n("subscription.tv.order") +
                    " " +
                    accessoryName +
                    '"                                             class="btn btn--secondary">' +
                    $.i18n("subscription.tv.order") +
                    '</button>                                </p>                            </div>                        </div>                    </div>                    <div id="orderForm' +
                    currentAccessory.code +
                    '" class=""></div>                </div>';
            }
        }
        wrapperList.html(accessoryHTML);
    }
}
function displayAccessoryOrderForm(accessoryWrapper) {
    accessoryWrapper.on("click", 'button[id^="order"]', function (event) {
        event.preventDefault();
        $("#accessoryContent" + event.currentTarget.dataset.id).hide();
        loadPath($("#orderForm" + event.currentTarget.dataset.id), PATH_FORM_COMP + "accessory/order-accessory.html").then(function (result) {
            let zipcode = { zipFieldContainer: "zipcodeContainer", zipFieldId: "zipcode" },
                city = { cityFieldContainer: "cityContainer", cityFieldId: "city" },
                street = { streetFieldContainer: "streetContainer", streetFieldId: "street" },
                houseNb = { houseNbFieldContainer: "houseNbContainer", houseNbFieldId: "houseNb" };
            prefillOrderAccessoryForm($("#subscriptionAccount button.active"));
            let unitPrice = parseInt(event.currentTarget.dataset.unitPrice);
            let totalPrice = unitPrice + 570;
            $("#totalAccessoryAmount").text($.i18n("subscription.accessory.total", (totalPrice / 100).toFixed(2)));
            $("#accessoryCode").val(event.currentTarget.dataset.id);
            callAcs(zipcode, street, city, houseNb, $("#accessoryFormError"), $("#orderAccessoryForm"), $("#submitOrderAccessory"), void 0, true);
            updateTotalAccessoryPrice(unitPrice);
            submitOrderAccessoryForm(
                $("#accessoryFormError"),
                $("#accessoryFormValid"),
                $("#orderForm" + event.currentTarget.dataset.id),
                $("#orderAccessoryForm"),
                $("#submitOrderAccessory"),
                $("#accessoryContent" + event.currentTarget.dataset.id)
            );
        });
    });
}
function displayFixSubInternet(customerID, aCustomerDetails) {
    var internetInfo = $("#internetInfo"),
        otoIdInfo = $("#otoIdInfo"),
        portIdInfo = $("#portIdInfo"),
        currentLang = setDefaultLang().toLowerCase();
    if (internetInfo.length) {
        otoIdInfo.text("" !== aCustomerDetails[0].address.otoid ? aCustomerDetails[0].address.otoid : $.i18n("utils.labels.missing"));
        portIdInfo.text("" !== aCustomerDetails[0].address.plugNumber ? aCustomerDetails[0].address.plugNumber : "-");
    }
    if ($("#speedtestLink").length) $("#speedtestLink").attr("aria-label", $.i18n("subscription.internet.speedtest_link") + " " + $.i18n("utils.labels.new_window"));
    getAccessories($("#accessoryInternetError"), null).then(function (accessoryList) {
        displayAccessoryList(accessoryList, "INTERNET", $("#internetAccessoriesWrapper"));
        displayAccessoryOrderForm($("#internetAccessoriesWrapper"));
    });
}
function displayFixSubOptions(customerID) {
    var subOptions = $("#subOptions");
    if (subOptions.length)
        getOptionsAPI(customerID).then(function (result) {
            if (result) {
                manageOptionAction(customerID, result);
                onResize();
            }
        });
}
function displayFixSubOverview(customerID, aCustomerDetails) {
    var subscriptionContent = $("#subscriptionContent");
    if (subscriptionContent.length) {
        if ("TERMINATED" !== sessionStorage.getItem("subStatus") && "CLOSED" !== sessionStorage.getItem("subStatus")) {
            loadSubInfo(customerID);
            loadMobileDiscount(customerID);
            if (true === aCustomerDetails[0].requiresOto) loadOtoForm(customerID);
        }
        loadContactInfo(aCustomerDetails[0], customerID);
        getOngoingStatusAPI(customerID);
        loadPath($("#supportTools"), PATH_SCREEN_COMP + "support-fix.html").then(function () {
            $("#supUnderstandBill").attr("href", $.i18n("support.transverse.understand_bill_" + BRAND.name + "_" + sessionStorage.getItem("domain")));
            $("#fixSupportDiscount").attr("href", "#subFixOverview");
            $("#fixSupportAccessories").attr("href", "#subFixTV");
            $("#fixSupportPwd").attr("href", "#subFixTV");
        });
    }
}
function displayFixSubSupport(customerID, aCustomerDetails) {}
function displayFixSubTV() {
    var currentLang = setDefaultLang().toLowerCase();
    getTvLoginAPI(sessionStorage.getItem("custid")).then(function () {
        let currentLogin = JSON.parse(sessionStorage.getItem("tvInfo"));
        $("#currentTvLogin").text(currentLogin.login);
        $("#credentialEditWrapper").removeClass("hidden");
        $("#changeTvCredential")
            .off("click")
            .on("click", function () {
                $(this).attr("aria-expanded", "true");
                loadTVCredentials().then(function () {
                    $("#submitTvCredentials").hide();
                    toggleVisibility($("#editTvLogin"), $("#tvLoginForm"), $("#submitTvCredentials"));
                    toggleVisibility($("#editTvPwd"), $("#tvPwdForm"), $("#submitTvCredentials"));
                    toggleVisibility($("#tvPin"), $("#tvPinForm"), $("#submitTvCredentials"));
                    togglePassword();
                    changeTvCredential($("#editTvLogin"), $("#tvCredentialEditValid"), $("#tvCredentialEditError"), $("#tvLoginForm"), $("#submitTvLogin"), postTVLoginAPI);
                    changeTvCredential($("#editTvPwd"), $("#tvCredentialEditValid"), $("#tvCredentialEditError"), $("#tvPwdForm"), $("#submitTvPwd"), postTVPwdAPI);
                    loadTVPin().then(function () {
                        displayPinStatus();
                        displayEditPin();
                    });
                    $("#resetTvCredentials")
                        .off("click")
                        .on("click", function () {
                            $("#tvCredentialContainer").empty();
                            $("#changeTvCredential").attr("aria-expanded", "false").focus();
                        });
                });
            });
    });
    getAccessories($("#accessoryTVError"), null).then(function (accessoryList) {
        displayAccessoryList(accessoryList, "TV", $("#tvAccessoriesWrapper"));
        displayAccessoryOrderForm($("#tvAccessoriesWrapper"));
    });
}
function displayFixSubTelephony(customerID, aCustomerDetails) {
    var fixInfo = $("#fixInfo"),
        subFixNb = $("#subFixNb"),
        askPortin = $("#askPortin"),
        subStatus = sessionStorage.getItem("subStatus");
    askPortin.hide();
    if ("" !== aCustomerDetails[0].voipNumber && void 0 !== aCustomerDetails[0].voipNumber && subFixNb.length) {
        fixInfo.removeClass("hidden");
        subFixNb.text(prettifyPhoneNumber(aCustomerDetails[0].voipNumber));
        getOngoingStatusAPI(customerID);
        if ("TERMINATED" !== subStatus && "CLOSED" !== subStatus && "0000000000" !== aCustomerDetails[0].voipNumber && "C_ACQ_BAS_FIX_1" === aCustomerDetails[0].offerCode)
            getPortinStatusAPI(customerID).then(function (resultStatus) {
                if (!resultStatus.length || "CANCELED" === resultStatus[0].status || resultStatus[0].possibleActions.includes("CREATE_PROCESS")) {
                    askPortin.show();
                    askPortin.off("click").on("click", function () {
                        loadAskPortin(aCustomerDetails);
                        $(this).hide();
                    });
                } else if (resultStatus[0].possibleActions.includes("UPLOAD_POA")) loadSendPortin(customerID, sessionStorage.getItem("domain"), resultStatus[0].id);
                else if (!resultStatus[0].possibleActions.length) displayPortinInfo(resultStatus[0], aCustomerDetails);
                else displayPortinInfo(resultStatus[0], aCustomerDetails);
            });
        if ("ACTIVE" === subStatus) {
            getVoipFeaturesAPI(customerID, aCustomerDetails[0].voipNumber).then(function (result) {
                loadVoipFeatures(customerID, result);
            });
            if ("" !== aCustomerDetails[0].voipSipNumber) loadSipPwd(customerID, aCustomerDetails[0].voipNumber);
        }
    }
}
function prefillOrderAccessoryForm(currentSub) {
    $("#firstname").val(currentSub.attr("data-firstname"));
    $("#lastname").val(currentSub.attr("data-lastname"));
    $("#zipcode").val(currentSub.attr("data-zipcode"));
    $("#city").val(currentSub.attr("data-city"));
    $("#street").val(currentSub.attr("data-street"));
    $("#houseNb").val(currentSub.attr("data-housenb"));
    $("#careOf").val(currentSub.attr("data-careof"));
    $("#orderAccessoryForm label").addClass("show");
}
function submitOrderAccessoryForm(errorContainer, validContainer, currentFormWrapper, currentForm, submitCurrentForm, visibleArea) {
    currentForm
        .on("submit", function (event) {
            event.preventDefault();
            if (validateForm(currentForm, submitCurrentForm)) {
                var payload = {
                    code: $("#accessoryCode").val(),
                    quantity: $("#quantity").val(),
                    address: { careOf: $("#careOf").val().trim(), houseNumber: $("#houseNb").val().trim(), street: $("#street").val().trim(), postalCode: $("#zipcode").val().trim(), city: $("#city").val().trim() },
                };
                currentForm.addClass("loading");
                return postAccessories(errorContainer, validContainer, currentForm, submitCurrentForm, $("#subscriptionAccount button.active").attr("data-custid"), JSON.stringify(payload));
            }
        })
        .on("reset", function (event) {
            event.preventDefault();
            currentFormWrapper.empty();
            visibleArea.show().find("button").focus();
        });
}
function updateTotalAccessoryPrice(unitPrice) {
    $("#quantity")
        .off("change")
        .on("change", function () {
            let totalPrice = unitPrice * $(this).val() + 570;
            $("#totalAccessoryAmount").text($.i18n("subscription.accessory.total", (totalPrice / 100).toFixed(2)));
        });
}
function displaySubConfig(subId, paymentType) {
    var subConfig = $("#subConfig");
    if (subConfig.length) {
        getSimInfoAPI(subId);
        if ("POSTPAID" === paymentType && "ACTIVE" === $("#" + subId).attr("data-status")) {
            getRoamingCostAPI(subId);
            submitRoamingCost(subId);
            $("#newDataCostOption, #newVoiceCostOption").text($.i18n("utils.labels.select_" + BRAND.name));
            $("#roamingCostParagraph").html($.i18n("subscription.config.roaming_cost_paragraph"));
            $("#financialExposure").html($.i18n("subscription.config.financial_exposure_" + BRAND.name));
            displayEditForm($("#changeRoamingCost"), $("#changeRoamingCostForm"), $("#roamingCostVisibleArea"));
            $("#changeRoamingCost").attr("aria-label", $.i18n("utils.labels.edit") + " " + $.i18n("subscription.config.roaming_cost_title"));
        }
    }
}
function displaySubOptions(subId) {
    var subOptions = $("#subOptions");
    if (subOptions.length)
        getOptionsAPI(subId).then(function (result) {
            if (result) {
                manageOptionAction(subId, result);
                onResize();
            }
        });
}
function displaySubOrders() {
    var ordersPage = $("#ordersPage"),
        orderCustomerList = $("#orderCustomerList"),
        orderCustomerListToggler = $("#orderCustomerListToggler"),
        customerListItem = "";
    if (ordersPage.length)
        getCustomerList().done(function (result) {
            if (result.length > 0) {
                orderCustomerList.empty();
                result.sort(orderByDisplayOrder);
                for (var i = 0; i < result.length; i++) {
                    var customerId = result[i].id,
                        customerFirstName = result[i].firstName,
                        customerLastName = result[i].lastName,
                        domain = result[i].domain.toLowerCase();
                    customerListItem +=
                        '<li>                        <button id="' +
                        customerId +
                        '" class="btn btn--mobile"                             data-firstname="' +
                        customerFirstName +
                        '"                             data-lastname="' +
                        customerLastName +
                        '"                             data-domain="' +
                        domain +
                        '" >                            <svg aria-hidden="true" focusable="false" class="' +
                        domain +
                        '">                                <use xlink:href="#' +
                        domain +
                        '"></use>                            </svg>                            ' +
                        customerFirstName +
                        " " +
                        customerLastName +
                        "                        </button>                    </li> ";
                }
                orderCustomerList.append(customerListItem).parent().removeClass("hidden");
            }
            toggleCustomerOrder();
            orderCustomerList.find("button").first().trigger("click").addClass("active");
            if ($(window).width() < 1016 || orderCustomerList.children("li").length > 4) {
                orderCustomerList.addClass("dropdown__list item-list").removeClass("grid-4-large-3 has-gutter-l dropdown__visible");
                orderCustomerListToggler.removeClass("hidden-desktop");
                dropdownToggle(orderCustomerListToggler, orderCustomerList, true);
            } else {
                orderCustomerListToggler.addClass("hidden-desktop");
                orderCustomerList.removeClass("dropdown__list item-list").addClass("grid-4-large-3 has-gutter-l dropdown__visible");
            }
        });
}
function toggleCustomerOrder() {
    var orderContainer = $("#orderContainer"),
        orderCustomerListToggler = $("#orderCustomerListToggler"),
        orderCustomerList = $("#orderCustomerList"),
        currentLang = setDefaultLang().toLowerCase();
    orderCustomerList.find("button").each(function (ind, elem) {
        $(elem)
            .off("click")
            .on("click", function () {
                $("#subOrderError").empty().hide();
                orderCustomerList.find("button").removeClass("active").removeAttr("disabled");
                orderCustomerListToggler.find(".current").html($(elem).html());
                $(elem).addClass("active").attr("disabled", "disabled");
                orderCustomerList.fadeOut();
                orderCustomerListToggler.removeClass("active").attr("aria-expanded", "false");
                $("#wrapper").removeClass("hidden").focus();
                $("#loadingMsg").addClass("hidden");
                if ("mobile" === $(elem).attr("data-domain"))
                    getMobileOrdersAPI($(elem).attr("id")).then(function (result) {
                        if (result && result.orders.length) {
                            var aOrder = [];
                            for (var i = 0; i < result.orders.length; i++)
                                aOrder.push({
                                    confirmationCode: result.orders[i].confirmationCode,
                                    creationDate: result.orders[i].creationDate,
                                    status: $.i18n("subscription.table." + result.orders[i].status),
                                    trackingNumber:
                                        void 0 !== result.orders[i].trackingNumber
                                            ? '<a href="https://service.post.ch/EasyTrack/submitParcelData.do?formattedParcelCodes=' +
                                            result.orders[i].trackingNumber +
                                            "&lang=" +
                                            currentLang +
                                            '&shortcut=swisspost-tracking" target="_blank" title="' +
                                            result.orders[i].trackingNumber +
                                            " " +
                                            $.i18n("subscription.delivery.track_sr") +
                                            '">' +
                                            result.orders[i].trackingNumber +
                                            "</a>"
                                            : "-",
                                    pdf:
                                        true === result.orders[i].withContractArchive
                                            ? '<a href="#" class="pdf-link" role="link" tabindex="0" id="' +
                                            $(elem).attr("id") +
                                            "-" +
                                            result.orders[i].confirmationCode +
                                            '" title="' +
                                            $.i18n("utils.labels.download_pdf_order", result.orders[i].confirmationCode) +
                                            '" aria-label="' +
                                            $.i18n("utils.labels.download_pdf_order", result.orders[i].confirmationCode) +
                                            '">                                    <svg aria-hidden="true" focusable="false" class="pdf"><use xlink:href="#pdf"></use></svg>                                    <span class="space-left">' +
                                            $.i18n("utils.labels.download_pdf") +
                                            "</span>                                </a>"
                                            : "-",
                                });
                            displayTableOrders(aOrder);
                        } else orderContainer.html("<p>" + $.i18n("subscription.table.no_orders") + "</p>");
                    });
                else orderContainer.html("<p>" + $.i18n("subscription.table.no_orders") + "</p>");
            });
    });
}
function displaySubOverview(subId, paymentType) {
    var subscriptionContent = $("#subscriptionContent"),
        prepaidBalance = $("#prepaidBalance"),
        monthlyPrice = $("#monthlyPrice"),
        planDetail = $("#planDetail"),
        displayPlanDetail = $("#displayPlanDetail"),
        pricePlanName = $("#pricePlanName"),
        pricePlan = $("#pricePlan"),
        status = $("#status"),
        oCustomerID = $("#" + subId),
        countersContainer = $("#countersContainer"),
        currentLang = setDefaultLang();
    if (subscriptionContent.length) {
        prepaidBalance.fadeOut();
        countersContainer.addClass("hidden");
        displaySkySubscriptionDiscountContainer();
        if ("ACTIVE" === sessionStorage.getItem("subStatus")) displayCounters(subId, currentLang);
        if ("TERMINATED" === sessionStorage.getItem("subStatus") || "CLOSED" === sessionStorage.getItem("subStatus") || "TERMINATING" === sessionStorage.getItem("subStatus") || "RESUMING" === sessionStorage.getItem("subStatus")) {
            planDetail.hide();
            monthlyPrice.remove();
            displayPlanDetail.hide();
            pricePlanName.text("-");
            displaySubStatus(oCustomerID.attr("data-status"), status);
        } else if ("WAITING" === sessionStorage.getItem("subStatus")) {
            planDetail.hide();
            monthlyPrice.remove();
            displayPlanDetail.hide();
            pricePlanName.text(oCustomerID.attr("data-ppname"));
            displaySubStatus(oCustomerID.attr("data-status"), status);
        } else {
            pricePlanName.text(oCustomerID.attr("data-ppname"));
            pricePlan.text(oCustomerID.attr("data-rc"));
            displaySubStatus(oCustomerID.attr("data-status"), status);
            getRecurringAPI(subId, paymentType);
            monthlyPrice.children().show();
        }
        if ("PREPAID" === paymentType) {
            var monthlyPrice = $("#monthlyPrice"),
                rechargePrepay = $("#rechargePrepay");
            monthlyPrice.children().hide();
            if ("TERMINATED" !== sessionStorage.getItem("subStatus") && "CLOSED" !== sessionStorage.getItem("subStatus") && "TERMINATING" !== sessionStorage.getItem("subStatus")) {
                rechargePrepay
                    .show()
                    .find("a")
                    .attr("href", "payment.html?acc=" + subId + "&domain=mobile&type=prepay");
                getBalancePrepaidAPI(subId);
            }
            getEventHistoryPrepaidAPI(subId);
        }
        if ($("#supportTools").length)
            loadPath($("#supportTools"), PATH_SCREEN_COMP + "support-mobile.html").then(function () {
                if ($("#supUnderstandBill").length) $("#supUnderstandBill").attr("href", $.i18n("support.transverse.understand_bill_" + BRAND.name + "_" + sessionStorage.getItem("domain")));
                $("#getPuk").text($.i18n("support.transverse.get_puk_" + BRAND.name));
                $("#blockNum").text($.i18n("support.transverse.block_num_" + BRAND.name));
                $("#newMob").text($.i18n("support.transverse.new_mobile_" + BRAND.name));
                $("#buyUpsellData").text($.i18n("support.transverse.buy_data_" + BRAND.name));
                if ("post" === BRAND.name) {
                    brandIcon("bill", BRAND.name);
                    brandIcon("puk-support", BRAND.name);
                    brandIcon("globe", BRAND.name);
                    brandIcon("locker", BRAND.name);
                }
            });
    }
}
function displaySubRoaming(subID) {
    var subRoaming = $("#subRoaming"),
        pastUpsellsContainer = $("#pastUpsellsContainer");
    if (subRoaming.length) {
        displayUpsellList(subID, setDefaultLang());
        getPastUpsellsAPI(subID).then(function (result) {
            if (result.length) {
                displayTablePastUpsells(result);
                Sortable.init();
                dropdownSort();
            } else pastUpsellsContainer.html("<h2>" + $.i18n("subscription.roaming.past_upsells") + '</h2>                <p class="space-bottom">' + $.i18n("utils.labels.no_result") + "</p>");
        });
    }
}
function displaySubUsages(subId, lang) {
    var subUsage = $("#subUsage");
    if (subUsage.length) getSubscriptionsUsagesAPI(subId, lang);
}
(function ($) {
    generateA11yModal();
    let inactivityTimer,
        warningTimer,
        intervalId,
        timeOutValue = 10;
    const inactivityTime = 110 * 60 * 1e3;
    const warningTime = 60 * timeOutValue * 1e3;
    function resetTimers() {
        clearTimeout(inactivityTimer);
        clearTimeout(warningTimer);
        inactivityTimer = setTimeout(showWarning, inactivityTime);
    }
    function showWarning() {
        $("#timerMessage").text($.i18n("logout_modal.paragraph.warning", timeOutValue));
        $("#timerMessageAcc").text($.i18n("logout_modal.paragraph.warning", timeOutValue));
        const leftTime = { value: timeOutValue - 1, unit: "minutes" };
        var leftTimeSeconds = 60 * (timeOutValue - 1) * 1e3;
        intervalId = setInterval(updateTimer, 6e4);
        const openModalBtn = $(".open-modal-btn")[0];
        openModalBtn.click();
        warningTimer = setTimeout(logoutAndRedirect, warningTime);
        const closeBtn = $("#js-modal-close");
        closeBtn.focus();
        closeBtn.on("click", function () {
            resetTimers();
            clearInterval(intervalId);
        });
        const stayConnectedBtn = $("#stayConnectedBtn");
        stayConnectedBtn.on("click", function () {
            closeBtn.click();
            resetTimers();
        });
        const logoutBtn = $("#logoutBtn");
        logoutBtn.on("click", function () {
            logoutAndRedirect();
        });
        function updateTimer() {
            $("#timerMessage").text($.i18n("logout_modal.paragraph.warning", leftTime.value));
            $("#timerMessageAcc").text($.i18n("logout_modal.paragraph.warning", leftTime.value));
            leftTimeSeconds -= 6e4;
            leftTime.value = Math.ceil(leftTimeSeconds / 6e4);
        }
    }
    function logoutAndRedirect() {
        // const closeBtn = $("#js-modal-close");
        // closeBtn.click();
        // var url = SERVICE_SALT,
        //     currentLanguage = setDefaultLang();
        // url = url.replace(/\/?$/, "/");
        // url = url + "?v=" + Date.now();
        // intervalId && clearInterval(intervalId);
        // window.location.href = APP_URL.casUrl + "/cas-external/logout?service=" + encodeURIComponent(url) + "&lang=" + currentLanguage.toLowerCase();
        return false;
    }
    $(document).on("mousemove keydown click", resetTimers);
    resetTimers();
})(jQuery);
jQuery(function () {
    var sitParam = "";
    if (window.location.href.indexOf(SERVICE_LIDL) > -1) {
        if (window.location.href.indexOf(".test.salt.ch") > -1) sitParam = "&gtm_auth=bKpN7zIDgBybDVvBbeN8rQ&gtm_preview=env-226&gtm_cookies_win=x";
        (function (w, d, s, l, i) {
            w[l] = w[l] || [];
            w[l].push({ "gtm.start": new Date().getTime(), event: "gtm.js" });
            var f = d.getElementsByTagName(s)[0],
                j = d.createElement(s),
                dl = "dataLayer" != l ? "&l=" + l : "";
            j.async = true;
            j.src = "https://www.googletagmanager.com/gtm.js?id=" + i + dl + sitParam;
            f.parentNode.insertBefore(j, f.nextSibling);
        })(window, document, "script", "dataLayer", "GTM-KNQPFXD");
    } else if (window.location.href.indexOf(SERVICE_GOMO) > -1) {
        if (window.location.href.indexOf(".test.salt.ch") > -1) sitParam = "&gtm_auth=vpxI7WLB5GCBYxp3XJZ2Ng&gtm_preview=env-3&gtm_cookies_win=x";
        (function (w, d, s, l, i) {
            w[l] = w[l] || [];
            w[l].push({ "gtm.start": new Date().getTime(), event: "gtm.js" });
            var f = d.getElementsByTagName(s)[0],
                j = d.createElement(s),
                dl = "dataLayer" != l ? "&l=" + l : "";
            j.async = true;
            j.src = "https://www.googletagmanager.com/gtm.js?id=" + i + dl + sitParam;
            f.parentNode.insertBefore(j, f.nextSibling);
        })(window, document, "script", "dataLayer", "GTM-WNPJ7ML");
    } else if (window.location.href.indexOf(SERVICE_POST) > -1) {
        if (window.location.href.indexOf(".test.post-mobile.ch") > -1) sitParam = "&gtm_auth=yYPbdKpuhkp1l5M_Er5MeQ&gtm_preview=env-3&gtm_cookies_win=x";
        (function (w, d, s, l, i) {
            w[l] = w[l] || [];
            w[l].push({ "gtm.start": new Date().getTime(), event: "gtm.js" });
            var f = d.getElementsByTagName(s)[0],
                j = d.createElement(s),
                dl = "dataLayer" != l ? "&l=" + l : "";
            j.async = true;
            j.src = "https://www.googletagmanager.com/gtm.js?id=" + i + dl + sitParam;
            f.parentNode.insertBefore(j, f.nextSibling);
        })(window, document, "script", "dataLayer", "GTM-M62W4J2Z");
    } else if (window.location.href.indexOf(SERVICE_SKY) > -1) {
        if (window.location.href.indexOf(".test.sky-mobile.ch") > -1) sitParam = "&gtm_auth=tagFdbgXbmXc2j0cOEaFwg&gtm_preview=env-3&gtm_cookies_win=x";
        (function (w, d, s, l, i) {
            w[l] = w[l] || [];
            w[l].push({ "gtm.start": new Date().getTime(), event: "gtm.js" });
            var f = d.getElementsByTagName(s)[0],
                j = d.createElement(s),
                dl = "dataLayer" != l ? "&l=" + l : "";
            j.async = true;
            j.src = "https://www.googletagmanager.com/gtm.js?id=" + i + dl + sitParam;
            f.parentNode.insertBefore(j, f.nextSibling);
        })(window, document, "script", "dataLayer", "GTM-MLML5TV7");
    } else {
        if (window.location.href.indexOf(".test.salt.ch") > -1) sitParam = "&gtm_auth=k3NhN5vmSOsAlxFZAVqbUw&gtm_preview=env-425&gtm_cookies_win=x";
        (function (w, d, s, l, i) {
            w[l] = w[l] || [];
            w[l].push({ "gtm.start": new Date().getTime(), event: "gtm.js" });
            var f = d.getElementsByTagName(s)[0],
                j = d.createElement(s),
                dl = "dataLayer" != l ? "&l=" + l : "";
            j.async = true;
            j.src = "https://www.googletagmanager.com/gtm.js?id=" + i + dl + sitParam;
            f.parentNode.insertBefore(j, f.nextSibling);
        })(window, document, "script", "dataLayer", "GTM-5MQJGW4");
    }
});
(function ($) {
    $(document).ready(function () {
        displayMessageAfterSubmit = function (selectDiv, submitButton, classContent, tradId) {
            selectDiv.html('<div class="message__content">' + tradId + "</div>").show();
            selectDiv.addClass(classContent);
            if (null !== submitButton) submitButton.removeAttr("disabled");
            $("body").removeClass("loading");
        };
        displayMessageAfterEdit = function (messageDiv, formID, submitButton, classContent, tradId, isError, callback, bDisplayAgain) {
            var svgIconName = true === isError ? "ic-error" : "validated";
            messageDiv
                .html(
                    '<div class="message__content"><svg aria-hidden="true" focusable="false" class="space-bottom ' +
                    svgIconName +
                    '"><use xlink:href="#' +
                    svgIconName +
                    '"></use></svg><div class="space-bottom">' +
                    tradId +
                    '</div> <button class="btn btn--secondary btn-right close-edit">' +
                    $.i18n("form_controls.form.back") +
                    "</button></div>"
                )
                .show();
            messageDiv.addClass(classContent);
            messageDiv.parent().addClass(classContent);
            if (null !== submitButton) submitButton.removeAttr("disabled");
            if (null !== formID) formID.addClass("hidden");
            $("body").removeClass("loading");
            messageDiv.focus();
            $(".close-edit").on("click", function () {
                messageDiv.removeClass(classContent);
                messageDiv.parent().removeClass(classContent);
                clearMessages(messageDiv);
                if (null !== formID) formID.removeClass("loading");
                if (true === isError) {
                    if (null !== formID)
                        if (bDisplayAgain && true === bDisplayAgain) formID.removeClass("hidden").parent().focus();
                        else formID.show().parent().focus();
                } else {
                    if (null !== formID)
                        if (bDisplayAgain && true === bDisplayAgain) formID.removeClass("hidden").parent().focus();
                        else formID.trigger("reset");
                    else messageDiv.hide();
                    if (callback && "undefined" !== callback) callback();
                }
            });
        };
        displayConfirmMessage = function (messageDiv, formID, submitButton, classContent, tradId, btnId, callback) {
            messageDiv
                .html(
                    '<div class="message__content"><div>' +
                    tradId +
                    '</div> <div><button id="' +
                    btnId +
                    '" class="btn btn--secondary btn-right space-right">' +
                    $.i18n("form_controls.form.submit") +
                    '</button><button class="btn btn--secondary-reversed btn-right close-confirm">' +
                    $.i18n("form_controls.form.cancel") +
                    "</button></div></div>"
                )
                .show();
            messageDiv.addClass(classContent);
            messageDiv.parent().addClass(classContent);
            if (null !== submitButton) submitButton.removeAttr("disabled");
            $("body").removeClass("loading");
            messageDiv.focus();
            $("#" + btnId).on("click", function () {
                clearMessages(messageDiv);
                callback();
            });
            $(".close-confirm").on("click", function () {
                clearMessages(messageDiv);
                if (null !== formID) formID.trigger("reset");
                else messageDiv.hide();
                messageDiv.parent().removeClass(classContent);
            });
        };
        clearMessages = function (messageDiv) {
            messageDiv.hide().children().remove();
        };
    });
})(jQuery);
(function ($) {
    $(document).ready(function () {
        if ("fr" === document.documentElement.lang)
            $.extend($.validator.messages, {
                emailValid: "Veuillez fournir une adresse Ã©lectronique valide.",
                dateFormat: "Veuillez saisir une date au format dd.mm.aaaa",
                phoneNumber: "Veuillez saisir un numÃ©ro de tÃ©lÃ©phone valide",
                swissLandlinePhone: "Veuillez saisir un numÃ©ro de tÃ©lÃ©phone Suisse valide",
                cirpackPhone: "Veuillez saisir un numÃ©ro de tÃ©lÃ©phone Suisse valide",
                CHLIMobilePhone: "Veuillez saisir un numÃ©ro de tÃ©lÃ©phone mobile Suisse valide",
                contractNumber: "Veuillez saisir un numÃ©ro de contrat valide",
                otoId: 'Veuillez saisir un identifiant <abbr title="Optical telecommunications outlet" lang="en">OTO</abbr> valide',
                pattern: "Veuillez saisir le montant dans un format correct (00.00)",
                isValidDate: "Date non valide",
                newTvPwd: { pattern: "Le mot de passe est invalide, veuillez vÃ©rifier le format de saisie." },
                confirmNewTvPwd: { equalTo: "Le mot de passe ne correspond pas", pattern: "Le mot de passe est invalide, veuillez vÃ©rifier le format de saisie." },
                newSipPwd: { pattern: "Le mot de passe est invalide, merci de vÃ©rifier le format de saisie." },
                confirmNewPwd: { equalTo: "Le mot de passe ne correspond pas" },
                confirmNewLogin: { equalTo: "L'adresse email ne correspond pas" },
                hiddenRecaptcha: { required: "Veuillez renseigner le captcha" },
                uploadPOA: { extension: "Veuillez envoyer un fichier au format PDF." },
            });
        else if ("it" === document.documentElement.lang)
            $.extend($.validator.messages, {
                emailValid: "Inserisci un indirizzo email valido",
                dateFormat: "Inserire una data nel formato gg.mm.aaaa",
                swissLandlinePhone: "Inserire un numero di telefono svizzero valido",
                cirpackPhone: "Inserire un numero di telefono svizzero valido",
                phoneNumber: "Inserire un numero di telefono valido",
                CHLIMobilePhone: "Inserire un numero di cellulare svizzero valido",
                contractNumber: "Inserire un numero di contratto valido",
                otoId: "Inserire un identificatore OTO valido",
                pattern: "Formato non valido, controlla la tua voce (vedi esempio sopra)",
                isValidDate: "Data non valida",
                newTvPwd: { pattern: "Password non valido, controlla il formato di input." },
                newSipPwd: { pattern: "Password non valido, controlla il formato di input." },
                confirmNewPwd: { equalTo: "La password non corrisponde" },
                confirmNewTvPwd: { equalTo: "La password non corrisponde", pattern: "Password non valido, controlla il formato di input." },
                confirmNewLogin: { equalTo: "L'indirizzo e-mail non corrisponde" },
                hiddenRecaptcha: { required: "Si prega di compilare il captcha" },
                uploadPOA: { extension: "Si prega di inviare un file in formato PDF" },
            });
        else if ("de" === document.documentElement.lang)
            $.extend($.validator.messages, {
                emailValid: "Geben Sie bitte eine gÃ¼ltige E-Mail-Adresse ein.",
                dateFormat: "Bitte geben Sie ein Datum im Format tt.mm.jjjj ein.",
                swissLandlinePhone: "Bitte geben Sie eine gÃ¼ltige Schweizer Festnetznummer ein.",
                cirpackPhone: "Bitte geben Sie eine gÃ¼ltige Schweizer Festnetznummer ein.",
                phoneNumber: "Bitte geben Sie eine gÃ¼ltige Festnetznummer ein.",
                CHLIMobilePhone: "Bitte geben Sie eine gÃ¼ltige Schweizer Handynummer ein.",
                contractNumber: "Bitte geben Sie eine gÃ¼ltige Vertragsnummer ein",
                otoId: "Bitte geben Sie eine gÃ¼ltige OTO-Kennung ein.",
                pattern: "UngÃ¼ltiges Format, bitte Ã¼berprÃ¼fen Sie Ihre Eingabe (siehe Beispiel oben)",
                isValidDate: "UngÃ¼ltiges Datum",
                newTvPwd: { pattern: "Bitte geben Sie eine gÃ¼ltige Passwort ein." },
                newSipPwd: { pattern: "Bitte geben Sie eine gÃ¼ltige Passwort ein." },
                confirmNewPwd: { equalTo: "Die Passwort stimmt nicht Ã¼berein." },
                confirmNewTvPwd: { equalTo: "Die Passwort stimmt nicht Ã¼berein.", pattern: "Bitte geben Sie eine gÃ¼ltige Passwort ein." },
                confirmNewLogin: { equalTo: "Die E-Mail-Adresse nicht Ã¼berein." },
                hiddenRecaptcha: { required: "Bitte fÃ¼llen Sie das Captcha aus." },
                uploadPOA: { extension: "Bitte senden Sie eine Datei im PDF-Format." },
            });
        else if ("en" === document.documentElement.lang)
            $.extend($.validator.messages, {
                confirmNewPwd: { equalTo: "The password doesn't match" },
                newTvPwd: { pattern: "Invalid password, please check the format." },
                newSipPwd: { pattern: "Invalid password, please check the format." },
                confirmNewTvPwd: { equalTo: "The password doesn't match", pattern: "Invalid password, please check the format." },
                confirmNewLogin: { equalTo: "The e-mail doesn't match" },
                hiddenRecaptcha: { required: "Please fill in the captcha" },
            });
    });
})(jQuery);
$.validator.addMethod(
    "phoneNumber",
    function (phone_number, element) {
        return this.optional(element) || validatePhoneNumber(phone_number, element, false, true, true);
    },
    "Please enter a valid phone number"
);
$.validator.addMethod(
    "CHLIMobilePhone",
    function (phone_number, element) {
        return this.optional(element) || validatePhoneNumber(phone_number, element, false, false, true);
    },
    "Please enter a valid Swiss mobile phone number"
);
$.validator.addMethod(
    "isPasswordStrong",
    function (value, element) {
        return this.optional(element) || getPasswordStrength($(element), this.selectorForm, this.submitButton);
    },
    "Please enter a more robust password."
);
$.validator.addMethod(
    "swissLandlinePhone",
    function (phone_number, element) {
        return this.optional(element) || validatePhoneNumber(phone_number, element, false, true, false);
    },
    "Please enter a valid Swiss landline phone number"
);
$.validator.addMethod(
    "otoId",
    function (value, element) {
        return this.optional(element) || (/^A(\.([0-9]{3})){3}(\.[0-9X])?|^B(\.([0-9]{3})){3}\.[0-9X]$/.test(value.trim()) && checkSumOto(value.trim()));
    },
    'Please enter a valid <abbr title="Optical telecommunications outlet">OTO</abbr> identifier'
);
$.validator.addMethod(
    "validIban",
    function (value, element) {
        return this.optional(element) || isValidIBANNumber(value, element);
    },
    "Please enter a valid IBAN"
);
$.validator.addMethod(
    "activationDate",
    function (value, element) {
        return this.optional(element) || isvalidActivationDate(value);
    },
    "Please select a date between 10 days and 6 months excluding weekends and public holidays."
);
$.validator.addMethod(
    "emailValid",
    function (value, element) {
        return (
            this.optional(element) ||
            /^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\.(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9]))?(\.(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9]))?)?(\.(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9]))?)?$/.test(
                value
            )
        );
    },
    "Please enter a valid email address."
);
$.validator.addMethod(
    "dateFormat",
    function (value, element) {
        return value.match(/^\d\d?\.\d\d?\.\d\d\d\d$/);
    },
    "Please enter a date in the format dd.mm.yyyy"
);
$.validator.addMethod(
    "cirpackPhone",
    function (value, element) {
        return this.optional(element) || /^\+41(860)?\d{9}$/.test(value.trim());
    },
    "Please enter a valid Swiss phone number"
);
$.validator.addMethod(
    "tvPwdValid",
    function (value, element) {
        return this.optional(element) || /^[A-Za-z0-9!?_& -]{5,}$/.test(value);
    },
    "Please enter a valid password."
);
$.validator.addMethod(
    "sipPwdValid",
    function (value, element) {
        return this.optional(element) || /^[A-Za-z0-9]{10,}$/.test(value);
    },
    "Please enter a valid password."
);
$.validator.addMethod(
    "pattern",
    function (value, element, param) {
        if (this.optional(element)) return true;
        if ("string" === typeof param) param = new RegExp("^(?:" + param + ")$");
        return param.test(value);
    },
    "Invalid format, please check your entry"
);
$.validator.addMethod(
    "minAge",
    function (value, element, min) {
        if (this.optional(element)) return true;
        var today = new Date();
        var birthDate = new Date(dateToDateObject(value));
        var age = today.getFullYear() - birthDate.getFullYear();
        if (age > min + 1) return true;
        var m = today.getMonth() - birthDate.getMonth();
        if (m < 0 || (0 === m && today.getDate() < birthDate.getDate())) age--;
        return age >= min;
    },
    "You must be at least 18 years old"
);
$.validator.addMethod(
    "maxAge",
    function (value, element) {
        if (this.optional(element)) return true;
        var max = 1900;
        var birthDate = new Date(dateToDateObject(value));
        var birthYear = birthDate.getFullYear() - max;
        return birthYear >= 0;
    },
    "You must be born after 1900"
);
$.validator.addMethod(
    "patternTVPwd",
    function (value, element, param) {
        if (this.optional(element)) return true;
        if ("string" === typeof param) param = new RegExp("^(?:" + param + ")$");
        return param.test(value);
    },
    "Invalid format, please check your entry"
);
$.validator.addMethod(
    "isValidDate",
    function (value, element, min) {
        if (this.optional(element)) return true;
        return isValidDate(value);
    },
    "Invalid Date"
);
$.validator.addMethod(
    "isDateBeforeToday",
    function (value, element, min) {
        if (this.optional(element)) return true;
        return isDateBeforeToday(value);
    },
    "Invalid Date"
);
$.validator.addMethod(
    "extension",
    function (value, element, param) {
        param = "string" === typeof param ? param.replace(/,/g, "|") : "png|jpe?g|gif";
        return this.optional(element) || value.match(new RegExp(".(" + param + ")$", "i"));
    },
    "Please send a file in PDF format."
);
function getSubscriptionsListAPI() {
    var subListItem = "",
        subscriptionContent = $("#subscriptionContent"),
        subscriptionAccount = $("#subscriptionAccount"),
        subListToggler = $("#subListToggler"),
        globalError = $("#globalError"),
        dashboardPage = $("#dashboardPage"),
        dashboardSub = $("#dashboardSub");
    var currentLanguage = setDefaultLang().toLowerCase();
    if (subscriptionAccount.length && "true" === sessionStorage.getItem("hasSub"))
        getSubscriptionsList()
            .done(function (result) {
                if (result.length > 0) {
                    var labelDetail = $.i18n("subscription.list.detail"),
                        addLine = $.i18n("utils.labels.add_line"),
                        addLineTitle = $.i18n("utils.labels.add_line") + " " + $.i18n("utils.brand." + BRAND.name) + " " + $.i18n("utils.labels.new_window"),
                        addLineLink = APP_URL.portalUrl + "/" + currentLanguage;
                    if ("salt" === BRAND.name)
                        switch (currentLanguage) {
                            case "fr":
                                addLineLink += "/mobile/plans/abonnements-mobiles";
                                break;
                            case "de":
                                addLineLink += "/mobile/plans/alle-abos";
                                break;
                            case "it":
                                addLineLink += "/mobile/plans/abbonamenti-di-telefonia-mobile";
                                break;
                            case "en":
                                addLineLink += "/mobile/plans/all-subscriptions";
                                break;
                        }
                    result.sort(orderByDisplayOrder);
                    for (var i = 0; i < result.length; i++) {
                        var subId = result[i].id,
                            address = result[i].user.address,
                            number = result[i].number ? result[i].number : "",
                            numberDisplay = "" !== number ? number.replace(/^.{2}/g, "0") : "",
                            domain = result[i].domain.toLowerCase(),
                            paymentType = result[i].paymentType,
                            outOfBundleAmount = result[i].outOfBundleAmount,
                            outOfBundleAmountDisplay = (outOfBundleAmount / 100).toFixed(2),
                            rc = result[i].recurringCharge,
                            rcDisplay = (rc / 100).toFixed(2) + " ",
                            pricePlanName = result[i].pricePlanName ? result[i].pricePlanName[currentLanguage.toUpperCase()] : "-",
                            userFirstName = result[i].user.firstName,
                            userLastName = result[i].user.lastName,
                            statusLine = result[i].status,
                            careOf = "",
                            custID = "";
                        if (null !== address.careOf) careOf = address.careOf;
                        (subAddress = careOf + " " + address.street + " " + address.houseNumber + " " + address.postalCode + " " + address.city + " " + address.country), (subAddress = subAddress.replace(/\"/g, "&quot;"));
                        if (void 0 !== result[i].user) custID = result[i].user.id;
                        sessionStorage.setItem("custid", custID);
                        subListItem +=
                            '<li>                        <button id="' +
                            subId +
                            '" class="btn btn--mobile" data-status="' +
                            statusLine +
                            '"                                 data-payment="' +
                            paymentType +
                            '" data-oob="' +
                            outOfBundleAmountDisplay +
                            '"                                 data-rc="' +
                            rcDisplay +
                            '" data-ppname="' +
                            pricePlanName +
                            '"                                 data-number="' +
                            numberDisplay +
                            '" data-firstname="' +
                            userFirstName +
                            '"                                 data-lastname="' +
                            userLastName +
                            '"                                data-address="' +
                            subAddress +
                            '" data-domain="' +
                            domain +
                            '"                                 data-careof="' +
                            careOf +
                            '" data-street="' +
                            address.street +
                            '"                                 data-houseNb="' +
                            address.houseNumber +
                            '" data-zipcode="' +
                            address.postalCode +
                            '"                                 data-city="' +
                            address.city +
                            '" data-country="' +
                            address.country +
                            '"                                 data-custId="' +
                            custID +
                            '"                                 aria-label="' +
                            numberDisplay +
                            ", " +
                            userFirstName +
                            ", " +
                            labelDetail +
                            '">                            <svg aria-hidden="true" focusable="false" class="' +
                            domain +
                            '">                                <use xlink:href="#' +
                            domain +
                            '"></use>                            </svg>                            <span>                                <strong class="space-side">' +
                            numberDisplay +
                            "</strong>" +
                            " " +
                            userFirstName +
                            "</span>                        </button>                    </li>";
                    }
                    subListItem +=
                        '<li>                    <a href="' +
                        addLineLink +
                        '" title="' +
                        addLineTitle +
                        '" class="btn btn--secondary-reversed" target="_blank" rel="noopener noreferer" id="addLine">                        <svg aria-hidden="true" focusable="false" class="add">                            <use xlink:href="#add"></use>                        </svg>                        <strong>' +
                        addLine +
                        "</strong>                    </a>                </li>";
                }
                if (subscriptionAccount.length) {
                    if (dashboardPage.length) {
                        var payload = { zones: ["DASHBOARD_CUSTOMER", "DASHBOARD_SUBSCRIPTION_1", "DASHBOARD_SUBSCRIPTION_2"] };
                        postOffersAPI(payload, $("#dashboardSubError"))
                            .then(function (resultOffer) {
                                dashboardPage = $("#dashboardPage");
                                if (dashboardPage.length) {
                                    subscriptionAccount.append(subListItem).parent().removeClass("hidden");
                                    dashboardSub.fadeIn().removeClass("hidden");
                                    if (resultOffer.customers.length) {
                                        updateSubListToggler(resultOffer.customers);
                                        var urlParams = new URLSearchParams(location.search);
                                        if (urlParams.get("sub") && $("#" + urlParams.get("sub")).length)
                                            $("#" + urlParams.get("sub"))
                                                .trigger("click")
                                                .addClass("active");
                                        else if (sessionStorage.getItem("subid") && $("#" + sessionStorage.getItem("subid")).length)
                                            $("#" + sessionStorage.getItem("subid"))
                                                .trigger("click")
                                                .addClass("active");
                                        else subscriptionAccount.find("button").first().trigger("click").addClass("active");
                                    } else {
                                        updateSubListToggler(null);
                                        subscriptionAccount.find("button").first().trigger("click").addClass("active");
                                    }
                                }
                            })
                            .catch(function (resultOffer) {
                                subscriptionAccount.append(subListItem).parent().removeClass("hidden");
                                dashboardSub.fadeIn().removeClass("hidden");
                                updateSubListToggler(null);
                                var urlParams = new URLSearchParams(location.search);
                                if (urlParams.get("sub") && $("#" + urlParams.get("sub")).length)
                                    $("#" + urlParams.get("sub"))
                                        .trigger("click")
                                        .addClass("active");
                                else if (sessionStorage.getItem("subid") && $("#" + sessionStorage.getItem("subid")).length)
                                    $("#" + sessionStorage.getItem("subid"))
                                        .trigger("click")
                                        .addClass("active");
                                else subscriptionAccount.find("button").first().trigger("click").addClass("active");
                            });
                    } else {
                        subscriptionAccount.append(subListItem).parent().removeClass("hidden");
                        dashboardSub.fadeIn().removeClass("hidden");
                        updateSubListToggler(null);
                    }
                    var urlParams = new URLSearchParams(location.search);
                    if (urlParams.get("sub") && $("#" + urlParams.get("sub")).length)
                        $("#" + urlParams.get("sub"))
                            .trigger("click")
                            .addClass("active");
                    else if (sessionStorage.getItem("subid") && $("#" + sessionStorage.getItem("subid")).length)
                        $("#" + sessionStorage.getItem("subid"))
                            .trigger("click")
                            .addClass("active");
                    else subscriptionAccount.find("button").first().trigger("click").addClass("active");
                }
                if ($(window).width() < 1016 || subscriptionAccount.children("li").length > 3 || dashboardPage.length) {
                    subscriptionAccount.addClass("dropdown__list item-list").removeClass("grid-4-large-3 has-gutter-l dropdown__visible");
                    subListToggler.removeClass("hidden-desktop");
                    dropdownToggle(subListToggler, subscriptionAccount, true);
                } else {
                    subListToggler.addClass("hidden-desktop");
                    subscriptionAccount.removeClass("dropdown__list item-list").addClass("grid-4-large-3 has-gutter-l dropdown__visible");
                }
            })
            .fail(function (result) {
                $("#wrapper").removeClass("hidden").focus();
                $("#loadingMsg").addClass("hidden");
                if (result && subscriptionContent.length) displayMessageAfterSubmit(globalError, null, "", $.i18n("utils.technical_error"));
            });
}
function callPostFixPaymentMeans(billingAccountID, payload) {
    var managePaymentMean = $("#managePaymentMean"),
        selfCarePaymentMeans = $("#selfCarePaymentMeans"),
        paymentMeansError = $("#paymentMeansError");
    postFixPaymentMeans(billingAccountID, JSON.stringify(payload))
        .done(function (result) {
            if (result.location) {
                selfCarePaymentMeans.find("iframe").attr("src", result.location);
                selfCarePaymentMeans.fadeIn();
                managePaymentMean.attr("aria-expanded", "true");
                managePaymentMean.find("svg").attr("class", "ic-delete").find("use").attr("xlink:href", "#ic-delete");
                window.scrollTo({ top: document.documentElement.scrollTop + 200, behavior: "smooth" });
            }
        })
        .fail(function (result) {
            if (result) displayMessageAfterSubmit(paymentMeansError, null, "", $.i18n("utils.technical_error"));
        });
}
function getCustomerDetailsAPI(customerID) {
    return new Promise(function (resolve, reject) {
        var globalError = $("#globalError");
        getCustomerDetail(customerID)
            .done(function (result) {
                resolve(result);
                if (result) {
                    sessionStorage.setItem("zipcode", result.address.zipcode);
                    sessionStorage.setItem("needOTO", result.requiresOto);
                    sessionStorage.setItem("contactMail", result.email);
                    sessionStorage.setItem("contactPhone", prettifyPhoneNumber(result.voipNumber));
                }
            })
            .fail(function () {
                displayMessageAfterSubmit(globalError, null, "", $.i18n("utils.technical_error"));
                reject("get customer details failed");
            });
    });
}
function displayFixBalance(billingAccountID) {
    var billingOverviewError = $("#billingOverviewError");
    getFixBalance(billingAccountID)
        .done(function (result) {
            displayBalanceInfo(result, billingAccountID);
        })
        .fail(function () {
            displayMessageAfterSubmit(billingOverviewError, null, "", $.i18n("utils.technical_error"));
        });
}
function getOngoingStatusAPI(customerID) {
    return new Promise(function (resolve, reject) {
        var ongoingStatus = $("#ongoingStatus"),
            subFixInternetError = $("#subFixInternetError"),
            ongoingSteps = $("#ongoingSteps"),
            currentStatus = $("#currentStatus"),
            step = "";
        getOngoingStatus(customerID)
            .done(function (result) {
                if (ongoingSteps.length && result.length > 0) {
                    for (var iResult = 0; iResult < result.length; iResult++) {
                        if ("undefined" !== typeof result[iResult].details.connection) {
                            var activationStepsNb = result[iResult].details.connection.steps,
                                activationInfo =
                                    "" !== result[iResult].details.connection.info.switchDate
                                        ? $.i18n("subscription.internet.oto_id") + result[iResult].details.connection.info.otoId
                                        : $.i18n("subscription.activation.no_plug") + "<br/>" + $.i18n("subscription.internet.info_title") + "<br/>" + sessionStorage.getItem("contactMail") + "<br/>" + sessionStorage.getItem("contactPhone");
                            switchDate = "" !== result[iResult].details.connection.info.activationDate ? $.i18n("subscription.activation.switch_date") + result[iResult].details.connection.info.activationDate : "";
                        }
                        if ("undefined" !== typeof result[iResult].details.parceldelivery) {
                            var deliveryStepsNb = result[iResult].details.parceldelivery.steps,
                                trackingNumber = result[iResult].details.parceldelivery.info.trackingNumber,
                                trackingNumberLink = $(trackingNumber);
                            trackingNumberLink.attr({ "aria-label": $.i18n("subscription.delivery.track_sr") + trackingNumberLink.text(), title: $.i18n("subscription.delivery.track_sr") + trackingNumberLink.text() });
                        }
                    }
                    if ("undefined" !== typeof activationStepsNb)
                        for (var iActivation = 0; iActivation < activationStepsNb.length; iActivation++)
                            if ("CONNECTION_IDENTIFIED" === activationStepsNb[iActivation].code)
                                switch (activationStepsNb[iActivation].status) {
                                    case "ONGOING":
                                        if ("false" === sessionStorage.getItem("needOTO")) step += "<li><p>" + $.i18n("subscription.activation.waiting_info") + "<br/>" + $.i18n("subscription.activation.ask_resiliation") + "</p></li>";
                                        else
                                            step +=
                                                "<li><p>" +
                                                $.i18n("subscription.activation.waiting_info") +
                                                "<br/>" +
                                                '<a href="subscription.html?sub=' +
                                                customerID +
                                                '#subFixOverview">' +
                                                $.i18n("subscription.activation.enter_oto") +
                                                "</a></p></li>";
                                        break;
                                    case "ERROR":
                                        step += '<li class="error"><p>' + $.i18n("subscription.activation.error") + "</p></li>";
                                        break;
                                    default:
                                        step += '<li class="done"><p>' + $.i18n("subscription.activation.accepted") + "<br/>" + activationInfo + " </p></li>";
                                        break;
                                }
                    if ("undefined" !== typeof deliveryStepsNb)
                        for (var iDelivery = 0; iDelivery < deliveryStepsNb.length; iDelivery++)
                            if ("PARCEL_DELIVERY" === deliveryStepsNb[iDelivery].code)
                                switch (deliveryStepsNb[iDelivery].status) {
                                    case "":
                                        step += "<li><p>" + $.i18n("subscription.delivery.not_started") + " </p></li>";
                                        break;
                                    case "ONGOING":
                                        step += "<li><p>" + $.i18n("subscription.delivery.sent") + " <br/> " + $.i18n("subscription.delivery.track") + $(trackingNumberLink)[0].outerHTML + " </p></li>";
                                        break;
                                    case "ERROR":
                                        step += '<li class="error"><p>' + $.i18n("subscription.activation.error") + "</p></li>";
                                        break;
                                    default:
                                        step += '<li class="done"><p>' + $.i18n("subscription.delivery.received") + "</p></li>";
                                        break;
                                }
                    if ("undefined" !== typeof activationStepsNb) {
                        for (var iAct = 0; iAct < activationStepsNb.length; iAct++)
                            if ("ORDER_FULFILLED" === activationStepsNb[iAct].code)
                                switch (activationStepsNb[iAct].status) {
                                    case "":
                                        currentStatus.text($.i18n("subscription.activation.not_started"));
                                        step += "<li><p>" + $.i18n("subscription.activation.not_started") + "</p></li>";
                                        break;
                                    case "ONGOING":
                                        currentStatus.text($.i18n("subscription.activation.ongoing"));
                                        step += "<li><p>" + $.i18n("subscription.activation.ongoing") + "<br/>" + switchDate + "</p></li>";
                                        break;
                                    case "ERROR":
                                        currentStatus.text($.i18n("subscription.activation.error"));
                                        step += '<li class="error"><p>' + $.i18n("subscription.activation.error") + "</p></li>";
                                        break;
                                    case "CANCELED":
                                        currentStatus.text($.i18n("subscription.activation.canceled"));
                                        step += "<li><p>" + $.i18n("subscription.activation.canceled") + "</p></li>";
                                        break;
                                    default:
                                        currentStatus.text($.i18n("subscription.activation.done"));
                                        step += '<li class="done"><p>' + $.i18n("subscription.activation.done") + "</p></li>";
                                        break;
                                }
                        ongoingSteps.append(step);
                        ongoingStatus.fadeIn();
                    }
                    resolve(result);
                } else resolve(result);
            })
            .fail(function (result) {
                displayMessageAfterSubmit(subFixInternetError, null, "", $.i18n("utils.technical_error"));
                resolve(result);
            });
    });
}
function postOtoId(customerID) {
    var otoId = $("#otoId"),
        otoForm = $("#otoForm"),
        otoFormEditError = $("#otoFormEditError"),
        otoFormEditValid = $("#otoFormEditValid"),
        submitOto = $("#submitOto");
    if (submitOto.length)
        otoForm.on("submit", function (event) {
            event.preventDefault();
            if (validateForm(otoForm, submitOto)) {
                var payload = { zipCode: sessionStorage.getItem("zipcode"), otoId: otoId.val() };
                postOTOID(customerID, JSON.stringify(payload))
                    .done(function () {
                        otoForm.addClass("hidden");
                        displayMessageAfterEdit(otoFormEditValid, otoForm, submitOto, "big-edit", $.i18n("utils.valid.summary_success_oto"), false);
                    })
                    .fail(function (result) {
                        otoForm.addClass("hidden");
                        switch (result.responseJSON.errorCode) {
                            case "BAD_OTOID_FORMAT":
                                displayMessageAfterEdit(otoFormEditError, otoForm, submitOto, "big-edit", $.i18n("utils.error.summary_error_format"), true);
                                break;
                            case "OTO_NOT_ELIGIBLE":
                                displayMessageAfterEdit(otoFormEditError, otoForm, submitOto, "big-edit", $.i18n("utils.error.summary_error_noteligible"), true);
                                break;
                            default:
                                displayMessageAfterEdit(otoFormEditError, otoForm, submitOto, "big-edit", $.i18n("utils.error.summary_error_failed"), true);
                                break;
                        }
                    });
            }
        });
}
function autocompleteCity(zipField, cityField, errorContainer, submitCurrentForm, commonParams) {
    let cityNbAutocomplete = {
        element: document.querySelector("#" + cityField.cityFieldContainer),
        id: cityField.cityFieldId,
        required: true,
        minLength: 2,
        displayMenu: "overlay",
        name: cityField.cityFieldId,
        source: async (query, populateResults) => {
            const res = await getCityAPI($("#" + zipField.zipFieldId).val(), query, errorContainer, submitCurrentForm);
            populateResults(res.cities);
        },
        templates: {
            inputValue: (value) => {
                if (!value) return "";
                else return value.town;
            },
            suggestion: (value) => value.town,
        },
    };
    Object.assign(cityNbAutocomplete, commonParams);
    accessibleAutocomplete(cityNbAutocomplete);
}
function autocompleteHouseNb(zipField, cityField, streetField, houseNbField, errorContainer, submitCurrentForm, commonParams) {
    let houseNbAutocomplete = {
        element: document.querySelector("#" + houseNbField.houseNbFieldContainer),
        id: houseNbField.houseNbFieldId,
        required: true,
        displayMenu: "overlay",
        name: houseNbField.houseNbFieldId,
        source: async (query, populateResults) => {
            const res = await getHouseNbAPI($("#" + zipField.zipFieldId).val(), $("#" + cityField.cityFieldId).val(), $("#" + streetField.streetFieldId).val(), query, errorContainer, submitCurrentForm);
            populateResults(res.adresses);
        },
        templates: {
            inputValue: (value) => {
                if (!value) return "";
                return value.houseNumber;
            },
            suggestion: (value) => value.houseNumber,
        },
    };
    Object.assign(houseNbAutocomplete, commonParams);
    accessibleAutocomplete(houseNbAutocomplete);
}
function autocompleteStreet(zipField, cityField, streetField, errorContainer, submitCurrentForm, commonParams) {
    let streetAutocomplete = {
        element: document.querySelector("#" + streetField.streetFieldContainer),
        id: streetField.streetFieldId,
        required: true,
        minLength: 2,
        displayMenu: "overlay",
        name: streetField.streetFieldId,
        source: async (query, populateResults) => {
            const res = await getStreetAPI($("#" + zipField.zipFieldId).val(), $("#" + cityField.cityFieldId).val(), query, errorContainer, submitCurrentForm);
            populateResults(res.streets);
        },
        templates: {
            inputValue: (value) => {
                if (!value) return "";
                return value.streetName;
            },
            suggestion: (value) => value.streetName,
        },
    };
    Object.assign(streetAutocomplete, commonParams);
    accessibleAutocomplete(streetAutocomplete);
}
function autocompleteZipcode(zipField, cityField, errorContainer, submitCurrentForm, commonParams) {
    let zipCodeAutocomplete = {
        element: document.querySelector("#" + zipField.zipFieldContainer),
        id: zipField.zipFieldId,
        minLength: 2,
        maxLength: 4,
        name: zipField.zipFieldId,
        emptyField: document.querySelector("#" + cityField.cityFieldId),
        source: async (query, populateResults) => {
            const res = await getZipcodeAPI(query, errorContainer, submitCurrentForm);
            populateResults(res.cities);
        },
        templates: {
            inputValue: (value) => {
                if (!value) return "";
                else {
                    $("#" + cityField.cityFieldId)
                        .prev()
                        .addClass("show");
                    $("#" + cityField.cityFieldId).val(value.town);
                    return value.zipCode;
                }
            },
            suggestion: (value) => value.zipCode + " " + value.town,
        },
    };
    Object.assign(zipCodeAutocomplete, commonParams);
    accessibleAutocomplete(zipCodeAutocomplete);
}
function callAcs(zipField, streetField, cityField, houseNbField, errorContainer, submitCurrentForm, visibleArea, isAfterSubmit) {
    let commonParams = {
        required: true,
        tNoResults: () => $.i18n("utils.autocomplete.no_result"),
        tStatusNoResults: () => $.i18n("utils.autocomplete.no_result"),
        tStatusResults: (length, contentSelectedOption) => {
            const words = {
                result: 1 === length ? $.i18n("utils.autocomplete.result") : $.i18n("utils.autocomplete.results"),
                is: 1 === length ? $.i18n("utils.autocomplete.is") : $.i18n("utils.autocomplete.are"),
                available: 1 === length ? $.i18n("utils.autocomplete.available") : $.i18n("utils.autocomplete.available_plural"),
            };
            return length + " " + words.result + " " + words.is + " " + words.available + " " + contentSelectedOption;
        },
        tStatusQueryTooShort: (minQueryLength) => $.i18n("utils.autocomplete.min_char", minQueryLength),
        tStatusSelectedOption: (selectedOption, length, index) => $.i18n("utils.autocomplete.highlighted", selectedOption, index + 1, length),
        tAssistiveHint: () => $.i18n("utils.autocomplete.help"),
        displayMenu: "overlay",
    };
    autocompleteZipcode(zipField, cityField, errorContainer, submitCurrentForm, commonParams);
    autocompleteStreet(zipField, cityField, streetField, errorContainer, submitCurrentForm, commonParams, visibleArea, isAfterSubmit);
    autocompleteHouseNb(zipField, cityField, streetField, houseNbField, errorContainer, submitCurrentForm, commonParams, visibleArea, isAfterSubmit);
}
function displayBVR(result, favorOf, referencePayment, bvrReference, bankInfo) {
    var oBVRBank = result.bvrBank;
    if (oBVRBank) {
        favorOf.html('<span id="ibanRef">' + oBVRBank.bankPostNumber + "</span><br/>" + oBVRBank.bankName + "<br/>" + oBVRBank.bankAddress);
        referencePayment.html(oBVRBank.entrepriseName + "<br/>" + oBVRBank.entrepriseAddress);
        bvrReference.text(result.bvrReferenceNumber);
        bankInfo.removeClass("hidden").addClass("grid-3-small-2").fadeIn();
    }
}
function copyContent(trigger, content) {
    trigger.on("click", function () {
        copy(content);
        trigger.focus();
    });
}
function copy(element_id) {
    var aux = document.createElement("div");
    aux.setAttribute("contentEditable", true);
    aux.setAttribute("class", "a11y-hidden");
    aux.innerHTML = document.getElementById(element_id).innerHTML;
    document.body.appendChild(aux);
    window.getSelection().selectAllChildren(aux);
    document.execCommand("copy");
    document.body.removeChild(aux);
}
function bvrFormatter(bvrNum) {
    if (!bvrNum) return false;
    bvrNum = bvrNum.split("").reverse().join("");
    var v = bvrNum.replace(/[^\dA-Z]/g, ""),
        reg = new RegExp(".{5}", "g");
    bvrNum = v.replace(reg, function (a) {
        return a + " ";
    });
    bvrNum = bvrNum.split("").reverse().join("");
    return bvrNum;
}
function displayBalanceInfo(result, billingAccountID) {
    var currentBalance = $("#currentBalance"),
        balance = $("#balance"),
        overdueBlock = $("#overdueBlock"),
        overdueSinceBlock = $("#overdueSince"),
        overdueDate = $("#overdueDate"),
        paymentCenterLink = $("#paymentCenterLink"),
        billingOverviewError = $("#billingOverviewError"),
        balanceAmountDisplay = (result.totalAmount / 100).toFixed(2);
    currentBalance.find("strong").html("<span>CHF</span>" + balanceAmountDisplay);
    if (true === result.isPayable) paymentCenterLink.show();
    else paymentCenterLink.hide();
    balance.fadeIn().removeClass("hidden");
    if ("mobile" === sessionStorage.getItem("domain"))
        getPaymentPlanAPI(billingAccountID, billingOverviewError).then(function (resultGetPaymentPlan) {
            if (void 0 === resultGetPaymentPlan)
                getPaymentPlanEligibilityAPI(billingAccountID, billingOverviewError).then(function (resultGetPaymentPlanEligibility) {
                    if (void 0 !== resultGetPaymentPlanEligibility.termsOverview && resultGetPaymentPlanEligibility.termsOverview.length) {
                        $("#paymentPlanToggler").removeClass("hidden");
                        togglePaymentPlan($("#paymentPlanToggler"), $("#paymentPlanWrapper"), resultGetPaymentPlanEligibility, result.totalAmount, billingAccountID);
                    }
                });
            else {
                resultGetPaymentPlan.list_payment_plan_term_create.sort(orderByTermId);
                let nbPlannedPlan = searchInObject(resultGetPaymentPlan.list_payment_plan_term_create, { payment_plan_term_status: "PLANNED" });
                if (nbPlannedPlan.length)
                    loadPaymentPlanForm().then(function () {
                        $("#paymentPlanWrapper").removeClass("hidden");
                        $("#paymentPlanWrapper").focus();
                        $("#paymentPlanStateContainer").html("<p>" + $.i18n("billing.payment_plan.existing_plan", nbPlannedPlan.length, (nbPlannedPlan[0].term_amount / 100).toFixed(2)) + "</p>");
                    });
            }
            if (result.overdueAmount > 0 && true === result.debtor) {
                var overdueAmountDisplay = (result.overdueAmount / 100).toFixed(2);
                overdueBlock
                    .find("strong")
                    .addClass("alert")
                    .html("<span>CHF</span>" + overdueAmountDisplay);
                overdueDate.text(result.overdueDate);
                if (!isDateBeforeToday(result.overdueDate)) overdueSinceBlock.addClass("hidden");
                overdueBlock.removeClass("hidden").addClass("flex flex--start");
            }
        });
}
function managePaymentMeans(billingAccountID) {
    var managePaymentMean = $("#managePaymentMean"),
        selfCarePaymentMeans = $("#selfCarePaymentMeans");
    managePaymentMean.off("click").on("click", function () {
        if (selfCarePaymentMeans.is(":visible")) {
            selfCarePaymentMeans.fadeOut();
            managePaymentMean.attr("aria-expanded", "false");
            managePaymentMean.find("svg").attr("class", "add").find("use").attr("xlink:href", "#add");
        } else {
            var payload = { language: setDefaultLang() };
            if ("fix" === sessionStorage.getItem("domain")) callPostFixPaymentMeans(billingAccountID, payload);
            else callPostMobilePaymentMeansAPI(billingAccountID, payload);
        }
    });
}
function displayOwnerInfo(result, ownerIdentity, ownerAddress, ownerCountry, ownerEmail) {
    var oOwnerInfo = result.owner;
    if (oOwnerInfo) {
        var genderLabel = $.i18n("profile.gender." + oOwnerInfo.title.toLowerCase());
        var oOwnerAddress = oOwnerInfo.address;
        if (null !== oOwnerInfo.address) {
            var addressDisplay = "";
            if (oOwnerAddress.careOf) addressDisplay += oOwnerAddress.careOf + "<br/>";
            if (oOwnerAddress.street) addressDisplay += oOwnerAddress.street;
            if (oOwnerAddress.houseNumber) addressDisplay += " " + oOwnerAddress.houseNumber;
            if (oOwnerAddress.postalCode) addressDisplay += ", " + oOwnerAddress.postalCode;
            if (oOwnerAddress.city) addressDisplay += "<br/>" + oOwnerAddress.city;
        }
        if (null !== oOwnerInfo.language) ownerCountry.text(oOwnerInfo.language);
        if (null !== oOwnerInfo.email) ownerEmail.text(oOwnerInfo.email);
        ownerIdentity.text(genderLabel + " " + oOwnerInfo.firstName + " " + oOwnerInfo.lastName);
        ownerAddress.html(addressDisplay);
    }
}
function displayPayerInfo(result, payerIdentity, payerAddress, payerCountry, payerEmail) {
    var oPayerInfo = result.payer;
    if (oPayerInfo) {
        var genderLabel = $.i18n("profile.gender." + oPayerInfo.title.toLowerCase());
        var oPayerAddress = oPayerInfo.address;
        if (null !== oPayerInfo.address) {
            var addressDisplay = "";
            if (oPayerAddress.careOf) addressDisplay += oPayerAddress.careOf + "<br/>";
            if (oPayerAddress.street) addressDisplay += oPayerAddress.street;
            if (oPayerAddress.houseNumber) addressDisplay += " " + oPayerAddress.houseNumber;
            if (oPayerAddress.postalCode) addressDisplay += ", " + oPayerAddress.postalCode;
            if (oPayerAddress.city) addressDisplay += "<br/>" + oPayerAddress.city;
        }
        if (null !== oPayerInfo.language) payerCountry.text(oPayerInfo.language);
        if (null !== oPayerInfo.email) payerEmail.text(oPayerInfo.email);
        payerIdentity.text(genderLabel + " " + oPayerInfo.firstName + " " + oPayerInfo.lastName);
        payerAddress.html(addressDisplay);
    }
}
function displayPaymentQrCode(billingAccountID, domain, paymentQrCodeElement) {
    return getQrCodeAPI(billingAccountID, domain).then((qrBlob) => {
        paymentQrCodeElement.src = URL.createObjectURL(qrBlob);
        $("#qrCodeUnavailable").addClass("hidden");
    });
}
function subscribeDirectDebit(iframeURL, messageDiv) {
    var feedbackIframe = $(".feedback-iframe"),
        responsiveIframe = $("#iframeDD");
    responsiveIframe.html('<iframe src="' + iframeURL + '" title=""></iframe>').removeClass("hidden");
    window.addEventListener("message", receiveMessage, false);
    function receiveMessage(event) {
        if (event.data.toString().indexOf("directDebitSubscription") > -1) {
            var oFeedbackIframe = JSON.parse(event.data);
            switch (oFeedbackIframe.directDebitSubscription.status) {
                case "CANCELLED":
                    feedbackIframe.html('<svg aria-hidden="true" focusable="false" class="ic-error"><use xlink:href="#ic-error"></use></svg><br/>' + $.i18n("utils.error.credit_card_cancelled"));
                    manageDisplayBlocks(true, messageDiv);
                    break;
                case "NOT_AUTHORIZED":
                case "ERROR":
                case "TRANSACTION_NOT_FOUND":
                    feedbackIframe.html('<svg aria-hidden="true" focusable="false" class="ic-error"><use xlink:href="#ic-error"></use></svg><br/>' + $.i18n("utils.error.credit_card_error"));
                    manageDisplayBlocks(true, messageDiv);
                    break;
                default:
                    feedbackIframe.html('<svg aria-hidden="true" focusable="false" class="validated"><use xlink:href="#validated"></use></svg><br/>' + $.i18n("utils.valid.credit_card_success"));
                    manageDisplayBlocks(false, messageDiv);
                    getPayerInf(sessionStorage.getItem("bid"));
                    break;
            }
        }
    }
}
function manageDisplayBlocks(isError, messageDiv) {
    var feedbackIframe = $(".feedback-iframe"),
        responsiveIframe = $(".responsive-iframe");
    feedbackIframe.parent().removeClass("hidden");
    responsiveIframe.addClass("hidden");
    $(".close-edit").on("click", function () {
        messageDiv.removeClass("big-edit");
        messageDiv.parent().removeClass("big-edit");
        clearMessages(messageDiv);
        if (!isError) {
            $("#changeInvoicingMethodForm").hide();
            $("#invoicingVisibleArea").show();
        }
    });
}
function updateBillingListToggler() {
    var billingAccountContent = $("#billingAccountContent"),
        billingList = $("#billingList"),
        balance = $("#balance"),
        overdueBlock = $("#overdueBlock"),
        favor = $("#favor"),
        bankInfo = $("#bankInfo"),
        accountSummary = $("#accountSummary"),
        billingListToggler = $("#billingListToggler"),
        dashboardBilling = $("#dashboardBilling"),
        billingOverviewError = $("#billingOverviewError"),
        billingPayError = $("#billingPayError"),
        paymentPlanToggler = $("#paymentPlanToggler"),
        paymentPlanWrapper = $("#paymentPlanWrapper"),
        globalError = $("#globalError");
    var labelInYourFavor = $.i18n("billing.balance.in_your_favor_" + BRAND.name),
        labelInOurFavor = $.i18n("billing.balance.in_our_favor");
    billingList.find("button").each(function (ind, elem) {
        $(elem).on("click", function (e) {
            billingList.find("button").removeClass("active").removeAttr("aria-current");
            globalError.empty().hide();
            billingOverviewError.empty().hide();
            billingPayError.empty().hide();
            paymentPlanToggler.addClass("hidden");
            paymentPlanWrapper.addClass("hidden");
            overdueBlock.removeClass("flex flex--start").addClass("hidden");
            sessionStorage.setItem("bid", $(elem).attr("id"));
            $(elem).addClass("active").attr("aria-current", "true");
            billingListToggler.find(".current").html($(elem).html());
            if (billingListToggler.is(":visible") && void 0 !== e.originalEvent) billingListToggler.focus();
            else $(elem).focus();
            if ($(window).width() < 1016 || billingList.children("li").length > 4) {
                billingList.fadeOut();
                billingListToggler.removeClass("active").attr("aria-expanded", "false");
            }
            if ("" !== $(elem).attr("data-domain")) {
                $("body").addClass("body--mobile");
                $("#wrapper").removeClass("hidden").focus();
                $("#loadingMsg").addClass("hidden");
                sessionStorage.setItem("domain", $(elem).attr("data-domain"));
            }
            if (billingAccountContent.length) {
                $(window).off("hashchange");
                generateA11yTabs();
                balance.hide().addClass("hidden");
                bankInfo.hide().removeClass("grid-4-small-2");
                accountSummary.empty();
                getBillingTabContent($(elem).attr("id"));
                if ("false" === $(elem).attr("data-debtor") && "0" !== $(elem).attr("data-balance")) favor.text(labelInYourFavor).removeClass("hidden");
                else if ("true" === $(elem).attr("data-debtor") && "0" !== $(elem).attr("data-balance")) favor.text(labelInOurFavor).removeClass("hidden");
                else favor.addClass("hidden");
                billingAccountContent.show();
                dashboardBilling.fadeIn().removeClass("hidden");
                var managePaymentMean = $("#managePaymentMean"),
                    selfCarePaymentMeans = $("#selfCarePaymentMeans");
                if (selfCarePaymentMeans.is(":visible")) {
                    selfCarePaymentMeans.fadeOut();
                    managePaymentMean.attr("aria-expanded", "false");
                    managePaymentMean.find("svg").attr("class", "add").find("use").attr("xlink:href", "#add");
                }
                if (!window.location.hash) $(".js-tablist__item").find("a").first(":focusable").trigger("click");
                onHashChange();
                $(".close-edit").trigger("click");
                if ("post" === BRAND.name) {
                    brandIcon("user", BRAND.name);
                    brandIcon("marker", BRAND.name);
                    brandIcon("globe", BRAND.name);
                    brandIcon("mail", BRAND.name);
                }
            }
        });
    });
}
function getBillingTabContent(billingAccountID) {
    return { accountSummary: getAccSum(billingAccountID), payerManagement: getPayerInf(billingAccountID) };
}
function loadConfirmation(confirmTarget, confirmItemPath, confirmParagraph, i18nParagraph) {
    return new Promise(function (resolve, reject) {
        var loadConfirmation = loadPath(confirmTarget, confirmItemPath);
        loadConfirmation.then(function (result) {
            if ("success" === result) {
                $(confirmParagraph).html(i18nParagraph);
                resolve("success");
            }
        });
    });
}
function loadDomainOption() {
    return new Promise(function (resolve, reject) {
        var optionDomain = $("#optionDomain"),
            domainFilePath = PATH_FORM_COMP + "profile/domain-choice.html",
            loadDomainOption = loadPath(optionDomain, domainFilePath);
        loadDomainOption.then(function (result) {
            if ("success" === result) resolve("success");
        });
    });
}
function loadManagePaymentMethod(managePaymentTarget, managePaymentItemPath) {
    return new Promise(function (resolve, reject) {
        var loadManagePaymentMethod = loadPath(managePaymentTarget, managePaymentItemPath);
        loadManagePaymentMethod.then(function (result) {
            if ("success" === result) resolve("success");
        });
    });
}
function loadOnTrigger(event, fieldTrigger, targetDisplay, displayedItemPath) {
    return new Promise(function (resolve, reject) {
        if ($(fieldTrigger).is("select"))
            if (void 0 !== displayedItemPath[$(fieldTrigger)[0].selectedIndex])
                loadPath(targetDisplay, displayedItemPath[$(fieldTrigger)[0].selectedIndex]).then(function (result) {
                    if ("success" === result) resolve($(fieldTrigger)[0].selectedIndex);
                });
            else
                loadPath(targetDisplay, displayedItemPath[0]).then(function (result) {
                    if ("success" === result) resolve(0);
                });
        else if ($(fieldTrigger).is(":radio")) {
            if (targetDisplay.length > 1) targetDisplay = targetDisplay[$(fieldTrigger).index($(fieldTrigger).filter(":checked"))];
            loadPath(targetDisplay, displayedItemPath[$(fieldTrigger).index($(fieldTrigger).filter(":checked"))]).then(function (result) {
                if ("success" === result) resolve($(fieldTrigger).index($(fieldTrigger).filter(":checked")));
            });
        } else if ($(fieldTrigger).is(":checkbox") && $(fieldTrigger).prop("checked"))
            loadPath(targetDisplay, displayedItemPath[0]).then(function (result) {
                if ("success" === result) resolve(0);
            });
        else {
            targetDisplay.empty();
            resolve("");
        }
    });
}
function loadPage(containerLoad, pagePath) {
    return new Promise(async function (resolve, reject) {
        var cleanUrl = pagePath.replace(".html", "");
        cleanUrl = cleanUrl.split("#")[0];
        cleanUrl = cleanUrl.split("?")[0];
        if ("/" === cleanUrl || "" === cleanUrl) pageUrl = "index";
        else pageUrl = cleanUrl;
        if ("payment" !== pageUrl) {
            if (sessionStorage.getItem("page") && "payment" === sessionStorage.getItem("page"))
                $("#mainNav").load("../inc/nav-content.html", function (response, status, jqXHR) {
                    if (void 0 !== jqXHR && void 0 !== jqXHR.responseText && jqXHR.responseText.indexOf("<!DOCTYPE html>") > -1 && jqXHR.responseText.indexOf("cas-external") > -1) window.location.href = SERVICE_URL.url;
                    else if ("success" === status && void 0 !== response) $("#mainNav").i18n();
                    else window.location.href = SERVICE_URL.url;
                });
            let filePath = "../inc/pages/" + pageUrl + ".html";
            if (null === sessionStorage.getItem("isMfaConfigShown"))
                try {
                    const resultMfa = await getIsMfaConfigured();
                    if (true !== resultMfa) {
                        filePath = "../inc/pages/mfa-configuration.html";
                        pageUrl = "mfaConfig";
                    }
                    sessionStorage.setItem("isMfaConfigShown", true);
                } catch (error) {
                    sessionStorage.setItem("isMfaConfigShown", true);
                    console.error(error);
                }
            containerLoad.load(filePath, function (response, status, jqXHR) {
                if (void 0 !== jqXHR && void 0 !== jqXHR.responseText && jqXHR.responseText.indexOf("<!DOCTYPE html>") > -1 && jqXHR.responseText.indexOf("cas-external") > -1) window.location.href = SERVICE_URL.url;
                else if ("success" === status && void 0 !== response) {
                    translatePage();
                    containerLoad.i18n();
                    floatingLabels();
                    $("#mainNav a").removeAttr("class");
                    $("#mainNav a").removeAttr("aria-current");
                    if ($('#mainNav a[href^="' + pageUrl + '"]').length) $('#mainNav a[href^="' + pageUrl + '"]').attr({ "aria-current": "page", class: "active" });
                    if ((sessionStorage.getItem("ftSize") && sessionStorage.getItem("ftSize") >= 27) || $(window).width() < 1016)
                        if ($("#navContainer").hasClass("open")) closeMenu($("#closeMenu"), $("#toggleMenu"), $("#navContainer"), $("#wrapper"), false);
                    getCustomerInfoAPI().then(function () {
                        switch (pageUrl) {
                            case "subscription":
                                getSubscriptionsListAPI();
                                break;
                            case "billing":
                                displayBillingList();
                                break;
                            case "offers":
                                displayOffers();
                                break;
                            case "orders":
                                displaySubOrders();
                                break;
                            case "profile":
                                displayProfilePage();
                                break;
                            case "mfaConfig":
                                displayMfaConfigurationPage();
                                break;
                            default:
                                displayBillingList();
                                getSubscriptionsListAPI();
                                break;
                        }
                        resolve("success");
                    });
                } else {
                    window.location.href = SERVICE_URL.url;
                    reject("load failed");
                }
            });
            sessionStorage.setItem("page", "");
        } else sessionStorage.setItem("page", "payment");
    });
}
function loadPath(containerLoad, filePath) {
    return new Promise(function (resolve, reject) {
        containerLoad
            .load(filePath, function (response, status, jqXHR) {
                if (void 0 !== jqXHR && void 0 !== jqXHR.responseText && jqXHR.responseText.indexOf("<!DOCTYPE html>") > -1 && jqXHR.responseText.indexOf("cas-external") > -1) window.location.href = SERVICE_URL.url;
                else if ("success" === status && void 0 !== response) {
                    containerLoad.i18n();
                    floatingLabels();
                    resolve("success");
                } else {
                    window.location.href = SERVICE_URL.url;
                    reject("load failed");
                }
            })
            .hide()
            .fadeIn("slow");
    });
}
function loadSubTabs(currentDomain, previousDomain, subID, lang, paymentType) {
    return new Promise(function (resolve, reject) {
        $(window).off("hashchange");
        $("#subTabsContainer").empty();
        $(".js-tabcontent--fix").empty();
        var loadSubTabs = loadPath($("#subTabsContainer"), PATH_JS_COMP + "sub-tabs-" + currentDomain + ".html");
        loadSubTabs.then(function (result) {
            if ("success" === result) {
                generateA11yTabs();
                if ((void 0 !== previousDomain && currentDomain !== previousDomain) || !window.location.hash)
                    $(".js-tablist__item.tab" + currentDomain)
                        .find("a")
                        .first(":focusable")
                        .trigger("click");
                else {
                    var cleanHash = window.location.hash.substring(window.location.hash.indexOf("#") + 1, window.location.hash.lastIndexOf("#"));
                    if ("#" == cleanHash) cleanHash = window.location.hash.replace("#", "");
                    $(".js-tablist__item.tab" + currentDomain)
                        .find('a[aria-controls="' + cleanHash + '"]')
                        .trigger("click");
                }
                if ("fix" === currentDomain) {
                    const fixTabs = $("#tabListFix");
                    "ACTIVE" !== sessionStorage.getItem("subStatus") ? fixTabs.children().has("#label_subFixOptions").remove() : "";
                    var targetPathId = [$("#subFixOverview"), $("#subFixTV"), $("#subFixInternet"), $("#subFixTel"), $("#subFixSupport"), $("#subFixOptions")];
                    var pathSubDetail = [
                        PATH_JS_COMP + "sub-fix-overview-tab.html",
                        PATH_JS_COMP + "sub-fix-tv-tab.html",
                        PATH_JS_COMP + "sub-fix-internet-tab.html",
                        PATH_JS_COMP + "sub-fix-tel-tab.html",
                        PATH_JS_COMP + "sub-fix-support-tab.html",
                        PATH_JS_COMP + "sub-fix-options-tab.html",
                    ];
                    customOnChange(':radio[name="tabLoader"]', targetPathId, pathSubDetail, loadFixTabsContent, subID);
                } else {
                    var targetPathId = [$("#subOverview"), $("#subUsage"), $("#subConfig"), $("#subOptions"), $("#subRoaming")];
                    var pathSubDetail = [PATH_JS_COMP + "sub-overview-tab.html", PATH_JS_COMP + "sub-usage-tab.html", PATH_JS_COMP + "sub-config-tab.html", PATH_JS_COMP + "sub-options-tab.html", PATH_JS_COMP + "sub-roaming-tab.html"];
                    customOnChange(':radio[name="tabLoader"]', targetPathId, pathSubDetail, loadMobileTabsContent, subID, lang, paymentType);
                }
                $(window).on("hashchange", function () {
                    onHashChange();
                });
                resolve("success");
            }
        });
    });
}
function buildSubOfferList(customersList) {
    return new Promise(function (resolve, reject) {
        if (customersList.length > 0) {
            var subListItem = "",
                subOfferList = $("#subOfferList"),
                subListToggler = $("#subListToggler"),
                labelDetail = $.i18n("subscription.list.detail");
            customersList.sort(orderByDisplayOrder);
            for (var i = 0; i < customersList.length; i++) {
                var subId = customersList[i].id,
                    domain = customersList[i].domain.toLowerCase(),
                    userFirstName = customersList[i].firstName;
                subListItem +=
                    '<li>                    <button id="' +
                    subId +
                    '" class="btn btn--mobile" aria-label="' +
                    userFirstName +
                    ", " +
                    labelDetail +
                    '">                        <svg aria-hidden="true" focusable="false" class="' +
                    domain +
                    '">                            <use xlink:href="#' +
                    domain +
                    '"></use>                        </svg>                        <span>' +
                    userFirstName +
                    "</span>                    </button>                </li>";
            }
            subOfferList.html(subListItem).parent().removeClass("hidden");
            if ($(window).width() < 1016 || subOfferList.children("li").length > 3) {
                subOfferList.addClass("dropdown__list item-list").removeClass("grid-4-large-3 has-gutter-l dropdown__visible");
                subListToggler.removeClass("hidden-desktop");
                dropdownToggle(subListToggler, subOfferList, true);
            } else {
                subListToggler.addClass("hidden-desktop");
                subOfferList.removeClass("dropdown__list item-list").addClass("grid-4-large-3 has-gutter-l dropdown__visible");
            }
            resolve();
        }
    });
}
function displaySubOffer(customers, customerID, isDashboard) {
    var subItem = (mainZone = offerContent = ""),
        offersList = $("#offersList"),
        topBanner = $("#topBanner"),
        sideBanners = $("#sideBanners"),
        subID = "",
        currentLang = setDefaultLang().toLowerCase();
    for (var iCustomer = 0; iCustomer < customers.length; iCustomer++) {
        var customer = customers[iCustomer],
            sub = customer.subscriptions;
        if (isDashboard)
            for (var iSub = 0; iSub < sub.length; iSub++) {
                if (sub[iSub].id == customerID) {
                    subID = customerID;
                    customerID = customer.id;
                }
                if (sub[iSub].id == subID)
                    if (sub[iSub].activities.length) {
                        for (var iActivity = 0; iActivity < sub[iSub].activities.length; iActivity++) {
                            var currentActivity = sub[iSub].activities[iActivity];
                            if (true === currentActivity.personal && null !== currentActivity.personalOffer) {
                                var currentOffer = currentActivity.personalOffer;
                                offerContent +=
                                    '<div class="one-half space-bottom">                                    <a href="' +
                                    currentActivity.url[currentLang] +
                                    '" target="_blank">                                        <picture>                                            <source media="(max-width:768px)" srcset="' +
                                    currentOffer.mobileImageUrl[currentLang] +
                                    '">                                            <source media="(min-width:769px)" srcset="' +
                                    currentOffer.desktopImageUrl[currentLang] +
                                    '">                                            <img src="' +
                                    currentOffer.desktopImageUrl[currentLang] +
                                    '" alt="" class="fullwidth space-bottom" aria-labelledby="descPromo' +
                                    iActivity +
                                    '">                                        </picture>                                    </a>                                </div>                                <p class="a11y-hidden" id="descPromo' +
                                    iActivity +
                                    '">' +
                                    currentOffer.alt[currentLang] +
                                    "</p>";
                            } else if ("MARKETING_MESSAGE" !== currentActivity.communicationType) {
                                var btnLabel = "offers.ret.renew_plan";
                                if ("TO_POSTPAID" === currentActivity.salesActivityType) btnLabel = "offers.ret.pre_to_post";
                                if ("salt" === BRAND.name) offerContent += "";
                                else offerContent += '<div class="full space-bottom"><a href="' + currentActivity.url[currentLang] + '" class="btn btn--secondary btn--centered space-bottom">' + $.i18n(btnLabel) + "</a></div>";
                            }
                        }
                        if ("salt" === BRAND.name)
                            if (true === hasPersonalOffer) offerContent += '<p class="space-bottom">' + $.i18n("offers.ret.perso_offer") + "</p>";
                            else offerContent += '<p class="space-bottom">' + $.i18n("offers.ret.no_perso_offer") + "</p>";
                    }
            }
        if (customer.id == customerID) {
            if (customer.activities.length)
                for (var iCustAct = 0; iCustAct < customer.activities.length; iCustAct++)
                    if (true === customer.activities[iCustAct].personal && null !== customer.activities[iCustAct].personalOffer) {
                        var currentOffer = customer.activities[iCustAct].personalOffer;
                        mainZone +=
                            '<a href="' +
                            customer.activities[iCustAct].url[currentLang] +
                            '" target="_blank">                            <picture>                                <source media="(max-width:768px)" srcset="' +
                            currentOffer.mobileImageUrl[currentLang] +
                            '">                                <source media="(min-width:769px)" srcset="' +
                            currentOffer.desktopImageUrl[currentLang] +
                            '">                                <img src="' +
                            currentOffer.desktopImageUrl[currentLang] +
                            '" alt="" class="fullwidth space-bottom" aria-labelledby="mainPromo' +
                            iCustAct +
                            '">                            </picture>                            </a>                            <p class="a11y-hidden" id="mainPromo' +
                            iCustAct +
                            '">' +
                            currentOffer.alt[currentLang] +
                            $.i18n("utils.labels.new_window") +
                            "</p>";
                    } else if (!isDashboard && "MARKETING_MESSAGE" !== customer.activities[iCustAct].communicationType)
                        if ("salt" === BRAND.name) mainZone += $.i18n("offers.acq.new");
                        else if ("sky" === BRAND.name) {
                            const portalUrlSky = APP_URL.portalUrl + "/" + currentLang;
                            mainZone += '<a href="' + portalUrlSky + '" class="btn btn--secondary space-bottom space-right">' + $.i18n("utils.labels.add_line") + "</a>";
                        } else {
                            mainZone += '<a href="' + customer.activities[iCustAct].url[currentLang] + '" class="btn btn--secondary space-bottom space-right">' + $.i18n("utils.labels.add_line") + "</a>";
                            if ("lidl" === BRAND.name || "post" === BRAND.name)
                                mainZone += '<a href="' + customer.activities[iCustAct].url[currentLang] + '&process=SIM_ACTIVATION" class="btn btn--secondary space-bottom">' + $.i18n("offers.acq.sim_activation") + "</a>";
                        }
            for (var iSub = 0; iSub < sub.length; iSub++) {
                var subActivity = "";
                if (void 0 !== sub[iSub].number && null !== sub[iSub].number) {
                    subActivity +=
                        '<h2 class="space-top underlined flex flex--center"><span>' +
                        prettifyPhoneNumber(sub[iSub].number) +
                        " - " +
                        customer.firstName +
                        " " +
                        customer.lastName +
                        '</span></h2>                        <div class="grid-2-small-1 has-gutter-l">';
                    if ((("RETENTION" === sub[iSub].phase || "EARLY_RETENTION" === sub[iSub].phase) && false === sub[iSub].rejected) || ("RETENTION" !== sub[iSub].phase && "EARLY_RETENTION" !== sub[iSub].phase)) {
                        var hasPersonalOffer = false;
                        if (sub[iSub].activities.length) {
                            for (var iActivity = 0; iActivity < sub[iSub].activities.length; iActivity++) {
                                var currentActivity = sub[iSub].activities[iActivity];
                                if (true === currentActivity.personal && null !== currentActivity.personalOffer) {
                                    var currentOffer = currentActivity.personalOffer,
                                        btnLabel = "offers.ret.see_renewal_offers";
                                    hasPersonalOffer = true;
                                    if ("TO_POSTPAID" === currentActivity.salesActivityType) btnLabel = "offers.ret.pre_to_post_personalized";
                                    subActivity +=
                                        '<div class="one-half space-bottom">                                        <a href="' +
                                        currentActivity.url[currentLang] +
                                        '" target="_blank">                                            <picture>                                                <source media="(max-width:768px)" srcset="' +
                                        currentOffer.mobileImageUrl[currentLang] +
                                        '">                                                <source media="(min-width:769px)" srcset="' +
                                        currentOffer.desktopImageUrl[currentLang] +
                                        '">                                                <img src="' +
                                        currentOffer.desktopImageUrl[currentLang] +
                                        '" alt="" class="fullwidth space-bottom" aria-labelledby="descPromo' +
                                        iActivity +
                                        '">                                            </picture>                                        </a>                                    </div>                                    <p class="a11y-hidden" id="descPromo' +
                                        iActivity +
                                        '">' +
                                        currentOffer.alt[currentLang] +
                                        $.i18n("utils.labels.new_window") +
                                        "</p>";
                                } else if ("MARKETING_MESSAGE" !== currentActivity.communicationType) {
                                    var btnLabel = "offers.ret.renew_plan";
                                    if ("TO_POSTPAID" === currentActivity.salesActivityType) btnLabel = "offers.ret.pre_to_post";
                                    if ("salt" === BRAND.name) subActivity += "";
                                    else subActivity += '<div class="full space-bottom"><a href="' + currentActivity.url[currentLang] + '" class="btn btn--secondary btn--centered space-bottom">' + $.i18n(btnLabel) + "</a></div>";
                                }
                            }
                            if ("salt" === BRAND.name)
                                if (true === hasPersonalOffer) subActivity += '<p class="space-bottom">' + $.i18n("offers.ret.perso_offer") + "</p>";
                                else subActivity += '<p class="space-bottom">' + $.i18n("offers.ret.no_perso_offer") + "</p>";
                        } else {
                            let retDate = sub[iSub].earlyRetentionStartDate;
                            if (void 0 === retDate) retDate = sub[iSub].retentionStartDate;
                            if (void 0 !== retDate && "gomo" !== BRAND.name) subActivity += '<p class="space-bottom">' + $.i18n("offers.ret.ret_date_" + BRAND.name, retDate) + "</p>";
                        }
                    } else if (true === sub[iSub].rejected) subActivity += '<p class="space-bottom">' + $.i18n("offers.ret.rejected") + "</p>";
                    subActivity += "</div>";
                }
                subItem += subActivity;
            }
        }
    }
    if (!isDashboard) offersList.html(mainZone + subItem);
    else {
        topBanner.html(mainZone);
        sideBanners.html(offerContent);
    }
}
function displayOffers() {
    if ($("#offersList").length) {
        var payload = { zones: ["OFFER_CUSTOMER", "OFFER_SUBSCRIPTION_1", "OFFER_SUBSCRIPTION_2"] };
        postOffersAPI(payload, $("#globalError")).then(function (resultOffer) {
            if (resultOffer.customers.length)
                buildSubOfferList(resultOffer.customers).then(function () {
                    triggerDisplaySubOffer(resultOffer.customers);
                });
        });
        $("#wrapper").removeClass("hidden").focus();
        $("#loadingMsg").addClass("hidden");
    }
}
function triggerDisplaySubOffer(customers) {
    var subOfferList = $("#subOfferList"),
        subListToggler = $("#subListToggler"),
        urlParams = new URLSearchParams(location.search);
    subOfferList.find("button").each(function (ind, elem) {
        $(elem).click(function (e) {
            subOfferList.find("button").removeClass("active").removeAttr("aria-current");
            $(elem).addClass("active").attr("aria-current", "true");
            if (subListToggler.is(":visible") && void 0 !== e.originalEvent) subListToggler.focus();
            else $(elem).focus();
            displaySubOffer(customers, $(elem).attr("id"), false);
            if ($(window).width() < 1016 || subOfferList.children("li").length > 3) {
                subListToggler.find(".current").html($(elem).html());
                subOfferList.fadeOut();
                subListToggler.removeClass("active").attr("aria-expanded", "false");
            } else subListToggler.find(".current").html($(elem).html());
        });
        if (urlParams.get("sub") && $("#" + urlParams.get("sub")).length)
            $("#" + urlParams.get("sub"))
                .trigger("click")
                .addClass("active");
        else if (sessionStorage.getItem("subid") && $("#" + sessionStorage.getItem("subid")).length)
            $("#" + sessionStorage.getItem("subid"))
                .trigger("click")
                .addClass("active");
        else subOfferList.find("button").first().trigger("click").addClass("active");
    });
}
function displayCancelConfirm(btnAction, subId, optionList) {
    let optionCode = btnAction.attr("data-code"),
        removalDate = btnAction.attr("data-removal-date"),
        initialBtnAction = $.parseHTML(btnAction.prop("outerHTML")),
        buttonsHTML = $.parseHTML(btnAction.parent().prop("innerHTML").trim());
    if ($(initialBtnAction).hasClass("action__configure")) {
        btnAction.parent().html('<button class="btn btn--secondary-reversed action__cancel">' + $.i18n("utils.labels.cancel") + "</button>");
        btnAction.remove();
        $(".action__cancel").focus();
    } else {
        let impactDisplay = "";
        if ($(initialBtnAction).hasClass("action__upgrade")) impactDisplay = displayImpact(optionCode, optionList);
        btnAction
            .parent()
            .html(
                impactDisplay + '<button class="btn btn--secondary action__confirm">' + $.i18n("utils.labels.confirm") + '</button><button class="btn btn--secondary-reversed action__cancel">' + $.i18n("utils.labels.cancel") + "</button>"
            );
        btnAction.remove();
        if ($("#impactOption").length) $("#impactOption").focus();
        else $(".action__confirm").focus();
        $(".action__confirm")
            .off("click")
            .on("click", function () {
                var $parent = $(this).parent(),
                    confirmContainer = $(this).parents(".highlight");
                confirmContainer.addClass("loading");
                if ($(initialBtnAction).hasClass("action__add") || $(initialBtnAction).hasClass("action__upgrade"))
                    postOptionsAPI(subId, optionCode).then(
                        function (result) {
                            if ("success" === result) {
                                let updatedStatus = { id: subId, optionCode: optionCode, status: { action: "add", result: "success" } };
                                setTimeout(() => {
                                    getOptionsAPI(subId, updatedStatus).then(function (resultOptions) {
                                        confirmContainer.removeClass("loading");
                                        manageOptionAction(subId, resultOptions);
                                    });
                                }, 2e3);
                            } else confirmContainer.removeClass("loading");
                        },
                        function (reject) {
                            confirmContainer.removeClass("loading");
                            switch (reject) {
                                case "CM_ALTER_PACKAGE_ERROR":
                                    $parent.empty();
                                    $parent.append(
                                        '<p id="err' +
                                        subId +
                                        optionCode +
                                        '" class="info-sub info-sub--option info-sub--error" tabindex="-1">                                <svg aria-hidden="true" focusable="false" class="ic-error">                                    <use xlink:href="#ic-error"></use>                                </svg>' +
                                        $.i18n("subscription.option.technical_error") +
                                        "                            </p>"
                                    );
                                    $parent.find("#err" + subId + optionCode).focus();
                                    break;
                                case "PACKAGE_CHANGE_VALIDATION_ERROR":
                                    $parent.empty();
                                    $parent.append(
                                        '<p id="err' +
                                        subId +
                                        optionCode +
                                        '" class="info-sub info-sub--option info-sub--error" tabindex="-1">                                <svg aria-hidden="true" focusable="false" class="ic-error">                                    <use xlink:href="#ic-error"></use>                                </svg>' +
                                        $.i18n("subscription.option.incoming") +
                                        "                            </p>"
                                    );
                                    $parent.find("#err" + subId + optionCode).focus();
                                    break;
                                case "ADD_VTI_OPTION_ERROR":
                                    $parent.empty();
                                    $parent.append(
                                        '<p id="err' +
                                        subId +
                                        optionCode +
                                        '" class="info-sub info-sub--option info-sub--error" tabindex="-1">                                <svg aria-hidden="true" focusable="false" class="ic-error">                                    <use xlink:href="#ic-error"></use>                                </svg>' +
                                        $.i18n("subscription.option.contact_us", $(initialBtnAction).attr("data-name")) +
                                        "                            </p>"
                                    );
                                    $parent.find("#err" + subId + optionCode).focus();
                                    break;
                                default:
                                    break;
                            }
                        }
                    );
                else
                    removeOptionsAPI(subId, optionCode, removalDate).then(function (result) {
                        if ("success" === result) {
                            let updatedStatus = { id: subId, optionCode: optionCode, status: { action: "remove", result: "success" } };
                            setTimeout(() => {
                                getOptionsAPI(subId, updatedStatus).then(function (resultOptions) {
                                    confirmContainer.removeClass("loading");
                                    manageOptionAction(subId, resultOptions);
                                });
                            }, 2e3);
                        } else confirmContainer.removeClass("loading");
                    });
            });
    }
    $(".action__cancel")
        .off("click")
        .on("click", function () {
            var $parent = $(this).parent();
            $optionContainer = $(this).parents(".highlight");
            $parent.empty();
            var buttons = $(buttonsHTML[0]).prop("outerHTML");
            if (void 0 !== $(buttonsHTML[1]).prop("outerHTML")) buttons += $(buttonsHTML[1]).prop("outerHTML");
            $parent.html(buttons);
            $parent.find("button").eq(0).focus();
            if ($optionContainer.find($(".configurable-option"))) $optionContainer.find($(".configurable-option")).empty();
            manageOptionAction(subId, optionList);
        });
}
function displayImpact(optionCode, optionList) {
    let aImpacts,
        currentLang = setDefaultLang();
    for (let iFamily = 0; iFamily < optionList.families.length; iFamily++)
        if ("OTHER" !== optionList.families[iFamily].code) {
            const currentFamily = optionList.families[iFamily];
            for (let iOption = 0; iOption < currentFamily.packages.length; iOption++) {
                const currentOption = currentFamily.packages[iOption];
                if (currentOption.code === optionCode) {
                    aImpacts = currentOption.upgradablePackages;
                    if (void 0 !== aImpacts && aImpacts.length) {
                        let impactedPkg = '<div id="impactOption" class="space-bottom--thin align-left" tabindex="-1">';
                        if (aImpacts.length > 1) impactedPkg += '<p class="space-bottom--thin">' + $.i18n("subscription.option.impact_remove") + "</p><ul>";
                        for (let iImpact = 0; iImpact < aImpacts.length; iImpact++) {
                            const currentImpact = aImpacts[iImpact];
                            let impactedObj = searchInObject(currentFamily.packages, { code: currentImpact });
                            if (impactedObj.length)
                                if (aImpacts.length < 2) {
                                    currentName = searchInObject(impactedObj[0].commercialTexts, { context: "COMMERCIAL_NAME" });
                                    impactedPkg += '<p class="space-bottom--thin">' + $.i18n("subscription.option.impact_remove") + " " + currentName[0].texts[currentLang] + "</p>";
                                } else {
                                    currentName = searchInObject(impactedObj[0].commercialTexts, { context: "COMMERCIAL_NAME" });
                                    impactedPkg += "<li>" + currentName[0].texts[currentLang] + "</li>";
                                }
                        }
                        if (aImpacts.length > 1) impactedPkg += "</ul>";
                        impactedPkg += "</div>";
                        return impactedPkg;
                    }
                }
            }
        }
}
function manageOptionAction(subId, optionList) {
    $(".action").each(function (i, e) {
        var btnAction = $(e).find("button");
        btnAction.each(function (ind, el) {
            $(el)
                .off("click")
                .on("click", function () {
                    var $parent = $(el).parent();
                    displayCancelConfirm($(el), subId, optionList);
                    if ($(el).hasClass("action__configure")) configureOption(subId, $(el).attr("data-code"), $parent);
                });
        });
    });
}
function addPaymentMethod(globalError, submitCurrentForm, accountID) {
    $("#addPaymentMethod")
        .off("click")
        .on("click", function (e) {
            e.preventDefault();
            $(this).attr("disabled", "disabled");
            postAddPaymentMethodAPI(globalError, submitCurrentForm, accountID);
            return false;
        });
}
function displayInstantPayFee() {
    let acceptInstantPayFee = $("#acceptInstantPayFee"),
        submitBalancePayment = $("#submitBalancePayment"),
        containerPayExtraFee = $("#containerPayExtraFee"),
        containerAcceptInstantPayFee = $("#containerAcceptInstantPayFee"),
        containerNotifyExtraFeeInstantPay = $("#containerNotifyExtraFeeInstantPay");
    containerPayExtraFee.removeClass("hidden");
    containerAcceptInstantPayFee.removeClass("hidden");
    containerNotifyExtraFeeInstantPay.show();
    submitBalancePayment.prop("disabled", true);
    acceptInstantPayFee.on("change", (e) => {
        e.preventDefault();
        submitBalancePayment.prop("disabled", !acceptInstantPayFee.is(":checked"));
    });
}
function displayStoredPaymentMethod(SPM, paymentListContainer) {
    var spmHTML = "",
        urlParams = new URLSearchParams(location.search),
        expiry = "";
    if (SPM.length) {
        spmHTML =
            '        <fieldset>            <legend class="space-bottom--thin">                <strong>' +
            $.i18n("payment.prepay.select_refill_type") +
            '</strong>                <span aria-hidden="true" class="label">*</span>                <span data-i18n="form_controls.required_item" class="a11y-hidden"></span>            </legend>';
        if (urlParams.get("type") && "prepay" === urlParams.get("type"))
            spmHTML +=
                '<div class="custom-radio-btnlike">                <input type="radio" name="storedPaymentMethod" id="voucher" value="voucher" required>                <label for="voucher">                    <span data-i18n="payment.prepay.voucher"></span>                </label>            </div>';
        for (let iSPM = 0; iSPM < SPM.length; iSPM++) {
            const currentSPM = SPM[iSPM];
            var display = "";
            if (void 0 !== currentSPM.expiryMonth && void 0 !== currentSPM.expiryYear) expiry = "<small>" + $.i18n("payment.form.valid_until") + " " + currentSPM.expiryMonth + "/" + currentSPM.expiryYear + "</small>";
            if ("?" !== currentSPM.display) display = currentSPM.display;
            spmHTML +=
                '<div class="custom-radio-btnlike">                <input type="radio" name="storedPaymentMethod" data-name="' +
                currentSPM.paymentMethod.toLowerCase() +
                '" id="' +
                currentSPM.spmId +
                '" value="' +
                currentSPM.spmId +
                '" required>                <label for="' +
                currentSPM.spmId +
                '" class="flex">                    <img src="./img/global/' +
                currentSPM.paymentMethod.toLowerCase() +
                '.svg" alt="' +
                currentSPM.paymentMethodDescription.toLowerCase() +
                '" class="custom-radio-btnlike__icon"/>                    <span>' +
                currentSPM.paymentMethodDescription.toLowerCase() +
                " " +
                display +
                "<br/>                    " +
                expiry +
                "                    </span>                </label>            </div>";
        }
        spmHTML +=
            '<div class="custom-radio-btnlike">            <input type="radio" name="storedPaymentMethod" id="otherPM" value="" required>            <label for="otherPM" class="flex">                <span>' +
            $.i18n("payment.form.other_pm") +
            "</span>            </label>        </div>        </fieldset>";
        paymentListContainer.html(spmHTML).i18n();
        if (urlParams.get("type") && "prepay" === urlParams.get("type")) getPaymentInfoPrepaidAPI();
    } else {
        if (urlParams.get("type") && "prepay" === urlParams.get("type")) {
            spmHTML +=
                '            <fieldset>                <legend class="space-bottom--thin">                    <strong>' +
                $.i18n("payment.prepay.select_refill_type") +
                '</strong>                    <span aria-hidden="true" class="label">*</span>                    <span data-i18n="form_controls.required_item" class="a11y-hidden"></span>                </legend>';
            spmHTML +=
                '<div class="custom-radio-btnlike">                <input type="radio" name="storedPaymentMethod" id="voucher" value="voucher" required>                <label for="voucher">                    <span data-i18n="payment.prepay.voucher"></span>                </label>                </div>                <div class="custom-radio-btnlike">                    <input type="radio" name="storedPaymentMethod" id="otherPM" value="" required>                    <label for="otherPM" class="flex">                        <span>' +
                $.i18n("payment.form.other_pm") +
                "</span>                    </label>                </div>            </fieldset>";
        }
        paymentListContainer.html(spmHTML).i18n();
        if (urlParams.get("type") && "prepay" === urlParams.get("type")) getPaymentInfoPrepaidAPI();
    }
}
function editPaymentMethod(SPM, paymentListContainer, isBillingPage, isPrepay) {
    var spmHTML = "",
        expiry = "";
    if (SPM.length) {
        spmHTML += '        <fieldset>            <legend class="space-bottom--thin">                <strong>' + $.i18n("profile.payment.your_pm_" + BRAND.name) + "</strong>            </legend>";
        let isRequired = "required";
        for (let iSPM = 0; iSPM < SPM.length; iSPM++) {
            const currentSPM = SPM[iSPM];
            var isDisabled = "",
                isAPS = "",
                display = "";
            if (true === currentSPM.aps) {
                isDisabled = "disabled";
                isRequired = "required";
                isAPS = $.i18n("profile.payment.aps");
                if ("true" === isPrepay) isAPS = "";
            }
            if (void 0 !== currentSPM.expiryMonth && void 0 !== currentSPM.expiryYear) expiry = "<small>" + $.i18n("payment.form.valid_until") + " " + currentSPM.expiryMonth + "/" + currentSPM.expiryYear + "</small>";
            if ("?" !== currentSPM.display) display = currentSPM.display;
            spmHTML +=
                '<div class="custom-radio-btnlike space-bottom">                    <input ' +
                isDisabled +
                ' type="radio" name="storedPaymentMethod" data-name="' +
                currentSPM.paymentMethod.toLowerCase() +
                '" id="' +
                currentSPM.spmId +
                '" value="' +
                currentSPM.spmId +
                '" data-aps="' +
                currentSPM.aps +
                '"  ' +
                isRequired +
                '>                    <label for="' +
                currentSPM.spmId +
                '" class="flex">                        <img src="./img/global/' +
                currentSPM.paymentMethod.toLowerCase() +
                '.svg" alt="' +
                currentSPM.paymentMethodDescription.toLowerCase() +
                '" class="custom-radio-btnlike__icon"/>                        <span>' +
                currentSPM.paymentMethodDescription.toLowerCase() +
                " " +
                display +
                "<br/>                            " +
                expiry +
                '                        </span>                        <span class="flex-break">' +
                isAPS +
                "</span>                    </label>                </div>";
        }
        spmHTML += "</fieldset>";
        if (true === isBillingPage) spmHTML += '<p class="space-bottom">' + $.i18n("billing.invoicing.link_pers_info") + "</p>";
    } else {
        var noResult = $.i18n("profile.payment.no_result_" + BRAND.name);
        if (true === isBillingPage) noResult = $.i18n("profile.payment.no_result_billing_" + BRAND.name);
        spmHTML += '<p class="space-bottom">' + noResult + "</p>";
    }
    paymentListContainer.html(spmHTML).i18n();
}
function getPayerAndSPMPostpaid(accountResult) {
    var customerID = "",
        globalError = $("#globalError"),
        paymentListContainer = $("#SPMList"),
        urlParams = new URLSearchParams(location.search);
    if (void 0 !== accountResult.hasPayerPrivilege) {
        if (true === accountResult.hasPayerPrivilege && accountResult.payer.id !== accountResult.owner.id) {
            var payerList = '<label for="payerList"><strong data-i18n="payment.form.select_payer"></strong></label>        <div class="custom-select">            <select id="payerList">';
            payerList +=
                '<option id="' +
                accountResult.payer.id +
                '" selected>' +
                accountResult.payer.firstName +
                " " +
                accountResult.payer.lastName +
                " (" +
                $.i18n("profile.payer") +
                ')</option>        <option id="' +
                accountResult.owner.id +
                '">' +
                accountResult.owner.firstName +
                " " +
                accountResult.owner.lastName +
                " (" +
                $.i18n("profile.owner") +
                ")</option>";
            payerList += "</select></div>";
            $("#payerSelection").html(payerList);
            customerID = accountResult.payer.id;
        } else customerID = accountResult.owner.id;
        getStoredPaymentMethodsAPI(globalError, customerID).then(function (resultSPM) {
            displayStoredPaymentMethod(resultSPM, paymentListContainer);
        });
        $("#payerList")
            .off("change")
            .on("change", function (e) {
                customerID = e.currentTarget.selectedOptions[0].id;
                getStoredPaymentMethodsAPI(globalError, customerID).then(function (resultSPM) {
                    displayStoredPaymentMethod(resultSPM, paymentListContainer);
                });
            });
    }
    $("#balancePayment")
        .off("submit")
        .on("submit", function (event) {
            event.preventDefault();
            if (validateForm($("#balancePayment"), $("#submitBalancePayment"))) {
                $("#paymentForm").addClass("loading");
                postStartPaymentDatatransAPI(globalError, $("#submitBalancePayment"), urlParams.get("acc"), customerID);
            }
        });
}
function getPayerAndSPMPrepay(accountResult) {
    $("#pcMethod").remove();
    var customerID = "",
        globalError = $("#globalError"),
        paymentListContainer = $("#refillMethod"),
        voucherMobile = $("#voucherMobile"),
        voucherId = $("#voucherId"),
        urlParams = new URLSearchParams(location.search),
        unique = [],
        distinctCustomer = [];
    for (let i = 0; i < accountResult.privilege.length; i++)
        if (!unique[accountResult.privilege[i].customerId]) {
            var hasFinanceManager = searchInObject(accountResult.privilege, { role: "FINANCE_MANAGER" });
            var hasFleetManager = searchInObject(accountResult.privilege, { role: "FLEET_MANAGER" });
            var hasAdvance = searchInObject(accountResult.privilege, { role: "ADVANCED" });
            if (hasFinanceManager.length) {
                const ind = accountResult.privilege.findIndex((object) => "FINANCE_MANAGER" === object.role);
                distinctCustomer.push(accountResult.privilege[ind]);
                break;
            } else if (hasFleetManager.length) {
                const ind = accountResult.privilege.findIndex((object) => "FLEET_MANAGER" === object.role);
                distinctCustomer.push(accountResult.privilege[ind]);
                break;
            } else if (hasAdvance.length) {
                const ind = accountResult.privilege.findIndex((object) => "ADVANCED" === object.role);
                distinctCustomer.push(accountResult.privilege[ind]);
                break;
            }
            unique[accountResult.privilege[i].customerId] = 1;
        }
    if (distinctCustomer.length > 1) {
        getCustomerList()
            .done(function (resultCustomerList) {
                var payerList = '<label for="payerList"><strong data-i18n="payment.form.select_payer"></strong></label>                <div class="custom-select">                    <select id="payerList">';
                for (let iCustomer = 0; iCustomer < distinctCustomer.length; iCustomer++) {
                    const currentCustomer = distinctCustomer[iCustomer];
                    var customerInfo = resultCustomerList.filter((obj) => obj.id === currentCustomer.customerId);
                    if (customerInfo.length)
                        for (let iCustomerInfo = 0; iCustomerInfo < customerInfo.length; iCustomerInfo++)
                            payerList += '<option id="' + customerInfo[iCustomerInfo].id + '">' + customerInfo[iCustomerInfo].firstName + " " + customerInfo[iCustomerInfo].lastName + "</option>";
                }
                payerList += "</select></div>";
                $("#payerSelectionPrepay").addCLass("space-bottom").html(payerList).i18n();
                getStoredPaymentMethodsAPI(globalError, customerID).then(function (resultSPM) {
                    displayStoredPaymentMethod(resultSPM, paymentListContainer);
                });
            })
            .fail(function (result) {
                if (result) displayMessageAfterSubmit(globalError, null, "", $.i18n("utils.technical_error"));
            });
        customerID = distinctCustomer[0].customerId;
        $("#payerChoice")
            .off("change")
            .on("change", function (e) {
                customerID = e.currentTarget.selectedOptions[0].id;
                getStoredPaymentMethodsAPI(globalError, customerID).then(function (resultSPM) {
                    displayStoredPaymentMethod(resultSPM, paymentListContainer);
                });
            });
    } else {
        customerID = distinctCustomer[0].customerId;
        getStoredPaymentMethodsAPI(globalError, customerID).then(function (resultSPM) {
            displayStoredPaymentMethod(resultSPM, paymentListContainer);
        });
    }
    $("#refillPrepay")
        .off("submit")
        .on("submit", function (event) {
            event.preventDefault();
            if (validateForm($("#refillPrepay"), $("#submitRefillPrepay"))) {
                $("#refillPrepay").addClass("loading");
                if ("" !== voucherId.val()) {
                    var payload = { voucher: voucherId.val(), msisdn: voucherMobile.attr("data-number") };
                    voucherPayment(JSON.stringify(payload), voucherMobile.val(), voucherId.val());
                } else postStartPaymentDatatransAPI(globalError, $("#submitRefillPrepay"), urlParams.get("acc"), customerID);
            }
        });
}
function managePaymentMethod(accountID) {
    var globalError = $("#globalError");
    getStoredPaymentMethodsAPI(globalError, accountID).then(function (resultSPM) {
        if (!resultSPM.length) $("#removePaymentMethod").addClass("hidden");
        editPaymentMethod(resultSPM, $("#paymentListContainer"), false);
    });
}
function removePaymentMethod(confirmMessage, currentForm, submitCurrentForm, accountID, errorContainer, validContainer) {
    currentForm
        .off("submit")
        .on("submit", function (event) {
            event.preventDefault();
            $(this).attr("disabled", "disabled");
            if (validateForm(currentForm, $("#removePaymentMethod"))) {
                var payload = { spmId: $("#managePaymentForm input:checked").val(), language: setDefaultLang() };
                $(".message").empty().hide();
                displayConfirmMessage(
                    confirmMessage,
                    currentForm,
                    submitCurrentForm,
                    "inline-edit",
                    $.i18n("profile.payment.confirm_remove_" + BRAND.name),
                    "confirmCardRemove",
                    removePaymentMethodAPI.bind(this, errorContainer, validContainer, submitCurrentForm, accountID, JSON.stringify(payload))
                );
            }
            return false;
        })
        .on("reset", function (event) {
            event.preventDefault();
            submitCurrentForm.focus();
        });
}
function confirmDeleteCustomer() {
    let deleteCustomerBtn = $("#deleteCustomer"),
        confirmDeleteCustomerTarget = $("#confirmDeleteCustomer"),
        confirmBlockPath = PATH_FORM_COMP + "profile/confirm-delete-customer.html",
        confirmDeleteCustomerParagraph = "#confirmDeleteCustomerParagraph",
        confirmI18n = $.i18n("profile.delete_customer.confirm_" + BRAND.name);
    deleteCustomerBtn.off("click").on("click", function () {
        loadConfirmation(confirmDeleteCustomerTarget, confirmBlockPath, confirmDeleteCustomerParagraph, confirmI18n).then(() => {
            confirmDeleteCustomerActions(confirmDeleteCustomerTarget);
        });
    });
}
function confirmDeleteCustomerActions(confirmDeleteCustomerTarget) {
    $("#resetDeleteCustomer")
        .off("click")
        .on("click", () => {
            confirmDeleteCustomerTarget.empty();
        });
    $("#submitDeleteCustomer")
        .off("click")
        .on("click", () => {
            postDeleteCustomerAPI().then(() => {
                triggerLogout();
            });
        });
}
function triggerLogout() {
    $("#logoutURL").trigger("click");
}
function confirmUnlink(customerID, customerDomain) {
    $("#resetUnlink")
        .off("click")
        .on("click", function () {
            $("#confirmUnlink").empty();
        });
    $("#submitUnlink")
        .off("click")
        .on("click", function () {
            postUnlinkCustomerAPI(customerID, customerDomain);
        });
}
function displayConsentList(customer, consentList, preferenceWrapper, categoryTitle, categoryParagraph) {
    $("#emailInfo").text(customer.attr("data-markEmail"));
    $("#addressInfo").html(customer.attr("data-address"));
    if (void 0 !== consentList) {
        consentList.categories.sort(orderByDisplayOrder);
        buildPermissionList(customer, consentList, preferenceWrapper);
        preferenceWrapper.next('button[type="submit"]').show();
    } else {
        categoryTitle.empty();
        categoryParagraph.empty();
        preferenceWrapper.html("<p>" + $.i18n("utils.labels.no_result") + "</p>");
        preferenceWrapper.next('button[type="submit"]').hide();
    }
}
function buildPermissionList(customer, consentList, targetWrapper) {
    let currentLang = setDefaultLang(),
        category;
    if (targetWrapper.is(":visible")) {
        let permissionContent = '<fieldset class="switcher-container">';
        if ("privacyMarketingSettingsList" === targetWrapper.attr("id")) {
            category = consentList.categories[0];
            permissionContent += '<legend class="a11y-hidden">' + $.i18n("profile.data_privacy.choose_mkt_pref") + "</legend>";
            $("#marketingPrivacyTitle").text(category.name[currentLang]);
            $("#marketingPrivacyParagraph").text(category.description[currentLang]);
            submitPrivacyPreferences($("#marketingPrivacyError"), $("#marketingPrivacyValid"), $("#submitMarketingPrivacy"), customer, $("#privacyMarketingSettingsForm"));
        } else {
            category = consentList.categories[1];
            permissionContent += '<legend class="a11y-hidden">' + $.i18n("profile.data_privacy.choose_data") + "</legend>";
            $("#dataPrivacyTitle").text(category.name[currentLang]);
            $("#dataPrivacyParagraph").text(category.description[currentLang]);
            submitPrivacyPreferences($("#dataPrivacyError"), $("#dataPrivacyValid"), $("#submitDataPrivacyError"), customer, $("#privacySettingsForm"));
        }
        permissionContent += '<ul class="toggle-switch unstyled">';
        category.items.sort(orderByDisplayOrder);
        for (let iMarketingConsent = 0; iMarketingConsent < category.items.length; iMarketingConsent++) {
            const currentConsent = category.items[iMarketingConsent];
            let checked = "";
            if (true === currentConsent.value) checked = "checked";
            else checked = "";
            permissionContent +=
                '<li class="flex flex--left flex--start space-bottom--thin">                <input data-code="" data-id="' +
                currentConsent.id +
                '" id="permission' +
                currentConsent.id +
                '" type="checkbox" role="switch" name="consent" ' +
                checked +
                '>                <label class="permission-label" for="permission' +
                currentConsent.id +
                '"><strong class="block">' +
                currentConsent.name[currentLang] +
                "</strong>" +
                currentConsent.description[currentLang] +
                "</label>            </li>";
        }
        permissionContent += "</fieldset></ul>";
        targetWrapper.html(permissionContent);
    } else {
        consentList.categories[1].items.sort(orderByDisplayOrder);
        targetWrapper.html(consentList.categories[1].items);
    }
    targetWrapper
        .find('input[type="checkbox"]')
        .off("change")
        .on("change", function () {
            targetWrapper.next('button[type="submit"]').removeAttr("disabled");
        });
}
function displayCustomerList(resultCustomerList, customerListWrapper, customerListItemWrapper) {
    var customerListContainer = customerListWrapper,
        customerList = customerListItemWrapper,
        customerListItem = "";
    if (resultCustomerList.length > 0) {
        customerList.empty();
        resultCustomerList.sort(orderByDisplayOrder);
        for (var i = 0; i < resultCustomerList.length; i++) {
            let currentCustomer = resultCustomerList[i];
            var careOf = "" !== currentCustomer.address.careOf && null !== currentCustomer.address.careOf ? currentCustomer.address.careOf + "<br/>" : "";
            var city = null !== currentCustomer.address.city ? currentCustomer.address.city : "";
            var country = null !== currentCustomer.address.country ? currentCustomer.address.country : "";
            var houseNumber = null !== currentCustomer.address.houseNumber ? currentCustomer.address.houseNumber + ", " : "";
            var postalCode = null !== currentCustomer.address.postalCode ? currentCustomer.address.postalCode : "";
            var street = null !== currentCustomer.address.street ? currentCustomer.address.street : "";
            var customerId = currentCustomer.id,
                customerFirstName = currentCustomer.firstName,
                customerLastName = currentCustomer.lastName,
                domain = currentCustomer.domain.toLowerCase(),
                customerTitleDisplay = $.i18n("profile.gender." + currentCustomer.title.toLowerCase()),
                customerBirthdate = currentCustomer.birthDate,
                customerAddress = careOf + street + " " + houseNumber + " " + postalCode + " " + city + " " + country,
                customerInvoiced = currentCustomer.isInvoiced,
                customerMarketingEmail = currentCustomer.email,
                customerLang = currentCustomer.language;
            customerAddress = customerAddress.replace(/\"/g, "&quot;");
            customerListItem +=
                '<li>                    <button data-id="' +
                customerId +
                '" class="btn btn--mobile"                         data-firstname="' +
                customerFirstName +
                '"                         data-lastname="' +
                customerLastName +
                '"                         data-domain="' +
                domain +
                '"                         data-gender="' +
                customerTitleDisplay +
                '"                         data-birthdate="' +
                customerBirthdate +
                '"                         data-invoiced="' +
                customerInvoiced +
                '"                         data-address="' +
                customerAddress +
                '"                         data-markEmail="' +
                customerMarketingEmail +
                '"                         data-lang="' +
                customerLang +
                '" >                        <svg aria-hidden="true" focusable="false" class="' +
                domain +
                '">                            <use xlink:href="#' +
                domain +
                '"></use>                        </svg>                        ' +
                customerFirstName +
                " " +
                customerLastName +
                "                    </button>                </li> ";
        }
        customerList.append(customerListItem);
    } else if (1 === resultCustomerList.length) customerListContainer.hide();
    else {
        if ($('a[aria-controls="profilePersonalInfo"]').length) $('a[aria-controls="profilePersonalInfo"]').remove();
        $('a[aria-controls="profileDataPrivacy"], a[aria-controls="profileMarketingPrivacy"]').remove();
    }
}
function selectDefaultCustomer(customerList) {
    var urlParams = new URLSearchParams(location.search);
    if (urlParams.get("acc")) {
        var preselectedCustomerId = urlParams.get("acc");
        customerList
            .find('button[data-id="' + preselectedCustomerId + '"]')
            .trigger("click")
            .addClass("active");
    } else if (sessionStorage.getItem("custid") && customerList.find('button[data-id="' + sessionStorage.getItem("custid") + '"]').length)
        customerList
            .find('button[data-id="' + sessionStorage.getItem("custid") + '"]')
            .trigger("click")
            .addClass("active");
    else customerList.find("button").first().trigger("click").addClass("active");
}
function displayPrivacyContent(customerList, customerListToggler) {
    customerList.find("button").each(function (ind, elem) {
        $(elem)
            .off("click")
            .on("click", function (e) {
                e.preventDefault();
                $(".message").empty().hide();
                customerList.find("button").removeClass("active").removeAttr("aria-current");
                $(elem).addClass("active").attr("aria-current", "true");
                sessionStorage.setItem("custid", $(elem).attr("data-id"));
                sessionStorage.setItem("domain", $(elem).attr("data-domain"));
                $("#editPersoInfo").attr({ href: "#profilePersonalInfo", "aria-label": $.i18n("utils.labels.edit_contact_info") });
                if (customerListToggler.is(":visible") && void 0 !== e.originalEvent) customerListToggler.focus();
                customerListToggler.find(".current").html($(elem).html());
                if ("customerListMarketingPrivacy" === customerList.attr("id"))
                    getCustomerConsent($("#marketingPrivacyError"), $("#submitMarketingPrivacy"), $(elem), $("#privacyMarketingSettingsList"), $("#marketingPrivacyTitle"), $("#marketingPrivacyParagraph"));
                else getCustomerConsent($("#dataPrivacyError"), $("#submitDataPrivacy"), $(elem), $("#privacySettingsList"), $("#dataPrivacyTitle"), $("#dataPrivacyParagraph"));
                e.stopPropagation();
            });
    });
}
function displayProfilePage() {
    var profilePageContent = $("#profilePageContent"),
        customerListToggler = $("#customerListToggler"),
        customerListPrivacyToggler = $("#customerListPrivacyToggler"),
        customerListContainer = $("#customerListContainer"),
        customerList = $("#customerList"),
        customerListWrapperPrivacy = $("#customerListWrapperPrivacy"),
        customerListPrivacy = $("#customerListPrivacy"),
        customerListMarketingPrivacyToggler = $("#customerListMarketingPrivacyToggler"),
        customerListWrapperMarketingPrivacy = $("#customerListWrapperMarketingPrivacy"),
        customerListMarketingPrivacy = $("#customerListMarketingPrivacy"),
        currentCredentialIdentifier = $("#currentCredentialIdentifier"),
        newCredentialLang = $("#newCredentialLang"),
        currentCredentialLang = $("#currentCredentialLang"),
        currentLang = setDefaultLang(),
        zipcode = { zipFieldContainer: "zipcodeContainer", zipFieldId: "zipcode" },
        city = { cityFieldContainer: "cityContainer", cityFieldId: "city" },
        street = { streetFieldContainer: "streetContainer", streetFieldId: "street" },
        houseNb = { houseNbFieldContainer: "houseNbContainer", houseNbFieldId: "houseNb" };
    displayEditForm($("#changeGender"), $("#changeGenderForm"), $("#customerInfoTopVisibleArea"));
    displayEditForm($("#changeAddress"), $("#changeAddressForm"), $("#customerInfoBottomVisibleArea"));
    displayEditForm($("#changeMarkPerm"), $("#changeMarkPermForm"), $("#customerInfoBottomVisibleArea"));
    displayEditForm($("#changeMarkEmail"), $("#changeMarkEmailForm"), $("#customerInfoBottomVisibleArea"));
    displayEditForm($("#changeLang"), $("#changeLangForm"), $("#customerInfoBottomVisibleArea"));
    displayEditForm($("#changeLogin"), $("#changeLoginForm"), $("#loginVisibleArea"));
    displayEditForm($("#changePwd"), $("#changePwdForm"), $("#pwdVisibleArea"));
    displayEditForm($("#changeCredentialLang"), $("#changeCredentialLangForm"), $("#credentialLangVisibleArea"));
    callAcs(zipcode, street, city, houseNb, $("#newAddressFormEdit"), $("#changeAddressForm"), $("#submitNewAddress"), $("#customerInfoBottomVisibleArea"));
    changeGenderAPI();
    changeAddressAPI();
    changeMarkEmailAPI();
    changeLangAPI();
    changeCredentialEmailAPI();
    createPasswordAPI();
    profilePageContent.show();
    if (currentCredentialIdentifier.length) currentCredentialIdentifier.text(sessionStorage.getItem("identifier"));
    if (currentCredentialLang.length) {
        currentCredentialLang.text(currentLang.toLowerCase());
        newCredentialLang.find('option[value="' + currentLang + '"').attr("selected", "selected");
    }
    $(window)
        .off("hashchange")
        .on("hashchange", function () {
            onHashChange();
        });
    generateA11yTabs();
    getCustomerListInfoAPI().then(function (result) {
        displayCustomerList(result, customerListContainer, customerList);
        if (customerListContainer.length) updateCustomerListToggler();
        displayCustomerList(result, customerListWrapperPrivacy, customerListPrivacy);
        displayCustomerList(result, customerListWrapperMarketingPrivacy, customerListMarketingPrivacy);
        displayPrivacyContent(customerListMarketingPrivacy, customerListMarketingPrivacyToggler);
        displayPrivacyContent(customerListPrivacy, customerListPrivacyToggler);
        selectDefaultCustomer(customerListMarketingPrivacy);
        selectDefaultCustomer(customerListPrivacy);
        selectDefaultCustomer(customerList);
    });
    togglePassword();
    confirmDeleteCustomer();
    displayManageMfaSection();
    $("#linkCustomerTitle").text($.i18n("profile.link_customer.title_" + BRAND.name));
    $("#linkCustomerParagraph").text($.i18n("profile.link_customer.paragraph_" + BRAND.name));
    loadDomainOption().then(function (result) {
        if ("success" === result) {
            var displayedItemPath = [
                PATH_FORM_COMP + "profile/identifyMobile/by-msisdn.html",
                PATH_FORM_COMP + "profile/identifyMobile/by-ba.html",
                PATH_FORM_COMP + "profile/identifyMobile/by-contract.html",
                PATH_FORM_COMP + "profile/identifyFix/by-ba.html",
                PATH_FORM_COMP + "profile/identifyFix/by-contract.html",
                PATH_FORM_COMP + "profile/identifyFix/by-oto.html",
            ];
            customOnChange('#domainRegisterType input[type="radio"]', $("#linkCustomerArea"), displayedItemPath, manageLinkCustomer);
            $("#byMsisdn").prop("checked", true).trigger("change");
            $("#paragraphDomain").text($.i18n("profile.form.select_method_" + BRAND.name));
            if ("salt" !== BRAND.name) {
                $("#paragraphDomain").remove();
                $("#domainRegisterType").removeClass("grid-2-small-1");
                $("#mobileDomain").removeClass("one-half").find("svg").remove();
                $("#fixDomain").remove();
                $("#brandMobile").text($.i18n("profile.form.select_method_" + BRAND.name));
            }
        }
    });
    adaptListToggler(customerListToggler, customerList);
    adaptListToggler(customerListPrivacyToggler, customerListPrivacy);
    adaptListToggler(customerListMarketingPrivacyToggler, customerListMarketingPrivacy);
    if ("lidl" === BRAND.name) $("body").removeClass("body--mobile");
    $("#wrapper").removeClass("hidden");
    $("#loadingMsg").addClass("hidden");
}
function adaptListToggler(togglerBtn, targetList) {
    if (togglerBtn.length) {
        if ($(window).width() < 1016) {
            targetList.addClass("dropdown__list item-list").removeClass("grid-4-large-3 has-gutter-l dropdown__visible");
            togglerBtn.removeClass("hidden-desktop");
            dropdownToggle(togglerBtn, targetList, true);
        } else {
            togglerBtn.addClass("hidden-desktop");
            targetList.removeClass("dropdown__list item-list").addClass("grid-4-large-3 has-gutter-l dropdown__visible");
        }
        removeDropdownZoom(togglerBtn);
    }
}
function submitPrivacyPreferences(errorContainer, validContainer, submitCurrentForm, customer, targetWrapper) {
    targetWrapper.off("submit").on("submit", function (event) {
        event.preventDefault();
        if (validateForm(targetWrapper, submitCurrentForm)) {
            let itemPreference = { items: [] };
            targetWrapper.find('input[type="checkbox"]').each(function (ind, ele) {
                let preferenceDetail = { id: $(ele).attr("data-id"), value: $(ele).is(":checked") };
                itemPreference.items.push(preferenceDetail);
            });
            var payload = JSON.stringify(itemPreference);
            return postCustomerConsent(errorContainer, validContainer, submitCurrentForm, customer, payload);
        }
    });
}
function updateCustomerListToggler() {
    var customerListToggler = $("#customerListToggler"),
        profileDisclaimer = $("#profileDisclaimer"),
        customerList = $("#customerList"),
        currentSubID = $("#currentSubID"),
        personalInfoTitle = $("#personalInfoTitle"),
        personalInfoFirstName = $("#personalInfoFirstName"),
        personalInfoLastname = $("#personalInfoLastname"),
        birthdate = $("#birthdate"),
        personalInfoBirthdate = $("#personalInfoBirthdate"),
        personalInfoAddress = $("#personalInfoAddress"),
        personalInfoMarketingEmail = $("#personalInfoMarketingEmail"),
        personalInfoLang = $("#personalInfoLang"),
        unlinkCustomer = $("#unlinkCustomer"),
        confirmUnlinkTarget = $("#confirmUnlink"),
        confirmUnlinkItemPath = PATH_FORM_COMP + "profile/confirm-unlink.html",
        confirmUnlinkParagraph = "#confirmUnlinkParagraph",
        confirmi18n = $.i18n("profile.unlink_customer.confirm_" + BRAND.name),
        urlParams = new URLSearchParams(location.search);
    customerList.find("button").each(function (ind, elem) {
        $(elem)
            .off("click")
            .on("click", function (e) {
                e.preventDefault();
                customerList.find("button").removeClass("active").removeAttr("aria-current");
                $(elem).addClass("active").attr("aria-current", "true");
                currentSubID.text($(elem).attr("data-id"));
                sessionStorage.setItem("custid", $(elem).attr("data-id"));
                sessionStorage.setItem("domain", $(elem).attr("data-domain"));
                $("#wrapper").removeClass("hidden");
                $("#loadingMsg").addClass("hidden");
                if (customerListToggler.is(":visible") && void 0 !== e.originalEvent) customerListToggler.focus();
                customerListToggler.find(".current").html($(elem).html());
                if ("mobile" === $(elem).attr("data-domain")) {
                    $("#changeGender, #changeAddress").show();
                    if ("false" === $(elem).attr("data-invoiced")) profileDisclaimer.html($.i18n("profile.CRM.prepaid_disclaimer_" + BRAND.name));
                    else profileDisclaimer.html($.i18n("profile.CRM.postpaid_disclaimer_" + BRAND.name));
                } else {
                    $("#changeGender, #changeAddress").hide();
                    profileDisclaimer.html($.i18n("profile.CRM.postpaid_disclaimer_" + BRAND.name + "_home"));
                }
                personalInfoTitle.text($(elem).attr("data-gender"));
                personalInfoFirstName.text($(elem).attr("data-firstname"));
                personalInfoLastname.text($(elem).attr("data-lastname"));
                personalInfoAddress.html($(elem).attr("data-address"));
                if ("undefined" === $(elem).attr("data-birthdate")) birthdate.hide();
                else personalInfoBirthdate.text($(elem).attr("data-birthdate"));
                personalInfoMarketingEmail.text($(elem).attr("data-markEmail"));
                personalInfoLang.text($(elem).attr("data-lang"));
                $("#customerInfoTopVisibleArea, #customerInfoBottomVisibleArea").fadeIn();
                $("#profilePersonalInfo .highlight-form").hide();
                confirmUnlinkTarget.hide();
                $("#unlinkCustomerValid").hide();
                unlinkCustomer.show();
                unlinkCustomer.off("click").on("click", function () {
                    loadConfirmation(confirmUnlinkTarget, confirmUnlinkItemPath, confirmUnlinkParagraph, confirmi18n).then(function () {
                        confirmUnlink($(elem).attr("data-id"), $(elem).attr("data-domain"));
                    });
                });
                var globalError = $("#globalError"),
                    managePaymentItemPath = PATH_FORM_COMP + "profile/manage-payment-method.html";
                getStoredPaymentMethodsAPI(globalError, $(elem).attr("data-id")).then(function (resultSPM) {
                    loadManagePaymentMethod($("#managePaymentMethod"), managePaymentItemPath).then(function () {
                        $("#pmParagraph").html($.i18n("profile.payment.manage_paragraph_" + BRAND.name));
                        if (!resultSPM.length) $("#removePaymentMethod").addClass("hidden");
                        if (urlParams.get("datatransTrxId")) {
                            $(".message").empty().hide();
                            getStoredPaymentMethodStatusAPI($(elem).attr("data-id"), urlParams.get("datatransTrxId"), $("#paymentMethodError"), $("#paymentMethodValid"), $("#managePaymentForm"));
                        }
                        editPaymentMethod(resultSPM, $("#paymentListContainer"), false, $(elem).attr("data-invoiced"));
                        addPaymentMethod($("#paymentMethodError"), $("#addPaymentMethod"), $(elem).attr("data-id"));
                        removePaymentMethod($("#paymentMethodConfirm"), $("#managePaymentForm"), $("#removePaymentMethod"), $(elem).attr("data-id"), $("#paymentMethodValid"), $("#paymentMethodError"));
                    });
                });
            });
    });
}
function displaySubStatus(subStatus, selectorDisplay) {
    var statusDisplay = "";
    switch (subStatus) {
        case "ACTIVE":
        case "PAYMENT_DONE":
            statusDisplay += '<span class="dot dot--positive"></span>' + $.i18n("subscription.status." + subStatus.toLowerCase());
            break;
        case "ACTIVATING":
        case "WAITING":
        case "PENDING_ORDER":
            statusDisplay += '<span class="dot dot--warning"></span>' + $.i18n("subscription.status." + subStatus.toLowerCase());
            break;
        default:
            statusDisplay += '<span class="dot dot--alert"></span>' + $.i18n("subscription.status." + subStatus.toLowerCase());
            break;
    }
    selectorDisplay.html(statusDisplay);
}
var previousDomain;
function updateSubListToggler(customers) {
    var subSummaryDetail = $("#subSummaryDetail"),
        subscriptionContent = $("#subscriptionContent"),
        subscriptionAccount = $("#subscriptionAccount"),
        subListToggler = $("#subListToggler"),
        subOverviewError = $("#subOverviewError"),
        subUsageError = $("#subUsageError"),
        subConfigError = $("#subConfigError"),
        simInfo = $("#simInfo"),
        useNewSimError = $("#useNewSimError"),
        useNewSimValid = $("#useNewSimValid"),
        multiSurfInfo = $("#multiSurfInfo"),
        counterContainer = $("#counterContainer"),
        tableFilter = $("#tableFilter"),
        historyResultContainer = $("#historyResultContainer"),
        voiceResultContainer = $("#voiceResultContainer"),
        smsResultContainer = $("#smsResultContainer"),
        dataResultContainer = $("#dataResultContainer"),
        subName = $("#subName"),
        subNum = $("#subNum"),
        ppName = $("#ppName"),
        graphicUsage = $("#graphicUsage"),
        subDetailLink = $("#subDetailLink"),
        oobAmount = $("#oobAmount"),
        oob = $("#oob"),
        ongoingStatus = $("#ongoingStatus"),
        rechargePrepay = $("#rechargePrepay");
    subscriptionAccount.find("button").each(function (ind, elem) {
        $(elem)
            .off("click")
            .on("click", function (e) {
                subscriptionAccount.find("button").removeClass("active").removeAttr("aria-current");
                $(elem).addClass("active").attr("aria-current", "true");
                tableFilter.find(".active").removeClass("active");
                counterContainer.fadeOut().empty();
                voiceResultContainer.empty();
                smsResultContainer.empty();
                dataResultContainer.empty();
                historyResultContainer.empty();
                subOverviewError.empty().hide();
                subUsageError.empty().hide();
                subConfigError.empty().hide();
                simInfo.hide();
                useNewSimError.hide();
                useNewSimValid.hide();
                multiSurfInfo.hide();
                $(".result-container", $("#page")).fadeIn();
                sessionStorage.setItem("msisdn", $(elem).attr("data-number"));
                sessionStorage.setItem("subStatus", $(elem).attr("data-status"));
                sessionStorage.setItem("subid", $(elem).attr("id"));
                sessionStorage.setItem("custid", $(elem).attr("data-custid"));
                if ($("#subListToggler").is(":visible") && void 0 !== e.originalEvent) $("#subListToggler").focus();
                else $(elem).focus();
                if (subSummaryDetail.length) {
                    if (null !== customers) displaySubOffer(customers, $(elem).attr("id"), true);
                    graphicUsage.empty();
                    subName.text($(elem).attr("data-firstname"));
                    subNum.text(prettifyPhoneNumber($(elem).attr("data-number")));
                    ppName.text($(elem).attr("data-ppname"));
                    subDetailLink.attr("href", "subscription.html?sub=" + $(elem).attr("id"));
                    if ("fix" !== $(elem).attr("data-domain")) {
                        if ("PREPAID" === $(elem).attr("data-payment")) {
                            if ("TERMINATED" !== $(elem).attr("data-status") && "CLOSED" !== $(elem).attr("data-status") && "TERMINATING" !== $(elem).attr("data-status")) {
                                rechargePrepay
                                    .show()
                                    .find("a")
                                    .attr("href", "payment.html?acc=" + $(elem).attr("id") + "&domain=mobile&type=prepay");
                                getBalancePrepaid($(elem).attr("id"))
                                    .done(function (result) {
                                        var prepaidBalanceDisplay = (result.amount / 100).toFixed(2);
                                        oobAmount.text(prepaidBalanceDisplay);
                                        oob.find(".block").text($.i18n("billing.balance.current_balance"));
                                        oob.removeClass("hidden");
                                    })
                                    .fail(function (result) {
                                        oob.addClass("hidden");
                                    });
                            }
                            subDetailLink.hide();
                        } else {
                            subDetailLink.show();
                            if (rechargePrepay.length) rechargePrepay.hide();
                            if ($(elem).attr("data-oob")) {
                                oobAmount.text($(elem).attr("data-oob"));
                                oob.find(".block").text($.i18n("subscription.counter.out_of_bundle"));
                                oob.removeClass("hidden");
                            }
                        }
                        subSummaryDetail.fadeIn();
                        ongoingStatus.fadeOut();
                    } else {
                        subDetailLink.show();
                        oob.addClass("hidden");
                        if (rechargePrepay.length) rechargePrepay.hide();
                        if ("PAYMENT_DONE" === $(elem).attr("data-status") || "PENDING_ORDER" === $(elem).attr("data-status")) getOngoingStatusAPI($(elem).attr("id"));
                        else subSummaryDetail.fadeIn();
                        getCustomerDetailsAPI($(elem).attr("id")).then(function (result) {
                            if ("get customer details failed" !== result)
                                if (true === result.requiresOto) {
                                    let noticeOto = '<div class="message message--notif message--visible space-bottom"><div class="message__content">' + $.i18n("dashboard.oto_id_notice", $(elem).attr("id")) + "</div></div>";
                                    $("#noticeWrapper").html(noticeOto);
                                } else $("#noticeWrapper").empty();
                        });
                    }
                    $("#subDetailLink")
                        .off("click")
                        .on("click", function (ev) {
                            ev.preventDefault();
                            navigation($(this).attr("href"));
                        });
                }
                if ("" !== $(elem).attr("data-domain")) {
                    var currentDomain = $(elem).attr("data-domain"),
                        currentLang = setDefaultLang();
                    loadSubTabs(currentDomain, previousDomain, $(elem).attr("id"), currentLang, $(elem).attr("data-payment"));
                    $("body").addClass("body--mobile");
                    $("#wrapper").removeClass("hidden").focus();
                    $("#loadingMsg").addClass("hidden");
                    sessionStorage.setItem("domain", currentDomain);
                    if ("fix" === currentDomain)
                        loadPath($("#supportTools"), PATH_SCREEN_COMP + "support-fix.html").then(function () {
                            if ($("#supUnderstandBill").length) $("#supUnderstandBill").attr("href", $.i18n("support.transverse.understand_bill_" + BRAND.name + "_" + sessionStorage.getItem("domain")));
                        });
                    else
                        loadPath($("#supportTools"), PATH_SCREEN_COMP + "support-mobile.html").then(function () {
                            if ($("#supUnderstandBill").length) $("#supUnderstandBill").attr("href", $.i18n("support.transverse.understand_bill_" + BRAND.name + "_" + sessionStorage.getItem("domain")));
                            $("#billIcon").html('<svg aria-hidden="true" focusable="false" class="bill">                                <use xlink:href="#bill"></use>                              </svg>');
                            $("#pukIcon").html('<svg aria-hidden="true" focusable="false" class="puk-support">                                <use xlink:href="#puk-support"></use>                            </svg>');
                            $("#lockIcon").html('<svg aria-hidden="true" focusable="false" class="locker">                                    <use xlink:href="#locker"></use>                                </svg>');
                            $("#globeIcon").html('<svg aria-hidden="true" focusable="false" class="globe">                                    <use xlink:href="#globe"></use>                                </svg>');
                            $("#getPuk").text($.i18n("support.transverse.get_puk_" + BRAND.name));
                            $("#blockNum").text($.i18n("support.transverse.block_num_" + BRAND.name));
                            $("#newMob").text($.i18n("support.transverse.new_mobile_" + BRAND.name));
                            $("#buyUpsellData").text($.i18n("support.transverse.buy_data_" + BRAND.name));
                            if ("post" === BRAND.name) {
                                $("#billIcon").html('<svg aria-hidden="true" focusable="false" class="bill-post">                                <use xlink:href="#bill-post"></use>                            </svg>');
                                $("#pukIcon").html('<svg aria-hidden="true" focusable="false" class="puk-support-post">                            <use xlink:href="#puk-support-post"></use>                        </svg>');
                                $("#lockIcon").html('<svg aria-hidden="true" focusable="false" class="locker-post">                                <use xlink:href="#locker-post"></use>                            </svg>');
                                $("#globeIcon").html('<svg aria-hidden="true" focusable="false" class="globe-post">                                <use xlink:href="#globe-post"></use>                            </svg>');
                            }
                        });
                    previousDomain = currentDomain;
                }
                if ($(window).width() < 1016 || subscriptionAccount.children("li").length > 3) {
                    subListToggler.find(".current").html($(elem).html());
                    subscriptionAccount.fadeOut();
                    subListToggler.removeClass("active").attr("aria-expanded", "false");
                } else subListToggler.find(".current").html($(elem).html());
                subscriptionContent.show();
            });
    });
}
function loadContactInfo(customerInfo, customerID) {
    var contactInfoContainer = $("#contactInfoContainer"),
        contactInfoItemPath = PATH_JS_COMP + "overview-fix/contact-info.html",
        loadContactInfo = loadPath(contactInfoContainer, contactInfoItemPath);
    return loadContactInfo.then(function (result) {
        if ("success" === result) {
            var phoneInfo = $("#phoneInfo"),
                addressInfo = $("#addressInfo"),
                emailInfo = $("#emailInfo");
            $("#editContactInfo")
                .show()
                .attr({ href: "./profile.html?acc=" + customerID + "#profilePersonalInfo", "aria-label": $.i18n("utils.labels.edit_perso_info") });
            if (customerInfo.voipNumber) phoneInfo.text(prettifyPhoneNumber(customerInfo.voipNumber));
            else phoneInfo.text("-");
            addressInfo.text(customerInfo.address.street + " " + customerInfo.address.house + ",  " + customerInfo.address.zipcode + " " + customerInfo.address.city);
            emailInfo.text(customerInfo.email);
        }
    });
}
function loadFixTabsContent(event, tabTriggered, targetContentDisplay, pathSubDetail, customerID) {
    var customLoad = loadOnTrigger(event, tabTriggered, targetContentDisplay, pathSubDetail);
    $(".js-tabcontent").empty();
    return customLoad.then(function (selectedId) {
        var aCustomerDetails = [];
        getCustomerDetailsAPI(customerID).then(function (result) {
            if ("get customer details failed" !== result) aCustomerDetails.push(result);
            if ("" === result.voipNumber || void 0 === aCustomerDetails[0].voipNumber) $("#label_subFixTel").parent().hide();
            if ("" !== selectedId)
                switch (selectedId) {
                    case 0:
                        displayFixSubOverview(customerID, aCustomerDetails);
                        break;
                    case 1:
                        displayFixSubTV();
                        break;
                    case 2:
                        displayFixSubInternet(customerID, aCustomerDetails);
                        break;
                    case 3:
                        displayFixSubTelephony(customerID, aCustomerDetails);
                        break;
                    case 4:
                        displayFixSubSupport(customerID, aCustomerDetails);
                        break;
                    case 5:
                        displayFixSubOptions(customerID);
                        break;
                    default:
                        break;
                }
        });
    });
}
function loadOtoForm(customerID) {
    var otoFormContainer = $("#otoFormContainer"),
        otoFormItemPath = PATH_JS_COMP + "overview-fix/oto-form.html",
        loadOtoForm = loadPath(otoFormContainer, otoFormItemPath);
    return loadOtoForm.then(function (result) {
        if ("success" === result) {
            verifyOtoId($("#otoId"));
            postOtoId(customerID);
        }
    });
}
function loadSipPwd(customerID, voipNumber) {
    return new Promise(function (resolve, reject) {
        var sipPwdContainer = $("#sipPwdContainer"),
            sipPwdItemPath = PATH_FORM_COMP + "/telephony/sip-pwd.html",
            loadSipPwd = loadPath(sipPwdContainer, sipPwdItemPath);
        loadSipPwd.then(function (result) {
            if ("success" === result) {
                $("#usernameSIP").text("+" + voipNumber);
                sipPwdContainer.fadeIn();
                displayEditForm($("#sipEdit"), $("#sipForm"), $("#sipEdit"));
                postSipPwdAPI(customerID, voipNumber);
                togglePassword();
                resolve("success");
            }
        });
    });
}
function loadSubInfo(customerID) {
    var subInfoContainer = $("#subInfoContainer"),
        subInfoItemPath = PATH_JS_COMP + "overview-fix/sub-info.html",
        loadSubInfo = loadPath(subInfoContainer, subInfoItemPath),
        oCustomerID = $("#" + customerID);
    return loadSubInfo.then(function (result) {
        if ("success" === result) {
            var monthlyPrice = $("#monthlyPrice"),
                pricePlanNameFix = $("#pricePlanNameFix"),
                pricePlanFix = $("#pricePlanFix"),
                statusFix = $("#statusFix");
            if ("TERMINATED" === sessionStorage.getItem("subStatus") || "CLOSED" === sessionStorage.getItem("subStatus")) monthlyPrice.remove();
            else {
                displaySubStatus(oCustomerID.attr("data-status"), statusFix);
                pricePlanNameFix.text(oCustomerID.attr("data-ppname"));
                pricePlanFix.text(oCustomerID.attr("data-rc"));
                getRecurringAPI(customerID);
                if (isNaN(oCustomerID.attr("data-rc"))) monthlyPrice.remove();
                else monthlyPrice.children().show();
            }
        }
    });
}
function loadTVCredentials() {
    return new Promise(function (resolve, reject) {
        var tvCredentialContainer = $("#tvCredentialContainer"),
            tvCredentialItemPath = PATH_JS_COMP + "/tv/tvCredential.html",
            loadTVCredentials = loadPath(tvCredentialContainer, tvCredentialItemPath);
        loadTVCredentials.then(function (result) {
            if ("success" === result) resolve("success");
        });
    });
}
function loadTVPin() {
    return new Promise(function (resolve, reject) {
        var tvPinContainer = $("#tvPinContainer"),
            tvPinCodePath = PATH_JS_COMP + "/tv/pinCode.html",
            loadTVPin = loadPath(tvPinContainer, tvPinCodePath);
        loadTVPin.then(function () {
            $("#closeChangePin")
                .off("click")
                .on("click", function (event) {
                    event.preventDefault();
                    tvPinContainer.empty().hide();
                    $("#changeTVPin").attr("aria-expanded", false).focus();
                });
            resolve("success");
        });
    });
}
function loadVoipFeatures(customerID, featuresList) {
    var voipFeaturesContainer = $("#voipFeaturesContainer"),
        voipFeaturesPath = PATH_JS_COMP + "telephony-fix/voip-features.html",
        loadVoipFeatures = loadPath(voipFeaturesContainer, voipFeaturesPath);
    return loadVoipFeatures.then(function (result) {
        if ("success" === result) {
            var voipFeaturesList = $("#voipFeaturesList"),
                features = "",
                timeout = "",
                phoneField = (phoneValue = "");
            featureStatus = "";
            for (iFeature = 0; iFeature < featuresList.features.length; iFeature++) {
                timeout = featuresList.features[iFeature].timeout
                    ? '<div class="space-right space-bottom"><label for="timeout' +
                    featuresList.features[iFeature].name +
                    '">' +
                    $.i18n("subscription.telephony.timeout") +
                    '</label>                        <input type="number" required="required"  id="timeout' +
                    featuresList.features[iFeature].name +
                    '" name="timeout' +
                    featuresList.features[iFeature].name +
                    '" value="5" step="1"/></div>'
                    : "";
                featureStatus = "ON" === featuresList.features[iFeature].status ? "checked" : "";
                phoneValue = "" !== featuresList.features[iFeature].number ? featuresList.features[iFeature].number : "";
                phoneField =
                    void 0 !== featuresList.features[iFeature].number
                        ? '<div class="space-right space-bottom"><label for="phone' +
                        featuresList.features[iFeature].name +
                        '">' +
                        $.i18n("subscription.telephony.redirect_phone") +
                        '</label>                        <input type="tel" required="required" id="phone' +
                        featuresList.features[iFeature].name +
                        '" name="phone' +
                        featuresList.features[iFeature].name +
                        '" value="' +
                        phoneValue +
                        '"/></div>'
                        : "";
                features +=
                    '<li class="space-bottom">                    <form id="voipFeature' +
                    featuresList.features[iFeature].name +
                    '" action="/" method="post" novalidate class="space-bottom voipForm" data-feature="' +
                    featuresList.features[iFeature].name +
                    '" data-voip-num="' +
                    featuresList.main_phone_number +
                    '">                        <div class="space-right custom-checkbox">                            <input type="checkbox" id="activation' +
                    featuresList.features[iFeature].name +
                    '" name="activation' +
                    featuresList.features[iFeature].name +
                    '" ' +
                    featureStatus +
                    '/>                            <label for="activation' +
                    featuresList.features[iFeature].name +
                    '">' +
                    $.i18n("subscription.telephony." + featuresList.features[iFeature].name) +
                    '</label>                        </div>                        <p class="space-bottom average three-quarters">' +
                    $.i18n("subscription.telephony." + featuresList.features[iFeature].name + "_desc") +
                    '</p>                        <div class="toggle-fields hidden">                            <div class="flex flex--left flex--start">' +
                    phoneField +
                    timeout +
                    '                            </div>                        </div>                        <button type="submit" class="btn btn--secondary submitVoip space-right" id="submit' +
                    featuresList.features[iFeature].name +
                    '">' +
                    $.i18n("subscription.telephony.save_change") +
                    '</button><p id="status' +
                    featuresList.features[iFeature].name +
                    '" class="hidden" tabindex="-1"></p>                    </form>                </li>';
            }
            voipFeaturesList.html(features);
            voipFeaturesContainer.fadeIn();
            toggleFields($('input[name^="activation"]'), $(".toggle-fields"));
            postVoipFeatureAPI(customerID);
        }
    });
}
function checkSumOto(value) {
    var identificationNumber = value
        .toString()
        .substring(1, value.length - 1)
        .replace(/[^0-9x]/g, "");
    var forbiddentOtoNumber = ["123456789", "987654321"];
    if (identificationNumber.match(/^(\d)\1*$/gi) || forbiddentOtoNumber.indexOf(identificationNumber) > -1) return false;
    var checkSum = 0;
    var index = 1;
    identificationNumber = identificationNumber.split("");
    for (var i = 0; i < identificationNumber.length; i++) {
        checkSum += index * identificationNumber[i];
        index++;
    }
    var key = value.slice(value.length - 1);
    if ("X" === key) key = 10;
    return checkSum % 11 === parseInt(key) ? true : false;
}
function onOtoIdKeyDown(event) {
    if (
        !(
            event.ctrlKey ||
            event.altKey ||
            190 == event.keyCode ||
            110 == event.keyCode ||
            65 == event.keyCode ||
            66 == event.keyCode ||
            88 == event.keyCode ||
            97 == event.keyCode ||
            98 == event.keyCode ||
            120 == event.keyCode ||
            (event.keyCode >= 48 && event.keyCode <= 57) ||
            (96 <= event.keyCode && event.keyCode <= 105) ||
            8 == event.keyCode ||
            9 == event.keyCode ||
            (event.keyCode > 34 && event.keyCode < 40) ||
            46 == event.keyCode
        )
    )
        event.preventDefault();
}
function normalizeOtoId(value) {
    if (void 0 == value || 0 == value.length) return value;
    var normalized = value.toUpperCase().replace("^ABX0-9]", "");
    normalized = normalized.replace(/^([^A-B])(.*)$/, "");
    normalized = normalized.replace(/^([A-B])([^\.])(.*)$/, "$1");
    normalized = normalized.replace(/^([A-B])\.([^\d])(.*)$/, "$1.");
    normalized = normalized.replace(/^([A-B])\.(\d)([^\d])(.*)$/, "$1.$2");
    normalized = normalized.replace(/^([A-B])\.(\d{2})([^\d])(.*)$/, "$1.$2");
    normalized = normalized.replace(/^([A-B])\.(\d{3})([^\.])(.*)$/, "$1.$2");
    normalized = normalized.replace(/^([A-B])\.(\d{3})\.([^\d])(.*)$/, "$1.$2.");
    normalized = normalized.replace(/^([A-B])\.(\d{3})\.(\d)([^\d])(.*)$/, "$1.$2.$3");
    normalized = normalized.replace(/^([A-B])\.(\d{3})\.(\d{2})([^\d])(.*)$/, "$1.$2.$3");
    normalized = normalized.replace(/^([A-B])\.(\d{3})\.(\d{3})([^\.])(.*)$/, "$1.$2.$3");
    normalized = normalized.replace(/^([A-B]).(\d{3})\.(\d{3})\.([^\d])(.*)$/, "$1.$2.$3.");
    normalized = normalized.replace(/^([A-B]).(\d{3})\.(\d{3})\.(\d)([^\d])(.*)$/, "$1.$2.$3.$4");
    normalized = normalized.replace(/^([A-B]).(\d{3})\.(\d{3})\.(\d{2})([^\d])(.*)$/, "$1.$2.$3.$4");
    normalized = normalized.replace(/^([A-B]).(\d{3})\.(\d{3})\.(\d{3})([^\.])(.*)$/, "$1.$2.$3.$4");
    normalized = normalized.replace(/^([A-B]).(\d{3})\.(\d{3})\.(\d{3})\.([^0-9X])(.*)$/, "$1.$2.$3.$4.");
    normalized = normalized.replace(/^([A-B]).(\d{3})\.(\d{3})\.(\d{3})\.([0-9X])(.*)$/, "$1.$2.$3.$4.$5");
    return normalized;
}
function verifyOtoId(OTOField) {
    OTOField.on("keydown", function (event) {
        onOtoIdKeyDown(event);
        OTOField.val(normalizeOtoId(OTOField.val()));
    });
}
function displayPortinInfo(portin, aCustomerDetails) {
    $("#askPortin").hide();
    switch (portin.status) {
        case "ONGOING":
        case "CREATED":
        case "PENDING":
            let actDate = "";
            if ("ACCEPTED" === portin.process.status) actDate = "<li>" + $.i18n("subscription.telephony.planned_date") + " " + portin.activationDate + "</li>";
            $("#portinInfo").html(
                '<ul class="unstyled">' + actDate + "            <li>" + $.i18n("subscription.telephony.status") + " " + $.i18n("subscription.telephony.ONGOING", prettifyPhoneNumber(portin.numbers[0].subscriberNumber)) + "</li></ul>"
            );
            break;
        case "PORTED":
            let today = Date.now();
            let activationDateFormated = dateToDateObjectTrim(portin.creationDate);
            let activationDatePlusOneMonth = new Date(activationDateFormated);
            let activationDatePlusOneMonthTS = activationDatePlusOneMonth.setMonth(activationDatePlusOneMonth.getMonth() + 1);
            if (today < activationDatePlusOneMonthTS) $("#portinInfo").html('<p class="space-bottom">' + $.i18n("subscription.telephony.active_since") + " " + portin.activationDate + "</p>");
            $("#askPortin").show();
            $("#askPortin")
                .off("click")
                .on("click", function () {
                    loadAskPortin(aCustomerDetails);
                    $(this).hide();
                });
            break;
        case "CANCELED":
            $("#askPortin").show();
            break;
        default:
            break;
    }
}
function submitPortin(submitForm, submitBtn, customerID, domain, portinId) {
    return new Promise(function (resolve, reject) {
        if (submitForm.length) {
            var portinStep = $("#portinStep"),
                elmnt = document.getElementById("fixInfo");
            submitForm.on("submit", function (event) {
                event.preventDefault();
                if (validateForm(submitForm, submitBtn))
                    if (customerID) {
                        portinStep.addClass("loading");
                        var formData = new FormData();
                        formData.append("signed_document", $("#uploadPOA").prop("files")[0]);
                        sendPortinAPI(customerID, domain, portinId, formData, $("#portinError"), $("#sendPortin")).then(function (resultSend) {
                            if ("success" === resultSend) {
                                $("#portinError").hide();
                                elmnt.scrollIntoView();
                                getPortinStatusAPI(customerID).then(function (resultStatus) {
                                    displayPortinInfo(resultStatus[0]);
                                    $("#ongoingPortin").fadeOut();
                                });
                            }
                            resolve("success");
                        });
                    } else resolve("success");
            });
        }
    });
}
function displayEditPin() {
    let tvPinEditError = $("#tvPinEditError"),
        tvPinEditValid = $("#tvPinEditValid"),
        pinEditWrapper = $("#pinEditWrapper");
    $("#pinStatus")
        .on("click", ".action__add", function (event) {
            event.preventDefault();
            $("#closeChangePin").hide();
            $("#tvPinForm").css("min-height", $("#tvPinForm").height());
            $("#pinStatus").hide();
            let currentButton = $(this);
            loadPath(pinEditWrapper, PATH_JS_COMP + "tv/" + event.currentTarget.dataset.type + ".html").then(function (result) {
                $("#closeChangePin").show();
                togglePassword();
                let pinEditForm = $("#" + event.currentTarget.dataset.type + "Form"),
                    submitBtn = $("#" + event.currentTarget.dataset.type + "Submit");
                submitActivatePin(currentButton, tvPinEditError, tvPinEditValid, pinEditForm, submitBtn, event.currentTarget.dataset.type);
            });
        })
        .on("click", ".action__configure", function (event) {
            event.preventDefault();
            $("#closeChangePin").hide();
            $("#tvPinForm").css("min-height", $("#tvPinForm").height());
            $("#pinStatus").hide();
            loadPath(pinEditWrapper, PATH_JS_COMP + "tv/" + event.currentTarget.dataset.type + ".html").then(function (result) {
                $("#closeChangePin").show();
                togglePassword();
                let pinEditForm = $("#" + event.currentTarget.dataset.type + "Form"),
                    submitBtn = $("#" + event.currentTarget.dataset.type + "Submit");
                submitEditPin($(this), tvPinEditError, tvPinEditValid, pinEditForm, submitBtn, event.currentTarget.dataset.type);
            });
        })
        .on("click", ".action__remove", function (event) {
            event.preventDefault();
            if ("purchaseRequestControl" === event.currentTarget.dataset.type)
                postActivatePinPurchaseAPI(tvPinEditValid, tvPinEditError, null, $(this), "false").then(function () {
                    getTvLoginAPI(sessionStorage.getItem("custid")).then(function () {
                        displayPinStatus();
                        displayEditPin();
                    });
                });
            else
                postTVYouthProtectionAPI(tvPinEditValid, tvPinEditError, null, $(this), "false").then(function () {
                    getTvLoginAPI(sessionStorage.getItem("custid")).then(function () {
                        displayPinStatus();
                        displayEditPin();
                    });
                });
        });
}
function displayPinStatus() {
    let pinStatus = JSON.parse(sessionStorage.getItem("tvInfo")),
        pinStatusWrapper = $("#pinStatus");
    aStatus = [];
    pinStatusWrapper.empty();
    if (void 0 !== pinStatus && null !== pinStatus) {
        if (void 0 !== pinStatus.purchaseRequestControl) aStatus.push({ purchaseRequestControl: pinStatus.purchaseRequestControl });
        if (void 0 !== pinStatus.youthProtectionPermission) aStatus.push({ youthProtectionPermission: pinStatus.youthProtectionPermission });
        aStatus.forEach(function (oProperty) {
            for (var property in oProperty) {
                let actionBtn = "",
                    statusClass = "warning";
                if (false === oProperty[property])
                    actionBtn =
                        '<button data-type="' +
                        property +
                        '" class="btn btn--secondary action__add">                    <svg aria-hidden="true" focusable="false" class="add">                        <use xlink:href="#add"></use>                        </svg>' +
                        $.i18n("subscription.option.add") +
                        "                    </button>";
                else {
                    statusClass = "valid";
                    actionBtn =
                        '<button data-type="' +
                        property +
                        '" class="btn btn--secondary action__configure">                    <svg aria-hidden="true" focusable="false" class="edit">                        <use xlink:href="#edit"></use>                        </svg>' +
                        $.i18n("utils.labels.edit") +
                        '                    </button>                    <button data-type="' +
                        property +
                        '" class="btn btn--secondary-reversed action__remove">                    <svg aria-hidden="true" focusable="false" class="delete">                        <use xlink:href="#delete"></use>                        </svg>' +
                        $.i18n("subscription.option.remove") +
                        "                    </button>";
                }
                let purchaseRequestEdition =
                    '<div class="flex flex--wrap flex--left align--center">                    <div class="one-third">                        <p class="space-bottom space-right space-right--large">' +
                    $.i18n("subscription.tv." + property) +
                    "</p>";
                purchaseRequestEdition +=
                    '</div>                        <p class="flex flex--between ' +
                    statusClass +
                    ' space-bottom"><span class="space-right space-right--large">' +
                    $.i18n("subscription.tv.active_" + oProperty[property]) +
                    "</span>" +
                    actionBtn +
                    "</p>";
                pinStatusWrapper.append(purchaseRequestEdition);
            }
        });
    }
}
function errorTVCredential(result, tvCredentialEditError, credentialForm, submitBtn) {
    if (result && result.responseJSON)
        if ("MISSING_PARAMETER" === result.responseJSON.errorCode) displayMessageAfterEdit(tvCredentialEditError, credentialForm, submitBtn, "big-edit", $.i18n("utils.error.missing_parameter"), true);
        else displayMessageAfterEdit(tvCredentialEditError, credentialForm, submitBtn, "big-edit", $.i18n("utils.technical_error"), true);
    else displayMessageAfterEdit(tvCredentialEditError, credentialForm, submitBtn, "big-edit", $.i18n("utils.technical_error"), true);
}
function submitActivatePin(editBtn, tvPinEditError, tvPinEditValid, pinEditWrapper, submitBtn, serviceType) {
    pinEditWrapper
        .off("submit")
        .on("submit", function (event) {
            event.preventDefault();
            if (validateForm(pinEditWrapper, submitBtn)) {
                pinEditWrapper.addClass("loading");
                if ("purchaseRequestControl" === serviceType) {
                    postTVPinPurchaseAPI(tvPinEditValid, tvPinEditError, pinEditWrapper, submitBtn, $("#confirmNewTvPinPurchase").val().trim());
                    postActivatePinPurchaseAPI(tvPinEditValid, tvPinEditError, pinEditWrapper, submitBtn, "true").then(function () {
                        getTvLoginAPI(sessionStorage.getItem("custid")).then(function () {
                            displayPinStatus();
                            displayEditPin();
                        });
                    });
                } else {
                    postTVPinYouthAPI(tvPinEditValid, tvPinEditError, pinEditWrapper, submitBtn, $("#confirmNewTvPinYp").val().trim());
                    postTVYouthProtectionAPI(tvPinEditValid, tvPinEditError, pinEditWrapper, submitBtn, "true").then(function () {
                        getTvLoginAPI(sessionStorage.getItem("custid")).then(function () {
                            displayPinStatus();
                            displayEditPin();
                        });
                    });
                }
            }
        })
        .off("reset")
        .on("reset", function (event) {
            event.preventDefault();
            $("#pinEditWrapper").empty().hide();
            $("#pinStatus").show();
            editBtn.attr("aria-expanded", false).focus();
        });
}
function submitEditPin(editBtn, tvPinEditError, tvPinEditValid, pinEditWrapper, submitBtn, serviceType) {
    pinEditWrapper
        .off("submit")
        .on("submit", function (event) {
            event.preventDefault();
            if (validateForm(pinEditWrapper, submitBtn)) {
                pinEditWrapper.addClass("loading");
                if ("purchaseRequestControl" === serviceType) postTVPinPurchaseAPI(tvPinEditValid, tvPinEditError, pinEditWrapper, submitBtn, $("#confirmNewTvPinPurchase").val().trim());
                else postTVPinYouthAPI(tvPinEditValid, tvPinEditError, pinEditWrapper, submitBtn, $("#confirmNewTvPinYp").val().trim());
            }
        })
        .off("reset")
        .on("reset", function (event) {
            event.preventDefault();
            $("#pinEditWrapper").empty().hide();
            $("#pinStatus").show();
            editBtn.attr("aria-expanded", false).focus();
        });
}
function displayPaymentPlanDetail(resultGetPaymentPlan, balanceAmountDisplay) {
    let totalPayment = balanceAmountDisplay + resultGetPaymentPlan.chargeOtc;
    $("#paymentPlanBalance").text("CHF " + (balanceAmountDisplay / 100).toFixed(2));
    $("#paymentPlanFee").text("CHF " + (resultGetPaymentPlan.chargeOtc / 100).toFixed(2));
    let termInfo = "",
        optionItem = "";
    for (let iTerms = 0; iTerms < resultGetPaymentPlan.termsOverview.length; iTerms++) {
        const currentTerm = resultGetPaymentPlan.termsOverview[iTerms];
        termInfo += "<dt>" + currentTerm.nbTerms + " " + $.i18n("billing.payment_plan.terms") + "</dt><dd>CHF " + (currentTerm.listTerms[0] / 100).toFixed(2) + " " + $.i18n("utils.labels.month") + "</dd>";
        optionItem += '<option value="' + currentTerm.nbTerms + '" data-amount="' + (currentTerm.listTerms[0] / 100).toFixed(2) + '" name="nbTerm">' + currentTerm.nbTerms + "</option>";
    }
    $("#termsList").html(termInfo);
    $("#termsLength").html(optionItem);
}
function submitPaymentPlanForm(errorContainer, validContainer, currentFormWrapper, currentForm, submitCurrentForm, paymentPlanToggler, billingAccountID) {
    currentForm
        .on("submit", function (event) {
            event.preventDefault();
            let selectedTerm = $("#termsLength option:selected");
            if (validateForm(currentForm, submitCurrentForm)) {
                let payload = { term: selectedTerm.val() };
                currentForm.addClass("loading");
                displayConfirmMessage(
                    $("#paymentPlanConfirm"),
                    currentForm,
                    submitCurrentForm,
                    "",
                    $.i18n("billing.payment_plan.confirm", selectedTerm.attr("data-amount"), selectedTerm.val()),
                    "confirmPostPaymentPlan",
                    postPaymentPlanAPI.bind(this, errorContainer, validContainer, currentForm, submitCurrentForm, billingAccountID, payload)
                );
            }
        })
        .on("reset", function (event) {
            event.preventDefault();
            currentFormWrapper.addClass("hidden");
            paymentPlanToggler.attr("aria-expanded", "false").focus();
        });
}
function togglePaymentPlan(togglerBtn, toggledWrapper, resultGetPaymentPlan, balanceAmountDisplay, billingAccountID) {
    togglerBtn.off("click").on("click", function () {
        if ("false" === togglerBtn.attr("aria-expanded")) {
            togglerBtn.attr("aria-expanded", "true");
            toggledWrapper.removeClass("hidden");
        } else {
            togglerBtn.attr("aria-expanded", "false");
            toggledWrapper.addClass("hidden");
        }
        if (true === resultGetPaymentPlan.eligibility)
            loadPaymentPlanForm().then(function () {
                toggledWrapper.focus();
                displayPaymentPlanDetail(resultGetPaymentPlan, balanceAmountDisplay);
                submitPaymentPlanForm($("#paymentPlanEditError"), $("#paymentPlanEditValid"), $("#paymentPlanWrapper"), $("#paymentPlanForm"), $("#submitPaymentPlan"), $("#paymentPlanToggler"), billingAccountID);
            });
        else loadExistingPaymentPlan();
    });
}
function buildDataCounters(dataResult) {
    return new Promise(function (resolve, reject) {
        var dataCounterContainer = $("#dataCounterContainer");
        if (dataResult) {
            var dataCounter = "",
                roamingAmount = [],
                volumeConsumed = [],
                displayCounters = false;
            dataCounter +=
                '<div class="highlight">                <div class="flex flex--center flex--between graph__title">                    <h2>' +
                $.i18n("subscription.counter.data") +
                '</h2>                    <p id="dataRoaming" class="flex flex--center"></p>';
            dataCounter += "</div>";
            if (!!dataResult.dataQuota.zoneQuotas) {
                for (var iZone = 0; iZone < dataResult.dataQuota.zoneQuotas.length; iZone++) {
                    var currentZone = dataResult.dataQuota.zoneQuotas[iZone],
                        counterContainer = "",
                        counterHTML = "",
                        bundleInfo = !!currentZone.free ? '<p class="message message--notif space-bottom">' + $.i18n("subscription.counter.freesurf") + "</p>" : "";
                    if (!!currentZone && isAtLeastOneCounterAvailable(currentZone)) {
                        const countersType = ["PLAN", "OPTION", "PASS", "BUNDLE"];
                        for (let i = 0; i < countersType.length; i++) {
                            currentCounter = getCounter(currentZone, countersType[i]);
                            if (null !== currentCounter) {
                                roamingAmount.push(currentCounter.amount);
                                volumeConsumed.push(currentCounter.used);
                                counterHTML += '<p class="one-third graph__label">' + $.i18n("subscription.counter." + currentCounter.level.toLowerCase()) + "</p>";
                                counterHTML +=
                                    '<div class="two-thirds space-bottom">' +
                                    buildDataGraph(
                                        "counter" + currentZone.zone + currentCounter.level,
                                        currentCounter.used,
                                        currentCounter.total,
                                        currentCounter.usedPercent,
                                        currentCounter.amount,
                                        new Date(currentCounter.expirationDate).toISOString(),
                                        currentCounter.level
                                    ) +
                                    "</div>";
                            }
                        }
                        counterContainer += '<div class="grid-2-small-1 has-gutter">' + counterHTML + "</div>";
                        displayCounters = true;
                    }
                    if (!!currentZone && isAtLeastOneCounterAvailable(currentZone)) {
                        var countryList = searchInObject(dataResult.zoneDefinitions, { zone: currentZone.zone });
                        dataCounter += '<div class="space-top flex flex--center flex--left">                                <h3 class="space-right">' + $.i18n("subscription.counter." + currentZone.zone.toLowerCase()) + "</h3>";
                        if (countryList.length) {
                            var aCountries = countryList[0].countries;
                            dataCounter +=
                                '<button type="button" class="btn btn--secondary-reversed space-bottom--thin countryToggler" aria-label="' +
                                $.i18n("subscription.counter.country_list_sr", currentZone.zone.toLowerCase()) +
                                '">' +
                                $.i18n("subscription.counter.country_list") +
                                "</button>                                </div>";
                            if (aCountries.length) dataCounter += '<p class="hidden average space-top space-bottom countryToggled">' + aCountries.join(", ") + "</p>";
                        } else dataCounter += "</div>";
                    }
                    dataCounter += bundleInfo;
                    dataCounter += counterContainer;
                }
                if (roamingAmount.length) var totalRoamingAmount = roamingAmount.reduce(reducer);
                if (volumeConsumed.length) var totalVolumeConsumed = volumeConsumed.reduce(reducer);
            }
            dataCounter += "</div>";
            if (true === displayCounters) {
                dataCounterContainer.prepend(dataCounter);
                if (roamingAmount.length && volumeConsumed.length)
                    $("#dataRoaming").html("<strong>" + $.i18n("subscription.counter.total_roaming") + ": </strong>" + "&nbsp;" + formatBytes(totalVolumeConsumed) + ", CHF " + (totalRoamingAmount / 100).toFixed(2));
            }
            resolve();
        } else resolve();
    });
}
function isAtLeastOneCounterAvailable(currentZone) {
    return null !== currentZone.passQuotaDto || null !== currentZone.optionQuotaDto || null !== currentZone.planQuotaDto || null !== currentZone.bundleQuotaDto;
}
function getCounter(currentZone, level) {
    switch (level) {
        case "PLAN":
            return currentZone.planQuotaDto;
        case "OPTION":
            return currentZone.optionQuotaDto;
        case "PASS":
            return currentZone.passQuotaDto;
        case "BUNDLE":
            return currentZone.bundleQuotaDto;
    }
    return null;
}
function buildDataGraph(idA11y, volumeConsumed, volumeAllowance, iRatio, costConsumed, expirationDate, level) {
    var onHTML = "",
        onAllowance = "",
        graphClass = "",
        className = "--allowed";
    if (-1 === volumeAllowance) onAllowance = '<span class="a11y-hidden">' + $.i18n("subscription.counter.unlimited_" + BRAND.name) + '</span><span aria-hidden="true"> &infin;</span>';
    else {
        onAllowance = formatBytes(volumeAllowance);
        if (volumeConsumed > volumeAllowance) {
            graphClass = "--over";
            className = "--over-allowed";
        }
    }
    if ("BUNDLE" === level) onAllowance += '<br/><span class="label">' + $.i18n("subscription.counter.expires_on") + "</span>" + dateWSToRealDate(expirationDate.substring(0, 10));
    onHTML += '<span class="a11y-hidden">' + $.i18n("subscription.counter.on") + '</span> <span aria-hidden="true">/</span> ' + onAllowance;
    if (costConsumed) onHTML += " &ndash; CHF " + (costConsumed / 100).toFixed(2);
    var htmlResult =
        '<p id="' +
        idA11y +
        '" class="consumption"><span class="a11y-hidden">' +
        $.i18n("subscription.counter.consumed_" + BRAND.name) +
        " </span>" +
        formatBytes(volumeConsumed) +
        " " +
        onHTML +
        '</p>    <div class="graph graph__counter graph__counter' +
        graphClass +
        '">        <div class="graph__counter__content graph__counter__content' +
        className +
        ' animated animated--width" style="width: ' +
        iRatio +
        '%;"></div>';
    htmlResult += "</div>";
    return htmlResult;
}
function buildUpsellList(dataResult) {
    return new Promise(function (resolve, reject) {
        var availableUpsellContainer = $("#availableUpsellContainer");
        if (dataResult) {
            var dataCounter = "",
                bHasContent = false;
            dataCounter +=
                '<div class="highlight">            <div class="flex flex--center flex--between graph__title">                <h2>' +
                $.i18n("subscription.counter.data") +
                '</h2>                <p id="dataRoaming" class="flex flex--center"></p>';
            dataCounter += "</div>";
            if (!!dataResult.dataQuota.zoneQuotas)
                for (var iZone = 0; iZone < dataResult.dataQuota.zoneQuotas.length; iZone++) {
                    var currentZone = dataResult.dataQuota.zoneQuotas[iZone],
                        upsellsHTML = "",
                        bundleInfo = !!currentZone.free ? '<p class="message message--notif space-bottom">' + $.i18n("subscription.counter.freesurf") + "</p>" : "";
                    if (!!currentZone.allowanceProducts && currentZone.allowanceProducts.upsells.length) {
                        bHasContent = true;
                        upsellsHTML += "";
                        upsellsHTML +=
                            '                        <div class="js-accordion" data-accordion-prefix-classes="js-accordion--mobile">                            <div class="js-accordion__panel" data-accordion-opened="true">                                <div class="js-accordion__content" tabindex="-1">                                    <p class="js-accordion__header space-bottom">' +
                            $.i18n("subscription.counter.available_upsells") +
                            '</p>                                    <div id="validBuyUpsell' +
                            currentZone.zone +
                            '" class="message message--valid space-bottom" tabindex="-1"></div>                                        <div id="confirmBuyUpsell' +
                            currentZone.zone +
                            '" class="confirm-container" tabindex="-1"></div>                                    <form id="upsellList' +
                            currentZone.zone +
                            '">                                        <fieldset>                                        <legend class="a11y-hidden">' +
                            $.i18n("subscription.counter.choose_available_upsells") +
                            "</legend>";
                        for (var iUpsell = 0; iUpsell < currentZone.allowanceProducts.upsells.length; iUpsell++) {
                            var currentUpsell = currentZone.allowanceProducts.upsells[iUpsell],
                                isChecked = 0 === iUpsell ? "checked" : "";
                            upsellsHTML +=
                                '<div class="custom-radio">                                                <input type="radio" name="upsellName' +
                                currentZone.zone +
                                '" id="upsell' +
                                currentUpsell.id +
                                '"                                                     ' +
                                isChecked +
                                '                                                    data-valid="validBuyUpsell' +
                                currentZone.zone +
                                '"                                                     data-trigger="confirmBuyUpsell' +
                                currentZone.zone +
                                '"                                                     data-id="' +
                                currentUpsell.id +
                                '"                                                     data-zoneId="' +
                                currentZone.areaFromId +
                                '"                                                     data-code="' +
                                currentUpsell.code +
                                '"                                                     data-cost="' +
                                currentUpsell.cost +
                                '"                                                    data-duration="' +
                                currentUpsell.duration +
                                '"                                                    data-quantity="' +
                                currentUpsell.quantity +
                                '"                                                     value="' +
                                currentUpsell.id +
                                '" required>                                                <label for="upsell' +
                                currentUpsell.id +
                                '" id="labelUpsell' +
                                currentUpsell.id +
                                '">                                                    ' +
                                currentUpsell.name +
                                ", " +
                                $.i18n("subscription.counter.valid_for", currentUpsell.duration) +
                                "                                                </label>                                            </div>";
                        }
                        upsellsHTML +=
                            '</fieldset><div class="space-top"><button type="button" id="buyUpsell' +
                            currentZone.zone +
                            '" class="btn btn--secondary btn--centered buyUpsell">' +
                            $.i18n("subscription.counter.buy_data") +
                            "</button></div>                                    </form>                                </div>                            </div>                        </div>";
                        var countryList = searchInObject(dataResult.zoneDefinitions, { zone: currentZone.zone });
                        dataCounter += '<div class="space-top flex flex--center flex--left">                        <h3 class="space-right">' + $.i18n("subscription.counter." + currentZone.zone.toLowerCase()) + "</h3>";
                        if (countryList.length) {
                            var aCountries = countryList[0].countries;
                            dataCounter +=
                                '<button type="button" class="btn btn--secondary-reversed space-bottom--thin countryToggler" aria-label="' +
                                $.i18n("subscription.counter.country_list_sr", currentZone.zone.toLowerCase()) +
                                '" aria-expanded="false">' +
                                $.i18n("subscription.counter.country_list") +
                                "</button>                        </div>";
                            if (aCountries.length) dataCounter += '<p class="hidden average space-top space-bottom countryToggled">' + aCountries.join(", ") + "</p>";
                        } else dataCounter += "</div>";
                    }
                    dataCounter += bundleInfo;
                    dataCounter += upsellsHTML;
                }
            dataCounter += "</div>";
            if (!bHasContent) dataCounter = "";
            availableUpsellContainer.prepend(dataCounter);
            resolve();
        } else resolve();
    });
}
function buildVoiceSMSConso(idA11y, graphType, volumeConsumed, costConsumed, isPremium) {
    var onHTML = "",
        graphLabel = "",
        units = "";
    if (isPremium) graphLabel = "Premium";
    switch (graphType) {
        case "VOICE":
            volumeConsumed = secondsToTime(volumeConsumed);
            units = $.i18n("subscription.counter.seconds");
            break;
        case "SMS":
            units = "SMS";
            break;
        case "MMS":
            units = "MMS";
            break;
    }
    if (costConsumed) onHTML += " &ndash; CHF " + (costConsumed / 100).toFixed(2);
    var htmlResult = '<strong class="label">' + graphLabel + "</strong><span>" + $.i18n("subscription.counter.consumed_" + BRAND.name) + " </span>" + volumeConsumed + " " + units + onHTML;
    return htmlResult;
}
function buildVoiceSMSCounters(voiceSMSResult) {
    return new Promise(function (resolve, reject) {
        var voiceSMSCounterContainer = $("#voiceSMSCounterContainer");
        if (voiceSMSResult && false === voiceSMSResult.empty) {
            var voiceSMSCounter = "",
                oCounter = { types: [] },
                oVoice = { type: "VOICE", zones: [] };
            oSMS = { type: "SMS", zones: [] };
            oMMS = { type: "MMS", zones: [] };
            const aCountersEntries = void 0 === Object.entries ? entriesPolyFill(voiceSMSResult) : Object.entries(voiceSMSResult);
            aCountersEntries.forEach(function (aCountersEntry) {
                var oVoiceZones = {},
                    oSMSZones = {},
                    oMMSZones = {};
                (aVoiceCounters = []), (aSMSCounters = []), (aMMSCounters = []);
                if (!$.isEmptyObject(aCountersEntry[1])) {
                    oVoiceZones.zoneName = aCountersEntry[0];
                    oSMSZones.zoneName = aCountersEntry[0];
                    oMMSZones.zoneName = aCountersEntry[0];
                    const aCounterInfo = void 0 === Object.entries ? entriesPolyFill(aCountersEntry[1]) : Object.entries(aCountersEntry[1]);
                    aCounterInfo.forEach(function (aConsumptionType) {
                        if (aCounterInfo.length)
                            if ("data" !== aConsumptionType[0]) {
                                if ("VOICE" == aConsumptionType[1].type) aVoiceCounters.push(aConsumptionType[1]);
                                if ("SMS" == aConsumptionType[1].type) aSMSCounters.push(aConsumptionType[1]);
                                if ("MMS" == aConsumptionType[1].type) aMMSCounters.push(aConsumptionType[1]);
                                oVoiceZones.counters = aVoiceCounters;
                                oSMSZones.counters = aSMSCounters;
                                oMMSZones.counters = aMMSCounters;
                            }
                    });
                    if (oVoiceZones.counters.length) oVoice.zones.push(oVoiceZones);
                    if (oSMSZones.counters.length) oSMS.zones.push(oSMSZones);
                    if (oMMSZones.counters.length) oMMS.zones.push(oMMSZones);
                }
            });
            oCounter.types.push(oVoice);
            oCounter.types.push(oSMS);
            oCounter.types.push(oMMS);
            if (oCounter.types.length)
                for (var iType = 0; iType < oCounter.types.length; iType++)
                    if (oCounter.types[iType].zones.length) {
                        voiceSMSCounter +=
                            '<div class="highlight">                        <div class="flex flex--center flex--between graph__title">                            <h2>' +
                            $.i18n("subscription.counter." + oCounter.types[iType].type.toLowerCase()) +
                            "</h2>                        </div>";
                        for (var iZone = 0; iZone < oCounter.types[iType].zones.length; iZone++) {
                            var currentZone = oCounter.types[iType].zones[iZone],
                                counterContainer = "",
                                counterHTML = "";
                            if (void 0 !== currentZone.counters) {
                                for (var iCounter = 0; iCounter < currentZone.counters.length; iCounter++) {
                                    var currentCounter = currentZone.counters[iCounter];
                                    counterHTML +=
                                        '<p class="label">                                    <strong>' +
                                        $.i18n("subscription.counter." + currentCounter.direction) +
                                        "</strong><br/>                                    " +
                                        $.i18n("subscription.counter." + currentCounter.level.toLowerCase()) +
                                        " " +
                                        buildVoiceSMSConso("counter" + currentCounter.from, oCounter.types[iType].type, currentCounter.volumeUsed, currentCounter.amount, currentCounter.premium) +
                                        "</p>";
                                }
                                counterContainer += counterHTML;
                            }
                            voiceSMSCounter += '<h3 class="space-top">' + $.i18n("subscription.counter." + currentZone.zoneName.toLowerCase()) + "</h3>";
                            voiceSMSCounter += counterContainer;
                        }
                        voiceSMSCounter += "</div>";
                    }
            voiceSMSCounterContainer.prepend(voiceSMSCounter);
            resolve();
        } else resolve();
    });
}
function buildVoiceSMSGraph(idA11y, graphType, volumeConsumed, volumeAllowance, iRatio, costConsumed, isPremium) {
    var onHTML = "",
        onAllowance = "",
        graphClass = "";
    graphLabel = "";
    className = "--allowed";
    if (isPremium) {
        graphLabel = "Premium";
        graphClass = "--over";
        className = "--over-allowed";
    }
    if ("VOICE" === graphType) volumeConsumed = secondsToTime(volumeConsumed);
    if (-1 === volumeAllowance) onAllowance = '<span class="a11y-hidden">' + $.i18n("subscription.counter.unlimited_" + BRAND.name) + '</span><span aria-hidden="true"> &infin;</span>';
    else {
        if ("VOICE" === graphType) volumeAllowance = secondsToTime(volumeAllowance);
        onAllowance = volumeAllowance;
    }
    var onHTML = '<span class="a11y-hidden">' + $.i18n("subscription.counter.on") + '</span> <span aria-hidden="true">/</span> ' + onAllowance;
    if (costConsumed) onHTML += " &ndash; CHF " + (costConsumed / 100).toFixed(2);
    var htmlResult =
        '<p id="' +
        idA11y +
        '" class="consumption"><span class="label">' +
        graphLabel +
        '</span><span class="a11y-hidden">' +
        $.i18n("subscription.counter.consumed_" + BRAND.name) +
        " </span>" +
        volumeConsumed +
        " " +
        onHTML +
        '</p>    <div class="graph graph__counter graph__counter' +
        graphClass +
        '">        <div class="graph__counter__content graph__counter__content' +
        className +
        ' animated animated--width" style="width: ' +
        iRatio +
        '%;"></div>';
    htmlResult += "</div>";
    return htmlResult;
}
function buyUpsell(subId, currentLang) {
    if ($(".buyUpsell").length) {
        var confirmBuyUpsellItemPath = PATH_FORM_COMP + "overview/confirm-buy-upsell.html";
        $(".buyUpsell").each(function (ind, ele) {
            $(ele)
                .off("click")
                .on("click", function () {
                    var currentUpsell = $(ele).parents("form").find('input[type="radio"]:checked'),
                        currentUpsellLabel = $(ele).parents("form").find('input[type="radio"]:checked + label'),
                        confirmBuyUpsellTarget = $("#" + currentUpsell.attr("data-trigger")),
                        confirmBuyUpsellParagraph = "#confirmBuyUpsellParagraph",
                        confirmi18n = $.i18n("subscription.counter.buy_upsell_confirm_" + BRAND.name, currentUpsellLabel.text());
                    loadConfirmation(confirmBuyUpsellTarget, confirmBuyUpsellItemPath, confirmBuyUpsellParagraph, confirmi18n).then(function () {
                        confirmBuyUpsellTarget.focus();
                        $(ele).parents("form").find(".custom-radio").hide();
                        $(ele).hide();
                        confirmBuyUpsell(subId, currentLang, currentUpsell, $(ele));
                    });
                });
        });
    }
}
function confirmBuyUpsell(subID, currentLang, currentUpsell, triggerConfirmation) {
    var parentID = $("#" + currentUpsell.attr("data-trigger"));
    parentID
        .find('button[type="reset"]')
        .off("click")
        .on("click", function () {
            triggerConfirmation.parents("form").find(".custom-radio").show();
            triggerConfirmation.show().focus();
            parentID.empty();
        });
    parentID
        .find('button[type="submit"]')
        .off("click")
        .on("click", function (e) {
            e.preventDefault();
            parentID.addClass("loading");
            postUpsellAPI(subID, currentLang, currentUpsell, triggerConfirmation);
        });
}
function displayCounters(subId, currentLang) {
    return new Promise(function (resolve, reject) {
        var promiseData = displayDataCounters(subId, currentLang),
            countersContainer = $("#countersContainer");
        Promise.all([promiseData]).then(function (values) {
            countersContainer.removeClass("hidden").addClass("has-gutter-xl no-stretch animated animated--fade-in-fast");
            resolve("success");
        });
    });
}
function displayDataCounters(subId, currentLang) {
    return new Promise(function (resolve, reject) {
        getCostControlAPI(subId, currentLang).then(function (resultGetCostControl) {
            if ("get cost control failed" !== resultGetCostControl)
                buildDataCounters(resultGetCostControl).then(function () {
                    $(".countryToggler").each(function (i, e) {
                        dropdownToggle($(e), $(e).parent().next(), false);
                    });
                    $(".js-accordion").accordion();
                    resolve();
                });
        });
    });
}
function displayUpsellList(subId, currentLang) {
    return new Promise(function (resolve, reject) {
        getCostControlAPI(subId, currentLang).then(function (resultGetCostControl) {
            if ("get cost control failed" !== resultGetCostControl)
                buildUpsellList(resultGetCostControl).then(function () {
                    $(".countryToggler").each(function (i, e) {
                        dropdownToggle($(e), $(e).parent().next(), false);
                    });
                    $(".js-accordion").accordion();
                    buyUpsell(subId, currentLang);
                    resolve();
                });
        });
    });
}
function displayVoiceSMSCounters(subId, currentLang) {
    return new Promise(function (resolve, reject) {
        getCountersAPI(subId, currentLang).then(function (resultGetCounters) {
            if ("get counters failed" !== resultGetCounters)
                buildVoiceSMSCounters(resultGetCounters).then(function () {
                    resolve();
                });
        });
    });
}
function reducer(previousValue, currentValue) {
    return previousValue + currentValue;
}
function loadExistingPaymentPlan() {
    return new Promise(function (resolve, reject) {
        let existingPaymentPlanFormContainer = $("#paymentPlanStateContainer"),
            existingPaymentPlanItemPath = PATH_FORM_COMP + "billing/existing_plan.html",
            loadExistingPaymentPlan = loadPath(existingPaymentPlanFormContainer, existingPaymentPlanItemPath);
        loadExistingPaymentPlan.then(function (result) {
            if ("success" === result) $("#exsitingPlan").html($.i18n("billing.payment_plan.existing_plan"));
        });
    });
}
function loadMobileTabsContent(event, tabTriggered, targetContentDisplay, pathSubDetail, subID, lang, paymentType) {
    var customLoad = loadOnTrigger(event, tabTriggered, targetContentDisplay, pathSubDetail);
    $(".js-tabcontent").empty();
    return customLoad.then(function (selectedId) {
        if ("" !== selectedId)
            switch (selectedId) {
                case 0:
                    displaySubOverview(subID, paymentType);
                    break;
                case 1:
                    displaySubUsages(subID, lang);
                    break;
                case 2:
                    displaySubConfig(subID, paymentType);
                    break;
                case 3:
                    displaySubOptions(subID);
                    break;
                case 4:
                    displaySubRoaming(subID);
                    break;
                default:
                    break;
            }
    });
}
function loadPaymentPlanForm() {
    let paymentPlanFormContainer = $("#paymentPlanStateContainer"),
        paymentPlanFormItemPath = PATH_FORM_COMP + "billing/payment_plan_form.html",
        loadPaymentPlanForm = loadPath(paymentPlanFormContainer, paymentPlanFormItemPath);
    return loadPaymentPlanForm;
}
function loadZattoo(optionCode) {
    return new Promise(function (resolve, reject) {
        var zattooContainer = $("#" + optionCode),
            zattooItemPath = PATH_JS_COMP + "options/zattoo.html",
            loadZattoo = loadPath(zattooContainer, zattooItemPath);
        loadZattoo.then(function (result) {
            if ("success" === result) resolve();
        });
    });
}
function loadZattooForm(event, zattooFormTrigger, targetContentDisplay, pathZattooForm, subId, optionCode) {
    return new Promise(function (resolve, reject) {
        var customLoad = loadOnTrigger(event, zattooFormTrigger, targetContentDisplay, pathZattooForm);
        customLoad.then(function () {
            $("#resetZattoo").on("click", function () {
                initZattooForm(subId, optionCode);
            });
            $("#zattooForm").on("submit", function (event) {
                event.preventDefault();
                if (validateForm($("#zattooForm"), $("#submitZattoo"))) postZattooAPI(subId, $("#confirmZattooLogin"), optionCode, $("#zattooEditError"), $("#zattooEditValid"), $("#zattooForm"), $("#submitZattoo"));
            });
            resolve();
        });
    });
}
function configureOption(subId, optionCode, messageContainer) {
    return new Promise(function (resolve, reject) {
        initZattooForm(subId, optionCode).then(function () {
            resolve();
        });
    });
}
function initZattooForm(subId, optionCode) {
    return new Promise(function (resolve, reject) {
        loadZattoo(optionCode).then(function () {
            var zattooContainer = $("#" + optionCode),
                pathZattooConf = [PATH_FORM_COMP + "options/zattoo-new.html", PATH_FORM_COMP + "options/zattoo-free.html", PATH_FORM_COMP + "options/zattoo-premium.html"];
            customOnChange(':radio[name="zattooConf"]', zattooContainer, pathZattooConf, loadZattooForm, subId, optionCode);
            resolve();
        });
    });
}
function displayTableOrders(dataSource) {
    resultConstructor = '<div class="animation animated animated--fade-in-fast">';
    resultConstructor += '<div class="responsive-table">        <table class="hybrid-table table">        <caption class="a11y-hidden h2">' + $.i18n("tabs.orders.title") + "</caption>";
    resultConstructor +=
        '<thead>                                <tr>                                <th scope="col">' +
        $.i18n("subscription.table.confirmationCode") +
        '</th>                                <th scope="col">' +
        $.i18n("subscription.table.creationDate") +
        '</th>                                <th scope="col">' +
        $.i18n("subscription.table.status") +
        '</th>                                <th role="presentation" class="hidden-desktop"></th>                                <th scope="col">' +
        $.i18n("subscription.table.trackingNumber") +
        '</th>                                <th scope="col">' +
        $.i18n("subscription.table.pdf") +
        "</th>";
    resultConstructor += "</tr></thead>";
    dataSource.forEach(function (oOrder) {
        jTitles = 0;
        resultConstructor += "<tr>";
        for (var property in oOrder) {
            jTitles++;
            if (4 === jTitles)
                resultConstructor +=
                    '<td class="see-more">                        <button aria-label="' +
                    $.i18n("subscription.table.detail_order") +
                    '">' +
                    $.i18n("utils.labels.see_more") +
                    '</button>                    </td>                    <td>                        <h4 class="hybrid-table__column">' +
                    $.i18n("subscription.table." + property) +
                    "</h4>                        " +
                    oOrder[property] +
                    "</td>";
            else resultConstructor += '<td>                        <h4 class="hybrid-table__column">' + $.i18n("subscription.table." + property) + "</h4>                        " + oOrder[property] + "</td>";
        }
        resultConstructor += "</tr>";
    });
    resultConstructor += "</table>        </div>";
    resultConstructor += "</div>";
    $("#orderContainer").html(resultConstructor);
    if ($(".pdf-link").length)
        $(".pdf-link").each(function (ind, ele) {
            $(ele).on("click", function (e) {
                e.preventDefault();
                var linkParams = $(ele).attr("id").split("-");
                getMobileOrderContractAPI(linkParams[0], linkParams[1]).then(function (resultPDF) {
                    downloadDocument(resultPDF, linkParams[1]);
                });
            });
        });
    seeMore();
    paginateTable($("#orderContainer .hybrid-table"), 5);
}
function displaySimFormatChoice(aSimFormat, simFormatWrapper, currentSimType) {
    let formatChoice = "";
    for (let iFormat = 0; iFormat < aSimFormat.length; iFormat++) {
        const currentFormat = aSimFormat[iFormat];
        let bChecked = "";
        if (currentSimType === currentFormat) bChecked = "checked";
        formatChoice +=
            '<div class="custom-radio custom-radio--inline">            <input type="radio" name="simFormat" id="simFormat' +
            currentFormat +
            '" value="' +
            currentFormat +
            '" ' +
            bChecked +
            ' required>            <label for="simFormat' +
            currentFormat +
            '">' +
            $.i18n("subscription.config." + currentFormat) +
            "</label>        </div>";
    }
    simFormatWrapper.html(formatChoice);
}
function fillCurrentAddress(targetAddress, subId) {
    targetAddress.html($("#" + subId).attr("data-address"));
}
function displayHistoryRefillResult(resultContainer, resultConstructor, dataTitle, dataSource) {
    var dataTitleId = dataTitle.replace(/ /g, "");
    resultConstructor += '<div class="animation animated animated--fade-in-fast">';
    resultConstructor += '<h2 class="hidden-desktop">' + dataTitle + "</h2>";
    resultConstructor +=
        '<div class="dropdown-sort hidden"><p class="space-bottom">' +
        $.i18n("utils.labels.sort_by") +
        '</p><ul class="inline"><li><button class="btn" data-sort="' +
        dataTitleId +
        $.i18n("subscription.table.date") +
        '">' +
        $.i18n("subscription.table.date") +
        '</button></li>                    <li><button class="btn" data-sort="' +
        dataTitleId +
        $.i18n("subscription.table.amount") +
        '">' +
        $.i18n("subscription.table.amount") +
        '</button></li>                    <li><button class="btn" data-sort="' +
        dataTitleId +
        $.i18n("subscription.table.voucher") +
        '">' +
        $.i18n("subscription.table.voucher") +
        '</button></li>                    <li><button class="btn" data-sort="' +
        dataTitleId +
        $.i18n("subscription.table.channel") +
        '">' +
        $.i18n("subscription.table.channel") +
        "</button></li></ul></div>";
    resultConstructor +=
        '<div class="responsive-table">        <table id="' +
        dataTitleId +
        '" class="hybrid-table table table--sortable" data-sortable>        <caption class="hidden-mobile h2">' +
        dataTitle +
        ' <span class="a11y-hidden">' +
        $.i18n("utils.labels.sortable") +
        "</span></caption>";
    aHistoryResult = [];
    resultConstructor +=
        '<thead>                                <tr>                                <th scope="col"><button id="' +
        dataTitleId +
        $.i18n("subscription.table.date") +
        '">' +
        $.i18n("subscription.table.date") +
        '<span class="sort-arrow"></span></button></th>                                <th scope="col"><button id="' +
        dataTitleId +
        $.i18n("subscription.table.amount") +
        '">' +
        $.i18n("subscription.table.amount") +
        '<span class="sort-arrow"></span></button></th>                                <th scope="col"><button id="' +
        dataTitleId +
        $.i18n("subscription.table.voucher") +
        '">' +
        $.i18n("subscription.table.voucher") +
        '<span class="sort-arrow"></span></button></th>                                <th role="presentation" class="hidden-desktop"></th>                                <th scope="col"><button id="' +
        dataTitleId +
        $.i18n("subscription.table.channel") +
        '">' +
        $.i18n("subscription.table.channel") +
        '<span class="sort-arrow"></span></button></th>';
    resultConstructor += "</tr></thead>";
    dataSource.forEach(function (oHistoryTransaction) {
        oHistoryObject = {
            date: oHistoryTransaction["date"],
            amount: (oHistoryTransaction["amount"] / 100).toFixed(2),
            voucher: oHistoryTransaction["voucher"] ? oHistoryTransaction["voucher"] : "-",
            channel: oHistoryTransaction["channel"],
        };
        aHistoryResult.push(oHistoryObject);
    });
    aHistoryResult.forEach(function (oHistoryTransaction) {
        jTitles = 0;
        resultConstructor += "<tr>";
        for (var property in oHistoryTransaction) {
            var dataDisplay = "channel" === property ? $.i18n("subscription.table." + oHistoryTransaction[property].toLowerCase()) : oHistoryTransaction[property];
            jTitles++;
            if (4 === jTitles)
                resultConstructor +=
                    '<td class="see-more">                        <button aria-label="' +
                    $.i18n("subscription.table.detail") +
                    '">' +
                    $.i18n("utils.labels.see_more") +
                    '</button>                    </td>                    <td>                        <h4 class="hybrid-table__column">' +
                    $.i18n("subscription.table." + property) +
                    "</h4>                        " +
                    dataDisplay +
                    "</td>";
            else resultConstructor += '<td>                        <h4 class="hybrid-table__column">' + $.i18n("subscription.table." + property) + "</h4>                        " + dataDisplay + "</td>";
        }
        resultConstructor += "</tr>";
    });
    resultConstructor += "</table>        </div>";
    resultConstructor += "</div>";
    resultContainer.append(resultConstructor);
}
function displayTablePastUpsells(dataSource) {
    var resultConstructor = '<div class="animation animated animated--fade-in-fast">',
        currentLang = setDefaultLang();
    resultConstructor += '<h2 class="hidden-desktop">' + $.i18n("subscription.roaming.past_upsells") + "</h2>";
    resultConstructor +=
        '<div class="dropdown-sort hidden"><p class="space-bottom">' +
        $.i18n("utils.labels.sort_by") +
        '</p>                    <ul class="inline">                    <li><button class="btn" data-sort="' +
        $.i18n("subscription.table.commercialName") +
        '">' +
        $.i18n("subscription.table.commercialName") +
        '</button></li>                    <li><button class="btn" data-sort="' +
        $.i18n("subscription.table.amount") +
        '">' +
        $.i18n("subscription.table.amount") +
        '</button></li>                    <li><button class="btn" data-sort="' +
        $.i18n("subscription.table.start date") +
        '">' +
        $.i18n("subscription.table.start date") +
        "</button></li></ul></div>";
    resultConstructor +=
        '<div class="responsive-table">        <table id="' +
        '" class="hybrid-table table table--sortable" data-sortable>        <caption class="hidden-mobile h2">' +
        $.i18n("subscription.roaming.past_upsells") +
        ' <span class="a11y-hidden">' +
        $.i18n("utils.labels.sortable") +
        "</span></caption>";
    aHistoryResult = [];
    resultConstructor +=
        '<thead>                                <tr>                                <th scope="col"><button id="' +
        $.i18n("subscription.table.commercialName") +
        '">' +
        $.i18n("subscription.table.commercialName") +
        '<span class="sort-arrow"></span></button></th>                                <th scope="col"><button id="' +
        $.i18n("subscription.table.amount") +
        '">' +
        $.i18n("subscription.table.amount") +
        '<span class="sort-arrow"></span></button></th>                                <th scope="col"><button id="' +
        $.i18n("subscription.table.start date") +
        '">' +
        $.i18n("subscription.table.start date") +
        '<span class="sort-arrow"></span></button></th>';
    resultConstructor += "</tr></thead>";
    dataSource.forEach(function (oUpsell) {
        resultConstructor += "<tr>";
        for (var property in oUpsell)
            if ("creationDate" === property) resultConstructor += '<td>                    <h4 class="hybrid-table__column">' + $.i18n("subscription.table.start date") + "</h4>                    " + oUpsell[property] + "</td>";
            else if ("commercialName" === property)
                resultConstructor += '<td>                    <h4 class="hybrid-table__column">' + $.i18n("subscription.table." + property) + "</h4>                    " + oUpsell[property][currentLang] + "</td>";
            else if ("price" === property)
                resultConstructor += '<td>                    <h4 class="hybrid-table__column">' + $.i18n("subscription.table.amount") + "</h4>                    " + (oUpsell[property] / 100).toFixed(2) + "</td>";
        resultConstructor += "</tr>";
    });
    resultConstructor += "</table>        </div>";
    resultConstructor += "</div>";
    $("#pastUpsellsContainer").html(resultConstructor);
}
function submitRoamingCost(subID) {
    var newDataCost = $("#newDataCost"),
        newVoiceCost = $("#newVoiceCost"),
        roamingCostVisibleArea = $("#roamingCostVisibleArea"),
        changeRoamingCostForm = $("#changeRoamingCostForm"),
        changeRoamingCost = $("#changeRoamingCost"),
        newRoamingCostForm = $("#newRoamingCostForm"),
        submitNewRoamingCost = $("#submitNewRoamingCost"),
        newRoamingCostValidationMessageContainer = $("#newRoamingCostValidationMessage");
    if (submitNewRoamingCost.length)
        newRoamingCostForm
            .off("submit")
            .on("submit", function (event) {
                event.preventDefault();
                if (validateForm(newRoamingCostForm, submitNewRoamingCost))
                    if ("0" === newDataCost.val() || "0" === newVoiceCost.val())
                        displayConfirmMessage(
                            newRoamingCostValidationMessageContainer,
                            null,
                            submitNewRoamingCost,
                            "inline-edit",
                            $.i18n("subscription.roaming.spending_limit_zero_warning"),
                            "confirmNewRoamingCost",
                            postRoamingCostAPI.bind(this, subID)
                        );
                    else postRoamingCostAPI(subID);
            })
            .on("reset", function (event) {
                event.preventDefault();
                newRoamingCostForm.show();
                changeRoamingCostForm.hide();
                roamingCostVisibleArea.show();
                changeRoamingCost.attr("aria-expanded", false).focus();
            });
}
function displayTableResult(resultContainer, resultConstructor, dataTitle, dataSource, pageName) {
    resultConstructor += '<div class="animation animated animated--fade-in-fast">';
    resultConstructor += "<h2>" + dataTitle + "</h2>";
    const aDataSourceResultEntries = void 0 === Object.entries ? entriesPolyFill(dataSource) : Object.entries(dataSource);
    aDataSourceResultEntries.forEach(function (aDataSourceResultEntry) {
        if (resultContainer.is("#dataResultContainer")) resultConstructor += '<h3 class="hidden-desktop">' + aDataSourceResultEntry[0].substr(0, 1) + aDataSourceResultEntry[0].substr(1).toLowerCase() + "</h3>";
        else resultConstructor += '<h3 class="hidden-desktop">' + $.i18n(pageName + ".table_title." + aDataSourceResultEntry[0].toLowerCase()) + "</h3>";
        var iTitles = 0;
        var dataTitleId = dataTitle.replace(/ /g, "");
        resultConstructor += '<div class="dropdown-sort hidden">                                <p class="space-bottom">' + $.i18n("utils.labels.sort_by") + '</p>                                <ul class="inline">';
        aDataSourceResultEntry[1].forEach(function (oConsumptionType) {
            iTitles++;
            for (var property in oConsumptionType)
                if (1 === iTitles) resultConstructor += '<li><button class="btn" data-sort="' + dataTitleId + $.i18n(pageName + ".table." + property) + '">' + $.i18n(pageName + ".table." + property) + "</button></li>";
        });
        resultConstructor += "</ul></div>";
        resultConstructor += '<div class="responsive-table">        <table id="' + dataTitle + aDataSourceResultEntry[0] + '" class="hybrid-table table--sortable" data-sortable>';
        if (resultContainer.is("#dataResultContainer"))
            resultConstructor +=
                '<caption class="hidden-mobile">' + aDataSourceResultEntry[0].substr(0, 1) + aDataSourceResultEntry[0].substr(1).toLowerCase() + ' <span class="a11y-hidden">' + $.i18n("utils.labels.sortable") + "</span></caption>";
        else resultConstructor += '<caption class="hidden-mobile">' + $.i18n(pageName + ".table_title." + aDataSourceResultEntry[0].toLowerCase()) + ' <span class="a11y-hidden">' + $.i18n("utils.labels.sortable") + "</span></caption>";
        resultConstructor += "<thead>                <tr>";
        var iTitles = 0;
        aDataSourceResultEntry[1].forEach(function (oConsumptionType) {
            var jTitles = 0;
            iTitles++;
            for (var property in oConsumptionType) {
                jTitles++;
                if (1 === iTitles) {
                    resultConstructor += '<th scope="col"><button id="' + dataTitleId + $.i18n(pageName + ".table." + property) + '">' + $.i18n(pageName + ".table." + property) + '<span class="sort-arrow"></span></button></th>';
                    if (3 === jTitles) resultConstructor += '<th role="presentation" class="hidden-desktop" data-sortable="false"></th>';
                }
            }
        });
        resultConstructor += "</tr></thead>";
        aDataSourceResultEntry[1].forEach(function (oConsumptionType) {
            jTitles = 0;
            resultConstructor += "<tr>";
            for (var property in oConsumptionType) {
                jTitles++;
                if ("cost" === property) displayValue = (oConsumptionType[property] / 100).toFixed(2);
                else if ("direction" === property) displayValue = $.i18n(pageName + ".table." + oConsumptionType[property]);
                else if ("level" === property) displayValue = $.i18n(pageName + ".table." + oConsumptionType[property]);
                else displayValue = oConsumptionType[property];
                if (4 === jTitles)
                    resultConstructor +=
                        '<td class="hidden-desktop see-more">                        <button aria-label="' +
                        $.i18n(pageName + ".table.detail") +
                        '">' +
                        $.i18n("utils.labels.see_more") +
                        '</button>                    </td>                    <td>                            <h4 class="hybrid-table__column">' +
                        $.i18n(pageName + ".table." + property) +
                        "</h4>                            " +
                        displayValue +
                        "</td>";
                else resultConstructor += '<td>                            <h4 class="hybrid-table__column">' + $.i18n(pageName + ".table." + property) + "</h4>                            " + displayValue + "</td>";
            }
            resultConstructor += "</tr>";
        });
        resultConstructor += "</table>        </div>";
    });
    resultConstructor += "</div>";
    resultContainer.append(resultConstructor);
}
function paginateTable(tableClass, numberPerPage) {
    tableClass.each(function (ind, elem) {
        var rowsTotal = $(elem).find("tbody tr").length;
        var numPages = rowsTotal / numberPerPage;
        if (numPages > 1) {
            $(elem).after('<nav aria-label="' + $.i18n("utils.nav.pagination") + '" class="pagination"><ol class="pag unstyled"></ol></nav>');
            for (i = 0; i < numPages; i++) {
                var pageNum = i + 1;
                $(elem)
                    .next($(".pagination"))
                    .find(".pag")
                    .append('<li><button data-rel="' + i + '" aria-label="' + $.i18n("utils.nav.page") + " " + pageNum + '">' + pageNum + "</button></li>");
            }
            doPagination($(elem), numberPerPage);
        }
    });
}
function doPagination(currentTable, numberPerPage) {
    currentTable.find("tbody tr").hide();
    currentTable.find("tbody tr").slice(0, numberPerPage).show();
    currentTable.next($(".pagination")).find("button:first").addClass("active").attr("aria-current", "page");
    currentTable
        .next($(".pagination"))
        .find("button")
        .bind("click", function () {
            currentTable.next($(".pagination")).find("button").removeClass("active").removeAttr("aria-current");
            $(this).addClass("active");
            $(this).attr("aria-current", "page");
            var currPage = $(this).attr("data-rel");
            var startItem = currPage * numberPerPage;
            var endItem = startItem + numberPerPage;
            currentTable.find("tbody tr").hide().slice(startItem, endItem).fadeIn();
        });
}
function seeMore() {
    var seeMoreLabel = $.i18n("subscription.table.detail");
    if (window.location.href.indexOf("orders") > -1) seeMoreLabel = $.i18n("subscription.table.detail_order");
    else if (window.location.href.indexOf("billing") > -1) seeMoreLabel = $.i18n("billing.table.detail_invoice");
    if ($(".see-more", $("#page")).length) {
        if ($(window).width() < 1016 || (sessionStorage.getItem("ftSize") && sessionStorage.getItem("ftSize") >= 27)) {
            var seeMoreBtn = '<td class="see-more"><button aria-label="' + seeMoreLabel + '">' + $.i18n("utils.labels.see_more") + "</button></td>";
            $("p.see-more").replaceWith(seeMoreBtn);
        } else $("td.see-more").replaceWith('<p class="see-more hidden-desktop"></p>');
        $(".see-more", $("#page"))
            .find("button")
            .each(function (ind, ele) {
                $(ele)
                    .off("click")
                    .on("click", function () {
                        $(this).parent().nextAll().addClass("visible");
                        $(this).parent().addClass("next-visible");
                        $(this).parent().next().attr("tabindex", "-1");
                        $(this).parent().next().focus();
                    });
            });
    }
}
function updateFilterListToggler() {
    var filterListToggler = $("#filterListToggler"),
        tableFilter = $("#tableFilter"),
        selectedFilter = $("#selectedFilter");
    onResize();
    if ($(window).width() < 1016 && "" === filterListToggler.find(".current").html()) {
        filterListToggler.find(".current").html($(tableFilter.find("button").first()).html());
        dropdownToggle(filterListToggler, tableFilter);
        selectedFilter.text($.i18n("utils.labels.selected_filter", filterListToggler.find(".current span").text()));
        setTimeout(() => {
            selectedFilter.text("");
        }, 2e3);
    } else
        tableFilter.find("button").each(function (ind, elem) {
            $(elem)
                .unbind("click")
                .on("click", function () {
                    if (!$(elem).hasClass("active")) {
                        tableFilter.find("button").attr("aria-pressed", "false").removeClass("active");
                        $(elem).addClass("active").attr("aria-pressed", "true");
                        $(".result-container", $("#page")).hide();
                        $('.result-container[data-filter="' + $(elem).attr("id") + '"]', $("#page")).fadeIn();
                    } else {
                        $(elem).removeClass("active");
                        $(".result-container", $("#page")).fadeIn();
                    }
                    if ($(window).width() < 1016) {
                        filterListToggler.find(".current").html($(elem).html());
                        tableFilter.fadeOut();
                        filterListToggler.removeClass("active").attr("aria-expanded", "false");
                    } else {
                        tableFilter.fadeIn();
                        filterListToggler.find(".current").html($(elem).html());
                    }
                    selectedFilter.text($.i18n("utils.labels.selected_filter", filterListToggler.find(".current span").text()));
                    setTimeout(() => {
                        selectedFilter.text("");
                    }, 2e3);
                });
        });
}
function getCityAPI(zipcode, town, errorContainer, submitCurrentForm) {
    return new Promise(function (resolve, reject) {
        getCity(zipcode, town)
            .done(function (result) {
                resolve(result);
            })
            .fail(function (result) {
                commonErrors(result, errorContainer, submitCurrentForm);
                reject("get city failed");
            });
    });
}
function getHouseNbAPI(zipcode, town, street, houseNb, errorContainer, submitCurrentForm) {
    return new Promise(function (resolve, reject) {
        getHouseNb(zipcode, town, street, houseNb)
            .done(function (result) {
                resolve(result);
            })
            .fail(function (result) {
                commonErrors(result, errorContainer, submitCurrentForm);
                reject("get House Nb failed");
            });
    });
}
function getStreetAPI(zipcode, town, street, errorContainer, submitCurrentForm) {
    return new Promise(function (resolve, reject) {
        getStreet(zipcode, town, street)
            .done(function (result) {
                resolve(result);
            })
            .fail(function (result) {
                commonErrors(result, errorContainer, submitCurrentForm);
                reject("get street failed");
            });
    });
}
function getZipcodeAPI(zipcode, errorContainer, submitCurrentForm) {
    return new Promise(function (resolve, reject) {
        getZipcode(zipcode)
            .done(function (result) {
                resolve(result);
            })
            .fail(function (result) {
                commonErrors(result, errorContainer, submitCurrentForm);
                reject("get zip code failed");
            });
    });
}
function getAccSum(billingAccountID) {
    var accountSummary = $("#accountSummary");
    if (accountSummary.length) {
        if ("mobile" === sessionStorage.getItem("domain")) getBalancePostpaidAPI(billingAccountID);
        else displayFixBalance(billingAccountID);
        getAccountSummaryAPI(billingAccountID);
    }
}
function displayBillingList() {
    var billingListItem = (dashboardBillingListItem = billingStatusDisplay = htmlNumbers = ""),
        billingList = $("#billingList"),
        billingSummary = $("#billingSummary"),
        billingListToggler = $("#billingListToggler"),
        dashboardBilling = $("#dashboardBilling"),
        globalError = $("#globalError"),
        tagBillingContainer = "div";
    domainIcon = "";
    $(document).ready(function () {
        if (sessionStorage.getItem("hasBilling") && (billingSummary.length || billingList.length))
            getBillingList()
                .done(function (result) {
                    if (result.length > 0) {
                        var labelPayOnline = $.i18n("billing.balance.pay"),
                            labelCurrentBalance = $.i18n("billing.billing_account");
                        result.sort(orderByDisplayOrder);
                        if (result.length > 1) {
                            dashboardBillingListItem += '<ul class="grid-2-small-1 has-gutter-l">';
                            tagBillingContainer = "li";
                        } else dashboardBillingListItem += '<div class="grid-2-small-1 has-gutter-l">';
                        for (var i = 0; i < result.length; i++) {
                            var billingId = result[i].id,
                                balance = result[i].balance,
                                balanceDisplay = 0 !== balance ? (balance / 100).toFixed(2) : balance,
                                domain = result[i].domain.toLowerCase(),
                                isDebtor = result[i].debtor,
                                overdueAmount = result[i].overdueAmount,
                                billStatus = result[i].status,
                                aNumbers = result[i].numbers,
                                favor = "";
                            if (false === isDebtor) {
                                var alertStyle = "",
                                    alertLabel = "",
                                    dashboardAlert = "",
                                    pastBA = "";
                                if (0 !== balance) favor = $.i18n("billing.balance.in_your_favor_" + BRAND.name);
                                if ("BILLABLE_EMPTY" === billStatus || "UNBILLABLE" === billStatus || "CLOSED" === billStatus) pastBA = "highlight--past";
                            } else {
                                var alertStyle = " ",
                                    dashboardAlert = "",
                                    alertLabel = $.i18n("billing.balance.in_our_favor");
                                if (overdueAmount > 0) {
                                    (alertStyle = " alert"), (alertLabel = $.i18n("billing.balance.overdue"));
                                    dashboardAlert = $.i18n("billing.balance.overdue");
                                }
                                if ("BILLABLE_EMPTY" === billStatus || "UNBILLABLE" === billStatus || "CLOSED" === billStatus) pastBA = "highlight--past";
                                if (0 !== balance) favor = $.i18n("billing.balance.in_our_favor");
                            }
                            switch (billStatus) {
                                case "CLOSED":
                                case "UNBILLABLE":
                                    billingStatusDisplay = '<span class="dot dot--alert"></span>' + $.i18n("billing.status." + billStatus);
                                    break;
                                case "INITIAL":
                                    billingStatusDisplay = '<span class="dot dot--warning"></span>' + $.i18n("billing.status." + billStatus);
                                    break;
                                default:
                                    billingStatusDisplay = '<span class="dot dot--positive"></span>' + $.i18n("billing.status." + billStatus);
                                    break;
                            }
                            if ("salt" === BRAND.name)
                                domainIcon = '<svg aria-hidden="true" focusable="false" class="' + domain + ' space-right">                            <use xlink:href="#' + domain + '"></use>                        </svg>';
                            billingListItem +=
                                '<li>                            <button id="' +
                                billingId +
                                '" class="btn ' +
                                pastBA +
                                '" data-status="' +
                                billStatus +
                                '" data-debtor="' +
                                isDebtor +
                                '" data-domain="' +
                                domain +
                                '" data-balance="' +
                                balance +
                                '">                                <span class="a11y-hidden">' +
                                alertLabel +
                                '</span>                                <span class="align-left">                                <span class="flex flex--left">' +
                                domainIcon +
                                "                                    <span>" +
                                labelCurrentBalance +
                                '                                        <strong class="block">' +
                                billingId +
                                '</strong>                                        <span class="block">' +
                                billingStatusDisplay +
                                '</span>                                    </span>                                </span>                                    <span class="price ' +
                                alertStyle +
                                '"><span>CHF</span> ' +
                                balanceDisplay +
                                "</strong>                                </span>                            </button>                        </li>";
                            if (aNumbers.length)
                                if (aNumbers.length > 1) {
                                    htmlNumbers = '<ul class="unstyled">';
                                    $(aNumbers).each(function (ind, ele) {
                                        htmlNumbers += "<li>" + prettifyPhoneNumber(phoneExtractorForDisplay(ele)) + "</li>";
                                    });
                                    htmlNumbers += "</ul>";
                                } else if (null !== aNumbers[0]) htmlNumbers = "<p>" + prettifyPhoneNumber(phoneExtractorForDisplay(aNumbers[0])) + "</p>";
                                else htmlNumbers = "<p>" + billingId + "</p>";
                            else htmlNumbers = "";
                            dashboardBillingListItem += "<" + tagBillingContainer + ' class="flex flex--start highlight highlight--secondary highlight--link ' + pastBA + " highlight--mobile" + '">';
                            dashboardBillingListItem +=
                                '<div class="bold">                            <div class="flex flex--wrap">                                <svg aria-hidden="true" focusable="false" class="' +
                                domain +
                                ' space-right">                                    <use xlink:href="#' +
                                domain +
                                '"></use>                                </svg>                                <div id="billing' +
                                billingId +
                                '">                                <span class="block space-bottom space-bottom--thin">                                    ' +
                                labelCurrentBalance +
                                "                                </span>";
                            dashboardBillingListItem += htmlNumbers + "</div></div></div>";
                            dashboardBillingListItem +=
                                '<a href="billing.html?acc=' +
                                billingId +
                                '" aria-describedby="billing' +
                                billingId +
                                '" class="highlight__price link-full-block align-right">                            <span class="block">' +
                                billingStatusDisplay +
                                '</span>                            <span class="block">' +
                                dashboardAlert +
                                '</span>                            <span class="block">' +
                                favor +
                                '</span>                            <strong class="price ' +
                                alertStyle +
                                '"><span>CHF</span> ' +
                                balanceDisplay +
                                "</strong>";
                            dashboardBillingListItem += "</a>";
                            if (true === isDebtor && "CLOSED" !== billStatus)
                                dashboardBillingListItem +=
                                    '<div class="highlight__action">                                <a href="payment.html?acc=' +
                                    billingId +
                                    "&domain=" +
                                    domain +
                                    '"                                 class="btn btn--secondary btn--right space-top space-top--thin"                                aria-label="' +
                                    labelPayOnline +
                                    " CHF " +
                                    balanceDisplay +
                                    '">                                        ' +
                                    labelPayOnline +
                                    "                                    </a></div>";
                            dashboardBillingListItem += "</" + tagBillingContainer + ">";
                        }
                        if (result.length > 1) dashboardBillingListItem += "</ul>";
                        else dashboardBillingListItem += "</div>";
                        billingList.html(billingListItem).parent().removeClass("hidden");
                        billingSummary.html(dashboardBillingListItem);
                        dashboardBilling.fadeIn().removeClass("hidden").i18n();
                        dashboardBilling
                            .find(".highlight__price")
                            .off("click")
                            .on("click", function (ev) {
                                ev.preventDefault();
                                navigation($(this).attr("href"));
                            });
                    }
                    if (billingList.length) {
                        updateBillingListToggler();
                        var urlParams = new URLSearchParams(location.search);
                        if (urlParams.get("acc") && $("#" + urlParams.get("acc")).length)
                            $("#" + urlParams.get("acc"))
                                .trigger("click")
                                .addClass("active");
                        else if (sessionStorage.getItem("bid") && $("#" + sessionStorage.getItem("bid")).length)
                            $("#" + sessionStorage.getItem("bid"))
                                .trigger("click")
                                .addClass("active");
                        else billingList.find("button").first().trigger("click").addClass("active");
                    }
                    if ($(window).width() < 1016 || billingList.children("li").length > 4) {
                        billingList.find(".price:not(.alert)").hide();
                        billingList.addClass("dropdown__list item-list").removeClass("grid-4-large-3 has-gutter-l dropdown__visible");
                        billingListToggler.removeClass("hidden-desktop");
                        dropdownToggle(billingListToggler, billingList, true);
                    } else {
                        billingList.find(".price:not(.alert)").show();
                        billingListToggler.addClass("hidden-desktop");
                        billingList.removeClass("dropdown__list item-list").addClass("grid-4-large-3 has-gutter-l dropdown__visible");
                    }
                    $("#billingSummary").i18n();
                    if ("false" === sessionStorage.getItem("hasSub")) {
                        $("#wrapper").removeClass("hidden").focus();
                        $("#loadingMsg").addClass("hidden");
                    }
                })
                .fail(function (result) {
                    if (result) {
                        $("#wrapper").removeClass("hidden").focus();
                        $("#loadingMsg").addClass("hidden");
                        if (billingList.length) displayMessageAfterSubmit(globalError, null, "", $.i18n("utils.technical_error"));
                    }
                });
    });
}
function getAccountInfoAPI(globalError, accountID) {
    var urlParams = new URLSearchParams(location.search);
    return new Promise(function (resolve, reject) {
        if (sessionStorage.getItem("domain"))
            if ("fix" === sessionStorage.getItem("domain"))
                getAccountFix(accountID)
                    .done(function (resultFix) {
                        resolve(resultFix);
                    })
                    .fail(function () {
                        displayMessageAfterSubmit(globalError, null, "", $.i18n("utils.technical_error"));
                    });
            else if (urlParams.get("type") && "prepay" === urlParams.get("type"))
                getPrivilege(accountID)
                    .done(function (resultMobile) {
                        resolve(resultMobile);
                    })
                    .fail(function () {
                        displayMessageAfterSubmit(globalError, null, "", $.i18n("utils.technical_error"));
                    });
            else
                getAccountMobile(accountID)
                    .done(function (resultMobile) {
                        resolve(resultMobile);
                    })
                    .fail(function () {
                        displayMessageAfterSubmit(globalError, null, "", $.i18n("utils.technical_error"));
                    });
    });
}
function getAccountSummaryAPI(billingAccountID) {
    var summaryResultConstructor = "",
        accountSummary = $("#accountSummary"),
        billingOverviewError = $("#billingOverviewError");
    getAccountSummary(billingAccountID)
        .done(function (result) {
            if (null !== result) {
                var summaryResult = result,
                    noResult = '<p class="space-bottom">' + $.i18n("utils.table.no_result") + "</p>",
                    aSummaryResult = [];
                oSummaryObject = {};
                if (void 0 !== summaryResult) {
                    summaryResultConstructor += '<div class="animation animated animated--fade-in-fast">';
                    summaryResultConstructor += '<h3 class="hidden-desktop">' + $.i18n("billing.table_title.account_summary") + "</h3>";
                    summaryResultConstructor += '<div class="responsive-table">                <table id="summaryEvent" class="hybrid-table hybrid-table--billing table--sortable">';
                    summaryResultConstructor += '<caption class="hidden-mobile">' + $.i18n("billing.table_title.account_summary") + "</caption>";
                    summaryResultConstructor +=
                        '<thead>                        <tr>                        <th scope="col">' +
                        $.i18n("billing.table_title.event") +
                        '</th>                        <th scope="col">' +
                        $.i18n("billing.table_title.invoice_type") +
                        '</th>                        <th scope="col">' +
                        $.i18n("billing.table_title.date") +
                        '</th>                        <th scope="col">' +
                        $.i18n("billing.table_title.debit") +
                        '</th>                        <th scope="col">' +
                        $.i18n("billing.table_title.credit") +
                        '</th>                        <th role="presentation" class="hidden-desktop"></th>                        <th scope="col">' +
                        $.i18n("billing.table_title.totalamount") +
                        '</th>                        <th scope="col">' +
                        $.i18n("billing.table_title.pdf") +
                        "</th>";
                    summaryResultConstructor += "</tr></thead>";
                    summaryResult.forEach(function (oDataSourceResultEntry) {
                        oSummaryObject = {
                            event: getEventType(oDataSourceResultEntry, billingAccountID),
                            invoice_type: void 0 !== oDataSourceResultEntry["invoiceType"] ? $.i18n("billing.table.label_invoice_type_" + oDataSourceResultEntry["invoiceType"]) : "-",
                            date: oDataSourceResultEntry["date"],
                            debit: "OUTCOME" === oDataSourceResultEntry["entryType"] ? (oDataSourceResultEntry["amount"] / 100).toFixed(2) : "-",
                            credit: "INCOME" === oDataSourceResultEntry["entryType"] ? (oDataSourceResultEntry["amount"] / 100).toFixed(2) : "-",
                            totalamount: (oDataSourceResultEntry["totalAmount"] / 100).toFixed(2),
                            pdf: "-",
                        };
                        if ("INVOICE" === oDataSourceResultEntry["eventType"] && void 0 !== oDataSourceResultEntry["hasArchive"] && true === oDataSourceResultEntry["hasArchive"])
                            oSummaryObject["pdf"] =
                                '<a href="#" class="pdf-link" role="link" tabindex="0" id="' +
                                billingAccountID +
                                "-" +
                                oDataSourceResultEntry["invoiceId"] +
                                '" aria-label="' +
                                $.i18n("utils.labels.download_pdf_bill", oDataSourceResultEntry["invoiceId"]) +
                                '" title="' +
                                $.i18n("utils.labels.download_pdf_bill", oDataSourceResultEntry["invoiceId"]) +
                                '">                            <svg aria-hidden="true" focusable="false" class="pdf">                                <use xlink:href="#pdf"></use>                            </svg>                            <span class="space-left">' +
                                $.i18n("utils.labels.download_pdf") +
                                "</span>                        </a>";
                        aSummaryResult.push(oSummaryObject);
                    });
                    aSummaryResult.forEach(function (oAccountEvent) {
                        var jTitles = 0;
                        summaryResultConstructor += "<tr>";
                        for (var property in oAccountEvent) {
                            jTitles++;
                            if (5 === jTitles)
                                summaryResultConstructor +=
                                    '<td class="see-more">                                    <button aria-label="' +
                                    $.i18n("billing.table.detail") +
                                    '">' +
                                    $.i18n("utils.labels.see_more") +
                                    '</button>                                </td>                                <td>                                    <h4 class="hybrid-table__column">' +
                                    $.i18n("billing.table_title." + property) +
                                    "</h4>                                    " +
                                    oAccountEvent[property] +
                                    "</td>";
                            else
                                summaryResultConstructor +=
                                    '<td>                                    <h4 class="hybrid-table__column">' + $.i18n("billing.table_title." + property) + "</h4>                                    " + oAccountEvent[property] + "</td>";
                        }
                        summaryResultConstructor += "</tr>";
                    });
                    summaryResultConstructor += "</table></div></div>";
                    accountSummary.append(summaryResultConstructor);
                    seeMore();
                } else accountSummary.append(noResult);
                if ($(".pdf-link").length)
                    $(".pdf-link").each(function (ind, ele) {
                        $(ele).on("click", function (e) {
                            e.preventDefault();
                            var linkParams = $(ele).attr("id").split("-");
                            getInvoiceDocument(linkParams[0], linkParams[1]).done(function (resultPDF) {
                                downloadDocument(resultPDF, linkParams[1]);
                            });
                        });
                    });
            }
            paginateTable($("#billingOverview .hybrid-table"), 10);
        })
        .fail(function (result) {
            if (result) displayMessageAfterSubmit(billingOverviewError, null, "", $.i18n("utils.error.account_summary_" + BRAND.name));
        });
}
function getEventType(eventType, billingAccountId) {
    switch (eventType["eventType"]) {
        case "INVOICE":
            return $.i18n("billing.table.label_invoice") + " " + eventType["invoiceId"];
        case "PAYMENT":
            return $.i18n("billing.table.label_payment") + " " + eventType["paymentId"];
        case "IMMEDIATE_ADJUSTMENT":
            return $.i18n("billing.table.label_immediate_adjustment");
        case "BALANCE_CLEARING_REFUND":
            return $.i18n("billing.table.label_balance_clearing_refund");
        case "CREDIT_LOST":
            return $.i18n("billing.table.label_credit_lost");
        case "PAYMENT_BACKOUT":
            return $.i18n("billing.table.label_payment_backout");
        case "PAYMENT_PLAN_CANCEL":
            return $.i18n("billing.table.label_payment_plan_cancel");
        case "PAYMENT_PLAN_CREATE":
            return $.i18n("billing.table.label_payment_plan_create");
        case "BALANCE_TRANSFER":
            if (billingAccountId === eventType["destinationBillingAccountId"]) return $.i18n("billing.table.label_balance_transfert");
            else return $.i18n("billing.table.label_balance_transfert") + " " + $.i18n("billing.table.label_to_account") + " " + eventType["destinationBillingAccountId"];
        case "PAYMENT_REALLOCATION":
            return (
                $.i18n("billing.table.label_payment_reallocation") +
                " " +
                $.i18n("billing.table.label_of_payment") +
                " " +
                eventType["relatedPaymentId"] +
                " " +
                $.i18n("billing.table.label_to_account") +
                " " +
                eventType["destinationBillingAccountId"]
            );
        case "PREPAYMENT_RELEASE":
            return $.i18n("billing.table.label_prepayment_release") + " " + eventType["prePaymentId"];
        default:
            break;
    }
}
function getPaymentInfoAPI(billingAccountID, domain) {
    var paymentForm = $("#paymentForm"),
        balanceAmount = $("#balanceAmount"),
        balancePayment = $("#balancePayment"),
        alertOverdue = $("#alertOverdue"),
        overAmount = $("#overAmount"),
        amountPayment = $("#amountPayment"),
        favor = $("#favor"),
        globalError = $("#globalError");
    if ("fix" === domain) var cb = getFixBalance(billingAccountID);
    else var cb = getBalancePostPaid(billingAccountID);
    cb.done(function (result) {
        var labelBalanceNull = $.i18n("payment.current_balance_" + BRAND.name),
            labelInYourFavor = $.i18n("billing.balance.in_your_favor_" + BRAND.name),
            labelInOurFavor = $.i18n("billing.balance.in_our_favor");
        balanceAmount.text((result.totalAmount / 100).toFixed(2));
        if (0 === result.totalAmount) favor.text(labelBalanceNull);
        else if (false === result.debtor && 0 !== result.totalAmount) favor.text(labelInYourFavor);
        else if (true === result.debtor && 0 !== result.totalAmount) favor.text(labelInOurFavor);
        var min = result.minPayableAmount,
            max = result.maxPayableAmount,
            fieldValue = result.totalAmount > 0 ? (result.totalAmount / 100).toFixed(2) : (min / 100).toFixed(2);
        (minDisplay = (min / 100).toFixed(2)), (maxDisplay = (max / 100).toFixed(2)), (overdueAmount = (result.overdueAmount / 100).toFixed(2));
        if (true === result.isPayable) balancePayment.show();
        else balancePayment.hide();
        if ("0.00" !== overdueAmount) {
            overAmount.text(overdueAmount);
            alertOverdue.fadeIn();
        } else alertOverdue.fadeOut();
        if (min > 0)
            if (true === result.debtor) amountPayment.val(fieldValue);
            else amountPayment.val(0);
        else amountPayment.val(1);
        paymentForm.fadeIn();
        $.validator.addMethod(
            "amountMax",
            function (value, element) {
                value = convertAmount(value);
                return value <= max;
            },
            $.i18n("utils.error.amount_max_error") + " " + maxDisplay
        );
        $.validator.addMethod(
            "amountMin",
            function (value, element) {
                value = convertAmount(value);
                return value >= min;
            },
            $.i18n("utils.error.amount_min_error") + " " + minDisplay
        );
    }).fail(function (result) {
        if (result) displayMessageAfterSubmit(globalError, null, "", $.i18n("utils.technical_error"));
    });
}
function getQrCodeAPI(billingAccountID, domain) {
    return getQrCode(billingAccountID, domain)
        .then((response) => {
            if (!response) throw new Error($.i18n("utils.technical_error"));
            return response;
        })
        .catch(() => {
            displayMessageAfterSubmit(billingPayError, null, "", $.i18n("utils.technical_error"));
        });
}
function getSimOrderStatusAPI(subscriptionId) {
    return getSimCardOrderStatus(subscriptionId)
        .then((response) => response)
        .catch((error) => displayMessageAfterSubmit(error, null, "", $.i18n("utils.technical_error")));
}
function getStoredPaymentMethodsAPI(globalError, id, isEditMessage, currentForm) {
    let cb;
    return new Promise(function (resolve, reject) {
        if (sessionStorage.getItem("domain")) {
            if ("fix" === sessionStorage.getItem("domain")) cb = getFixStoredPaymentMethods(id);
            else cb = getMobileStoredPaymentMethods(id);
            cb.done(function (resultFix) {
                resolve(resultFix);
            }).fail(function () {
                if (isEditMessage) displayMessageAfterEdit(globalError, currentForm, null, "inline-edit", $.i18n("utils.technical_error"), true);
                else displayMessageAfterSubmit(globalError, null, "", $.i18n("utils.technical_error"));
            });
        }
    });
}
function getPayerInf(billingAccountID) {
    var billingPay = $("#billingPay"),
        bankInfo = $("#bankInfo"),
        favorOf = $("#favorOf"),
        referencePayment = $("#referencePayment"),
        bvrReference = $("#bvrReference"),
        copyRef = $("#copyRef"),
        copyIban = $("#copyIban"),
        ref = "bvrReference",
        ibanRef = "ibanRef",
        paymentCenterLink = $("#paymentCenterLink"),
        payerIdentity = $("#payerIdentity"),
        payerAddress = $("#payerAddress"),
        payerCountry = $("#payerCountry"),
        payerEmail = $("#payerEmail"),
        ownerIdentity = $("#ownerIdentity"),
        ownerAddress = $("#ownerAddress"),
        ownerCountry = $("#ownerCountry"),
        ownerEmail = $("#ownerEmail"),
        currentPaymentMethod = $("#currentPaymentMethod"),
        currentDeliveryMethod = $("#currentDeliveryMethod"),
        changeInvoicingMethod = $("#changeInvoicingMethod"),
        billingPayError = $("#billingPayError"),
        cb = void 0;
    if (billingPay.length) {
        if (sessionStorage.getItem("domain")) {
            if ("fix" === sessionStorage.getItem("domain")) cb = getAccountFix(billingAccountID);
            else cb = getAccountMobile(billingAccountID);
            cb.done(function (result) {
                paymentCenterLink.attr("href", "payment.html?acc=" + billingAccountID + "&domain=" + sessionStorage.getItem("domain"));
                displayBVR(result, favorOf, referencePayment, bvrReference, bankInfo);
                if (true === result.hasPayerPrivilege)
                    if (result.owner.id === result.payer.id) {
                        $("#ownerTitle").text($.i18n("profile.owner_payer"));
                        $("#payerContainer").hide();
                        $("#payerOnly").text($.i18n("billing.invoicing.is_payer_" + BRAND.name));
                    } else {
                        $("#ownerTitle").text($.i18n("profile.owner"));
                        $("#payerOnly").text($.i18n("billing.invoicing.is_owner_" + BRAND.name));
                    }
                else {
                    $("#ownerTitle").text($.i18n("profile.owner"));
                    $("#payerContainer").show();
                    $("#payerOnly").text($.i18n("billing.invoicing.is_owner_" + BRAND.name));
                }
                displayOwnerInfo(result, ownerIdentity, ownerAddress, ownerCountry, ownerEmail);
                displayPayerInfo(result, payerIdentity, payerAddress, payerCountry, payerEmail);
                currentPaymentMethod.text($.i18n("billing.payment_method." + result.paymentMethod));
                currentDeliveryMethod.text($.i18n("billing.delivery_method." + result.invoiceDeliveryMethod));
                copyContent(copyRef, ref);
                copyContent(copyIban, ibanRef);
                sessionStorage.setItem("pmChanged", "false");
                editInvoicingMethods(billingAccountID, result);
                changeInvoicingMethod.show();
            }).fail(function (result) {
                if (result) displayMessageAfterSubmit(billingPayError, null, "", $.i18n("utils.technical_error"));
            });
            displayPaymentQrCode(billingAccountID, sessionStorage.getItem("domain").toUpperCase(), document.getElementById("paymentQrCode"));
        }
        managePaymentMeans(billingAccountID);
    }
}
function postAutomaticPurchaseSubscribeAPI(errorContainer, validContainer, currentForm, submitCurrentForm, billingAccountID, payerID, payload) {
    return new Promise(function (resolve, reject) {
        postMobileSubscribeAutomaticPurchase(billingAccountID, payerID, payload)
            .done(function (result) {
                if (result) {
                    displayMessageAfterEdit(validContainer, currentForm, submitCurrentForm, "big-edit space-top", $.i18n("utils.valid.update"), false);
                    getStoredPaymentMethodsAPI(errorContainer, payerID).then(function (resultSPM) {
                        editPaymentMethod(resultSPM, $("#spmChoice"), true);
                    });
                    resolve(result);
                }
            })
            .fail(function (errorResult) {
                if (void 0 !== errorResult.responseJSON && void 0 !== errorResult.responseJSON.errorCode)
                    if ("ACCESS_DENIED" === errorResult.responseJSON.errorCode) displayMessageAfterEdit(errorContainer, currentForm, submitCurrentForm, "big-edit space-top", $.i18n("utils.error.payer_only"), true);
                    else displayMessageAfterEdit(errorContainer, currentForm, submitCurrentForm, "big-edit space-top", $.i18n("utils.technical_error"), true);
                else displayMessageAfterEdit(errorContainer, currentForm, submitCurrentForm, "big-edit space-top", $.i18n("utils.technical_error"), true);
                reject();
            });
    });
}
function postAutomaticPurchaseUpdateAPI(errorContainer, validContainer, currentForm, submitCurrentForm, billingAccountID, payerID, payload) {
    return new Promise(function (resolve, reject) {
        postMobileSubscribeUpdatePurchase(billingAccountID, payerID, payload)
            .done(function (result) {
                if (result) {
                    displayMessageAfterEdit(validContainer, currentForm, submitCurrentForm, "big-edit space-top", $.i18n("utils.valid.update"), false);
                    getStoredPaymentMethodsAPI(errorContainer, payerID).then(function (resultSPM) {
                        editPaymentMethod(resultSPM, $("#spmChoice"), true);
                    });
                    resolve(result);
                }
            })
            .fail(function () {
                displayMessageAfterEdit(errorContainer, currentForm, submitCurrentForm, "big-edit space-top", $.i18n("utils.technical_error"), true);
                reject();
            });
    });
}
function postEndPaymentDatatransAPI(errorContainer, submitCurrentForm, accountID, payload) {
    return new Promise(function (resolve, reject) {
        var urlParams = new URLSearchParams(location.search),
            cb = void 0;
        if (sessionStorage.getItem("domain")) {
            if ("fix" === sessionStorage.getItem("domain")) cb = postEndFixPaymentDatatrans(accountID, payload);
            else if (urlParams.get("type") && "prepay" === urlParams.get("type")) cb = postEndRefillDatatrans(accountID, payload);
            else cb = postEndMobilePaymentDatatrans(accountID, payload);
            cb.done(function (result) {
                $("#wrapper").removeClass("hidden").focus();
                $("#loadingMsg").addClass("hidden");
                displayResult(result);
            }).fail(function (result) {
                $("#wrapper").removeClass("hidden").focus();
                $("#loadingMsg").addClass("hidden");
                if (result && result.responseJSON) displayMessageAfterSubmit(errorContainer, submitCurrentForm, "", $.i18n("utils.technical_error_" + BRAND.name));
            });
        }
    });
}
function displayResult(result) {
    var paymentResume = $("#paymentResume"),
        paymentReceipt = $("#paymentReceipt"),
        messageResume = $("#messageResume"),
        balancePaid = $("#balancePaid"),
        bid = $("#bid"),
        transNum = $("#transNum"),
        idTrans = $("#idTrans"),
        transNumFail = $("#transNumFail"),
        dateTime = $("#dateTime"),
        recPay = $("#recPay"),
        msisdn = $("#msisdn"),
        paymentMean = $("#paymentMean");
    switch (result.status) {
        case "SUCCESS":
        case "SUCCESS_NOT_SETTLED":
            messageResume.html(
                '<svg aria-hidden="true" focusable="false" class="validated"><use xlink:href="#validated"></use></svg><br/>' +
                $.i18n("utils.valid.success_message_customerbank_" + BRAND.name) +
                "<br/>" +
                $.i18n("utils.valid.success_message_" + BRAND.name) +
                "<br/>" +
                $.i18n("utils.valid.success_message_processing")
            );
            idTrans.hide();
            paymentResume.fadeIn();
            balancePaid.text((result.amount / 100).toFixed(2));
            if (void 0 !== result.billingAccountId) {
                bid.text(result.billingAccountId);
                $("#msisdnPrepay").hide();
            } else {
                $("#bidPostpay").hide();
                msisdn.text(prettifyPhoneNumber(result.msisdn));
            }
            transNum.text(result.paymentId);
            dateTime.text(result.paymentDatetime);
            if (void 0 !== result.fgwPaymentId) recPay.text(result.fgwPaymentId);
            else recPay.text(result.reservationId);
            paymentMean.text($.i18n("payment.receipt." + result.paymentCode.toLowerCase()));
            paymentReceipt.fadeIn();
            break;
        case "CANCELLED":
            messageResume.html(
                '<svg aria-hidden="true" focusable="false" class="ic-error"><use xlink:href="#ic-error"></use></svg><br/>' +
                $.i18n("utils.error.cancelled_message_customerbank_" + BRAND.name) +
                "<br/>" +
                $.i18n("utils.error.failure_message_" + BRAND.name)
            );
            transNumFail.text(result.paymentId);
            paymentResume.find(".highlight").addClass("highlight--error");
            paymentResume.fadeIn();
            break;
        case "NOT_AUTHORIZED":
            messageResume.html($.i18n("utils.error.notauthorized_message_customerbank_" + BRAND.name) + "<br/>" + $.i18n("utils.error.failure_message_" + BRAND.name));
            transNumFail.text(result.paymentId);
            paymentResume.fadeIn();
            break;
        case "ERROR":
        case "TRANSACTION_NOT_FOUND":
            messageResume.html($.i18n("utils.error.summary_error_" + BRAND.name));
            transNumFail.text(result.paymentId);
            paymentResume.fadeIn();
            break;
        default:
            break;
    }
}
function postInvoicingMethodsAPI(billingAccountID, payerID) {
    var invoicingVisibleArea = $("#invoicingVisibleArea"),
        changeInvoicingMethodForm = $("#changeInvoicingMethodForm"),
        changeInvoicingMethod = $("#changeInvoicingMethod"),
        newInvoicingMethodForm = $("#newInvoicingMethodForm"),
        invoicingMethodEditError = $("#invoicingMethodEditError"),
        invoicingMethodEditValid = $("#invoicingMethodEditValid"),
        submitNewInvoicingMethod = $("#submitNewInvoicingMethod");
    if (submitNewInvoicingMethod.length)
        newInvoicingMethodForm
            .off("submit")
            .on("submit", function (event) {
                event.preventDefault();
                if (validateForm(newInvoicingMethodForm, submitNewInvoicingMethod)) {
                    var payload = {},
                        newPaymentMethod = $('#newInvoicingMethodForm input[name="newPaymentMethod"]:checked'),
                        newDeliveryMethod = $('#newInvoicingMethodForm input[name="newDeliveryMethod"]:checked');
                    if ("mobile" === sessionStorage.getItem("domain"))
                        if ("DIRECT_DEBIT_CREDIT_CARD" === newPaymentMethod.val()) {
                            payload = { spmId: $('input[name="storedPaymentMethod"]:checked').val(), language: setDefaultLang() };
                            var hasSPMUsed = false;
                            for (let iSPM = 0; iSPM < $('input[name="storedPaymentMethod"]').length; iSPM++) {
                                const currentSPM = $('input[name="storedPaymentMethod"]').eq(iSPM);
                                if ("true" === currentSPM.attr("data-aps")) hasSPMUsed = true;
                            }
                            if (true === hasSPMUsed) postAutomaticPurchaseUpdateAPI(invoicingMethodEditError, invoicingMethodEditValid, newInvoicingMethodForm, submitNewInvoicingMethod, billingAccountID, payerID, JSON.stringify(payload));
                            else {
                                payload.invoiceDeliveryMethod = newDeliveryMethod.val();
                                postAutomaticPurchaseSubscribeAPI(invoicingMethodEditError, invoicingMethodEditValid, newInvoicingMethodForm, submitNewInvoicingMethod, billingAccountID, payerID, JSON.stringify(payload));
                            }
                        } else {
                            payload = { paymentMethod: newPaymentMethod.val(), invoiceDeliveryMethod: newDeliveryMethod.val() };
                            postMobileInvoicingMethods(billingAccountID, JSON.stringify(payload))
                                .done(function () {
                                    newInvoicingMethodForm.hide();
                                    getPayerInf(billingAccountID);
                                    displayMessageAfterEdit(invoicingMethodEditValid, newInvoicingMethodForm, submitNewInvoicingMethod, "big-edit space-top", $.i18n("utils.valid.update"), false);
                                })
                                .fail(function () {
                                    newInvoicingMethodForm.hide();
                                    displayMessageAfterEdit(invoicingMethodEditError, newInvoicingMethodForm, submitNewInvoicingMethod, "big-edit space-top", $.i18n("utils.technical_error"), true);
                                });
                        }
                    else {
                        payload.invoiceDeliveryMethod = newDeliveryMethod.val();
                        postFixInvoicingMethod(billingAccountID, JSON.stringify(payload))
                            .done(function () {
                                newInvoicingMethodForm.hide();
                                getPayerInf(billingAccountID);
                                displayMessageAfterEdit(invoicingMethodEditValid, newInvoicingMethodForm, submitNewInvoicingMethod, "big-edit space-top", $.i18n("utils.valid.update"), false);
                            })
                            .fail(function () {
                                newInvoicingMethodForm.hide();
                                displayMessageAfterEdit(invoicingMethodEditError, newInvoicingMethodForm, submitNewInvoicingMethod, "big-edit space-top", $.i18n("utils.technical_error"), true);
                            });
                    }
                }
            })
            .on("reset", function (event) {
                event.preventDefault();
                newInvoicingMethodForm.show();
                changeInvoicingMethodForm.hide();
                invoicingVisibleArea.show();
                changeInvoicingMethod.attr("aria-expanded", false).focus();
            });
}
function postStartPaymentDatatransAPI(errorContainer, submitCurrentForm, accountID, customerID) {
    return new Promise(function (resolve, reject) {
        var urlParams = new URLSearchParams(location.search),
            isTwint = false,
            paymentForm = $("#paymentForm"),
            cb = void 0,
            payload = {
                language: setDefaultLang(),
                amount: convertAmount($("#amountPayment").val()),
                uiLocation: {
                    path: "/payment.html",
                    queryParams: [
                        { name: "acc", value: urlParams.get("acc") },
                        { name: "domain", value: urlParams.get("domain") },
                    ],
                },
            };
        if ("" !== $('input[name="storedPaymentMethod"]:checked').val()) {
            payload.spmId = $('input[name="storedPaymentMethod"]:checked').val();
            if (null !== $('input[name="storedPaymentMethod"]:checked').attr("data-name") && "dc_twint" === $('input[name="storedPaymentMethod"]:checked').attr("data-name")) isTwint = true;
        }
        if (sessionStorage.getItem("domain"))
            if ("fix" === sessionStorage.getItem("domain"))
                if (isTwint) cb = postFixPaymentExecute;
                else cb = postStartFixPaymentDatatrans;
            else if (isTwint)
                if (urlParams.get("type") && "prepay" === urlParams.get("type")) cb = postRefillExecute;
                else cb = postMobilePaymentExecute;
            else if (urlParams.get("type") && "prepay" === urlParams.get("type")) cb = postStartRefillDatatrans;
            else cb = postStartMobilePaymentDatatrans;
        if (urlParams.get("type") && "prepay" === urlParams.get("type")) {
            payload.msisdn = $("#ccMobile").attr("data-number");
            (payload.amount = convertAmount($("#ccAmount").val())), payload.uiLocation.queryParams.push(Object.assign({ name: "type", value: "prepay" }));
            cb(accountID, customerID, JSON.stringify(payload))
                .done(function (result) {
                    if (result)
                        if (isTwint) {
                            $("#refillPrepay").removeClass("loading").hide();
                            displayResult(result);
                            resolve();
                        } else if (result.location) {
                            sessionStorage.setItem("paymentInfo", result.paymentId);
                            window.location.href = result.location;
                            resolve();
                        }
                })
                .fail(function (result) {
                    $("#refillPrepay").removeClass("loading");
                    switch (result.responseJSON.errorCode) {
                        case "BAD_MSISDN_FORMAT":
                        case "INVALID_MSISDN":
                            displayMessageAfterSubmit(errorContainer, submitCurrentForm, "", $.i18n("utils.error.bad_msisdn_" + BRAND.name));
                            break;
                        case "AMOUNT_TOO_SMALL":
                            displayMessageAfterSubmit(errorContainer, submitCurrentForm, "", $.i18n("utils.error.amount_too_low_" + BRAND.name));
                            break;
                        case "AMOUNT_TOO_LARGE":
                            displayMessageAfterSubmit(errorContainer, submitCurrentForm, "", $.i18n("utils.error.amount_too_high_" + BRAND.name));
                            break;
                        case "INVALID_BRAND_FOR_CHANNEL":
                            displayMessageAfterSubmit(errorContainer, submitCurrentForm, "", $.i18n("utils.error.wrong_brand"));
                            break;
                        case "TOO_MANY_REFILLS":
                            displayMessageAfterSubmit(errorContainer, submitCurrentForm, "", $.i18n("utils.error.too_many_refills"));
                            break;
                        case "CUMULATED_AMOUNT_EXCEEDED":
                            displayMessageAfterSubmit(errorContainer, submitCurrentForm, "", $.i18n("utils.error.cumulated_amount_exceeded"));
                            break;
                        default:
                            displayMessageAfterSubmit(errorContainer, submitCurrentForm, "", $.i18n("utils.technical_error"));
                            break;
                    }
                });
        } else
            cb(accountID, customerID, JSON.stringify(payload))
                .done(function (result) {
                    paymentForm.removeClass("loading");
                    if (result)
                        if (isTwint) {
                            paymentForm.hide();
                            displayResult(result);
                            resolve();
                        } else if (result.location) {
                            sessionStorage.setItem("paymentInfo", result.paymentId);
                            window.location.href = result.location;
                            resolve();
                        }
                })
                .fail(function (result) {
                    paymentForm.removeClass("loading");
                    switch (result.responseJSON.errorCode) {
                        case "AMOUNT_TOO_LOW":
                            displayMessageAfterSubmit(errorContainer, submitCurrentForm, "", $.i18n("utils.error.amount_too_low_" + BRAND.name));
                            break;
                        case "AMOUNT_TOO_HIGH":
                            displayMessageAfterSubmit(errorContainer, submitCurrentForm, "", $.i18n("utils.error.amount_too_high_" + BRAND.name));
                            break;
                        default:
                            displayMessageAfterSubmit(errorContainer, submitCurrentForm, "", $.i18n("utils.technical_error"));
                            break;
                    }
                    resolve();
                });
    });
}
function getDiscountConditionalPricingsAPI() {
    return new Promise(function (resolve, reject) {
        const subscriptionId = sessionStorage.getItem("subid");
        getDiscountConditionalPricings(subscriptionId)
            .done(function (result) {
                resolve(result);
            })
            .fail(function () {
                reject("get DiscountConditionalPricings failed");
            });
    });
}
function postOffersAPI(payload, globalError) {
    return new Promise(function (resolve, reject) {
        postOffers(JSON.stringify(payload))
            .done(function (result) {
                resolve(result);
            })
            .fail(function (result) {
                if (result && result.response && "TOO_MANY_SUBSCRIPTIONS" === result.response.responseJSON) {
                    displayMessageAfterSubmit(globalError, null, "", $.i18n("utils.errors.TOO_MANY_SUBSCRIPTIONS"));
                    reject("get offers failed");
                } else {
                    displayMessageAfterSubmit(globalError, null, "", $.i18n("utils.technical_error"));
                    reject("get offers failed");
                }
            });
    });
}
function changeAddressAPI() {
    var customerInfoBottomVisibleArea = $("#customerInfoBottomVisibleArea"),
        changeAddressForm = $("#changeAddressForm"),
        changeAddress = $("#changeAddress"),
        newAddressForm = $("#newAddressForm"),
        personalInfoEditAddressError = $("#personalInfoEditAddressError"),
        personalInfoEditAddressValid = $("#personalInfoEditAddressValid"),
        submitNewAddress = $("#submitNewAddress"),
        houseNb = $("#houseNb"),
        city = $("#city"),
        zipcode = $("#zipcode"),
        street = $("#street");
    if (submitNewAddress.length)
        newAddressForm
            .on("submit", function (event) {
                event.preventDefault();
                if (validateForm(newAddressForm, submitNewAddress)) {
                    newAddressForm.addClass("loading");
                    postACSAPI(personalInfoEditAddressValid, personalInfoEditAddressError, newAddressForm, submitNewAddress, houseNb.val(), city.val(), zipcode.val(), street.val()).then(function (resultACS) {
                        if ("success" === resultACS)
                            if ("mobile" === sessionStorage.getItem("domain"))
                                postCustomerAddressAPI(sessionStorage.getItem("custid"), personalInfoEditAddressError, newAddressForm, submitNewAddress).then(function (result) {
                                    if ("success" === result) {
                                        newAddressForm.hide().removeClass("loading");
                                        displayMessageAfterEdit(personalInfoEditAddressValid, newAddressForm, submitNewAddress, "inline-edit", $.i18n("utils.valid.update_refresh"), false);
                                    } else newAddressForm.removeClass("loading");
                                });
                            else newAddressForm.removeClass("loading");
                    });
                } else newAddressForm.removeClass("loading");
            })
            .on("reset", function (event) {
                event.preventDefault();
                newAddressForm.show();
                changeAddressForm.hide();
                customerInfoBottomVisibleArea.show();
                changeAddress.attr("aria-expanded", false).focus();
            });
}
function changeCredentialEmailAPI() {
    var newLogin = $("#newLogin"),
        loginVisibleArea = $("#loginVisibleArea"),
        changeLoginForm = $("#changeLoginForm"),
        changeLogin = $("#changeLogin"),
        newLoginForm = $("#newLoginForm"),
        newLoginFormEditError = $("#newLoginFormEditError"),
        newLoginFormEditValid = $("#newLoginFormEditValid"),
        submitNewLogin = $("#submitNewLogin");
    if (submitNewLogin.length)
        newLoginForm
            .on("submit", function (event) {
                event.preventDefault();
                newLoginForm.addClass("loading");
                if (validateForm(newLoginForm, submitNewLogin)) {
                    var payload = { newIdentifier: newLogin.val().trim(), language: setDefaultLang() };
                    postNewIdentifier(JSON.stringify(payload))
                        .done(function () {
                            newLoginForm.removeClass("loading");
                            newLoginForm.hide();
                            newLoginFormEditValid.hide();
                            displayMessageAfterEdit(newLoginFormEditValid, newLoginForm, submitNewLogin, "big-edit", $.i18n("utils.valid.email_update_confirmation_" + BRAND.name), false);
                        })
                        .fail(function (result) {
                            newLoginFormEditError.hide();
                            newLoginForm.removeClass("loading");
                            if (result && result.responseJSON)
                                if ("INVALID_EMAIL_FORMAT" === result.responseJSON.errorCode) displayMessageAfterEdit(newLoginFormEditError, newLoginForm, submitNewLogin, "big-edit", $.i18n("utils.error.wrong_email_" + BRAND.name), true);
                                else if ("DUPLICATE_CREDENTIAL_ERROR" === result.responseJSON.errorCode)
                                    displayMessageAfterEdit(newLoginFormEditError, newLoginForm, submitNewLogin, "big-edit", $.i18n("utils.error.email_already_exists_" + BRAND.name), true);
                                else displayMessageAfterEdit(newLoginFormEditError, newLoginForm, submitNewLogin, "big-edit", $.i18n("utils.technical_error"), true);
                            else displayMessageAfterEdit(newLoginFormEditError, newLoginForm, submitNewLogin, "big-edit", $.i18n("utils.technical_error"), true);
                        });
                } else newLoginForm.removeClass("loading");
            })
            .on("reset", function (event) {
                event.preventDefault();
                newLoginForm.show();
                changeLoginForm.hide();
                loginVisibleArea.show();
                changeLogin.attr("aria-expanded", false).focus();
            });
}
function changeGenderAPI() {
    var currentSubID = $("#currentSubID"),
        customerInfoTopVisibleArea = $("#customerInfoTopVisibleArea"),
        changeGenderForm = $("#changeGenderForm"),
        changeGender = $("#changeGender"),
        newGenderForm = $("#newGenderForm"),
        personalInfoEditGenderError = $("#personalInfoEditGenderError"),
        personalInfoEditGenderValid = $("#personalInfoEditGenderValid"),
        submitNewGender = $("#submitNewGender");
    if (submitNewGender.length)
        newGenderForm
            .on("submit", function (event) {
                event.preventDefault();
                if (validateForm(newGenderForm, submitNewGender)) {
                    newGenderForm.addClass("loading");
                    var newGender = $("#genderChoice :radio:checked"),
                        payload = { title: newGender.val() };
                    postCustomerGender(currentSubID.text(), JSON.stringify(payload))
                        .done(function () {
                            newGenderForm.removeClass("loading").hide();
                            displayMessageAfterEdit(personalInfoEditGenderValid, newGenderForm, submitNewGender, "inline-edit", $.i18n("utils.valid.update_refresh"), false);
                        })
                        .fail(function (result) {
                            newGenderForm.removeClass("loading").hide();
                            displayMessageAfterEdit(personalInfoEditGenderError, newGenderForm, submitNewGender, "inline-edit", $.i18n("utils.technical_error"), true);
                        });
                }
            })
            .on("reset", function (event) {
                event.preventDefault();
                newGenderForm.show();
                changeGenderForm.hide();
                customerInfoTopVisibleArea.show();
                changeGender.attr("aria-expanded", false).focus();
            });
}
function changeLangAPI() {
    var currentSubID = $("#currentSubID"),
        newLang = $("#newLang"),
        customerInfoBottomVisibleArea = $("#customerInfoBottomVisibleArea"),
        changeLangForm = $("#changeLangForm"),
        changeLang = $("#changeLang"),
        newLangForm = $("#newLangForm"),
        personalInfoEditLanguageError = $("#personalInfoEditLanguageError"),
        personalInfoEditLanguageValid = $("#personalInfoEditLanguageValid"),
        submitNewLang = $("#submitNewLang");
    if (submitNewLang.length)
        newLangForm
            .on("submit", function (event) {
                event.preventDefault();
                if (validateForm(newLangForm, submitNewLang)) {
                    newLangForm.addClass("loading");
                    var payload = { language: newLang.val() },
                        callback = "mobile" === sessionStorage.getItem("domain") ? postCustomerLang : postCustomerFixLang;
                    callback(currentSubID.text(), JSON.stringify(payload))
                        .done(function () {
                            newLangForm.hide().removeClass("loading");
                            displayMessageAfterEdit(personalInfoEditLanguageValid, newLangForm, submitNewLang, "inline-edit", $.i18n("utils.valid.language_update_confirmation_" + BRAND.name), false);
                        })
                        .fail(function (result) {
                            newLangForm.hide().removeClass("loading");
                            if (result && "undefined" !== typeof result.responseJSON && "undefined" !== typeof result.responseJSON.errorCode)
                                displayMessageAfterEdit(personalInfoEditLanguageError, newLangForm, submitNewLang, "inline-edit", $.i18n("utils.technical_error"), true);
                            else displayMessageAfterEdit(personalInfoEditLanguageError, newLangForm, submitNewLang, "inline-edit", $.i18n("utils.technical_error"), true);
                        });
                } else newLangForm.removeClass("loading");
            })
            .on("reset", function (event) {
                event.preventDefault();
                newLangForm.show();
                changeLangForm.hide();
                customerInfoBottomVisibleArea.show();
                changeLang.attr("aria-expanded", false).focus();
            });
}
function changeMarkEmailAPI() {
    var currentSubID = $("#currentSubID"),
        newMarkEmail = $("#newMarkEmail"),
        customerInfoBottomVisibleArea = $("#customerInfoBottomVisibleArea"),
        changeMarkEmailForm = $("#changeMarkEmailForm"),
        changeMarkEmail = $("#changeMarkEmail"),
        newMarkEmailForm = $("#newMarkEmailForm"),
        personalInfoEditMarkEmailError = $("#personalInfoEditMarkEmailError"),
        personalInfoEditMarkEmailValid = $("#personalInfoEditMarkEmailValid"),
        submitNewMarkEmail = $("#submitNewMarkEmail");
    if (submitNewMarkEmail.length)
        newMarkEmailForm
            .on("submit", function (event) {
                event.preventDefault();
                newMarkEmailForm.addClass("loading");
                if (validateForm(newMarkEmailForm, submitNewMarkEmail)) {
                    newMarkEmailForm.addClass("loading");
                    var payload = { email: newMarkEmail.val().trim() },
                        callback = "mobile" === sessionStorage.getItem("domain") ? postCustomerEmail : postCustomerFixEmail;
                    callback(currentSubID.text(), JSON.stringify(payload))
                        .done(function () {
                            newMarkEmailForm.hide();
                            newMarkEmailForm.removeClass("loading");
                            displayMessageAfterEdit(personalInfoEditMarkEmailValid, newMarkEmailForm, submitNewMarkEmail, "inline-edit", $.i18n("utils.valid.email_update_confirmation_" + BRAND.name), false);
                        })
                        .fail(function (result) {
                            newMarkEmailForm.hide();
                            newMarkEmailForm.removeClass("loading");
                            displayMessageAfterEdit(personalInfoEditMarkEmailError, newMarkEmailForm, submitNewMarkEmail, "inline-edit", $.i18n("utils.technical_error"), true);
                        });
                } else newMarkEmailForm.removeClass("loading");
            })
            .on("reset", function (event) {
                event.preventDefault();
                newMarkEmailForm.show();
                changeMarkEmailForm.hide();
                customerInfoBottomVisibleArea.show();
                changeMarkEmail.attr("aria-expanded", false).focus();
            });
}
function createPasswordAPI() {
    var currentPwd = $("#currentPwd"),
        newPwd = $("#newPwd"),
        confirmNewPwd = $("#confirmNewPwd"),
        pwdVisibleArea = $("#pwdVisibleArea"),
        changePwdForm = $("#changePwdForm"),
        changePwd = $("#changePwd"),
        newPwdForm = $("#newPwdForm"),
        newPwdFormEditError = $("#newPwdFormEditError"),
        newPwdFormEditValid = $("#newPwdFormEditValid"),
        submitNewPwd = $("#submitNewPwd");
    if (submitNewPwd.length) {
        getPasswordStrength(newPwd, newPwdFormEditError, submitNewPwd, newPwdForm);
        newPwdForm
            .on("submit", function (event) {
                event.preventDefault();
                if (validateForm(newPwdForm, submitNewPwd)) {
                    newPwdForm.addClass("loading");
                    var encodedCurrentPwd = $.base64.btoa(currentPwd.val(), true);
                    var encodedNewPwd = $.base64.btoa(newPwd.val(), true);
                    var payload = { currentPassword: encodedCurrentPwd, newPassword: encodedNewPwd, language: setDefaultLang() };
                    postNewPassword(JSON.stringify(payload))
                        .done(function () {
                            newPwdForm.removeClass("loading").hide().find("label").removeClass("show");
                            newPwdFormEditValid.hide();
                            currentPwd.val("");
                            newPwd.val("");
                            confirmNewPwd.val("");
                            displayMessageAfterEdit(newPwdFormEditValid, newPwdForm, submitNewPwd, "big-edit", $.i18n("utils.valid.password_update_confirmation_" + BRAND.name), false);
                        })
                        .fail(function (result) {
                            newPwdForm.removeClass("loading").hide();
                            if (result && result.responseJSON)
                                if ("PASSWORD_TOO_WEAK" === result.responseJSON.errorCode) displayMessageAfterEdit(newPwdFormEditError, newPwdForm, submitNewPwd, "big-edit", $.i18n("utils.error.pwd_too_weak_" + BRAND.name), true);
                                else if ("CURRENT_PASSWORD_MISMATCH" === result.responseJSON.errorCode)
                                    displayMessageAfterEdit(newPwdFormEditError, newPwdForm, submitNewPwd, "big-edit", $.i18n("utils.error.current_password_mismatch"), true);
                                else if ("SET_PASSWORD_ERROR" === result.responseJSON.errorCode) displayMessageAfterEdit(newPwdFormEditError, newPwdForm, submitNewPwd, "big-edit", $.i18n("utils.error.set_password_error"), true);
                                else if ("INVALID_OBJECT" === result.responseJSON.errorCode) displayMessageAfterEdit(newPwdFormEditError, newPwdForm, submitNewPwd, "big-edit", $.i18n("utils.error.missing_parameter"), true);
                                else if ("FAILED" === result.responseJSON.errorCode) displayMessageAfterEdit(newPwdFormEditError, newPwdForm, submitNewPwd, "big-edit", $.i18n("utils.technical_error"), true);
                                else displayMessageAfterEdit(newPwdFormEditError, newPwdForm, submitNewPwd, "big-edit", $.i18n("utils.technical_error"), true);
                            else displayMessageAfterEdit(newPwdFormEditError, newPwdForm, submitNewPwd, "big-edit", $.i18n("utils.technical_error"), true);
                        });
                }
            })
            .on("reset", function (event) {
                event.preventDefault();
                newPwdForm.show().find("label").removeClass("show");
                changePwdForm.hide();
                pwdVisibleArea.show();
                $("p.error").remove();
                $(".error").removeClass("error");
                $(".valid").removeClass("valid");
                currentPwd.val("");
                newPwd.val("");
                confirmNewPwd.val("");
                changePwd.attr("aria-expanded", false).focus();
            });
    }
}
function getCustomerConsent(errorContainer, submitCurrentForm, customer, privacyList, privacyTitle, privacyParagraph) {
    if ("mobile" === customer.attr("data-domain"))
        getCustomerMobileConsentAPI(errorContainer, submitCurrentForm, customer.attr("data-id")).then(function (mobileConsentResult) {
            displayConsentList(customer, mobileConsentResult, privacyList, privacyTitle, privacyParagraph);
        });
    else
        getCustomerFixConsentAPI(errorContainer, submitCurrentForm, customer.attr("data-id")).then(function (fixConsentResult) {
            displayConsentList(customer, fixConsentResult, privacyList, privacyTitle, privacyParagraph);
        });
}
function getCustomerFixConsentAPI(errorContainer, submitCurrentForm, customerID) {
    return new Promise(function (resolve, reject) {
        getCustomerFixConsent(customerID)
            .done(function (result) {
                resolve(result);
            })
            .fail(function () {
                $("#contacttInfo").hide();
                submitCurrentForm.hide();
                displayMessageAfterSubmit(errorContainer, submitCurrentForm, "", $.i18n("utils.technical_error"));
                reject("get customer consent failed");
            });
    });
}
function getCustomerMobileConsentAPI(errorContainer, submitCurrentForm, customerID) {
    return new Promise(function (resolve, reject) {
        getCustomerMobileConsent(customerID)
            .done(function (result) {
                resolve(result);
            })
            .fail(function () {
                $("#contacttInfo").hide();
                submitCurrentForm.hide();
                displayMessageAfterSubmit(errorContainer, submitCurrentForm, "", $.i18n("utils.technical_error"));
                reject("get customer consent failed");
            });
    });
}
function getCustomerListInfo(customerListWrapper, customerListItemWrapper, togglerBtn) {
    var customerListContainer = customerListWrapper,
        customerList = customerListItemWrapper,
        globalError = $("#globalError"),
        customerListItem = "",
        urlParams = new URLSearchParams(location.search);
    getCustomerList()
        .done(function (result) {
            if (result.length > 0) {
                customerList.empty();
                result.sort(orderByDisplayOrder);
                for (var i = 0; i < result.length; i++) {
                    var careOf = "" !== result[i].address.careOf && null !== result[i].address.careOf ? result[i].address.careOf + "<br/>" : "";
                    var city = null !== result[i].address.city ? result[i].address.city : "";
                    var country = null !== result[i].address.country ? result[i].address.country : "";
                    var houseNumber = null !== result[i].address.houseNumber ? result[i].address.houseNumber + ", " : "";
                    var postalCode = null !== result[i].address.postalCode ? result[i].address.postalCode : "";
                    var street = null !== result[i].address.street ? result[i].address.street : "";
                    var customerId = result[i].id,
                        customerFirstName = result[i].firstName,
                        customerLastName = result[i].lastName,
                        domain = result[i].domain.toLowerCase(),
                        customerTitleDisplay = $.i18n("profile.gender." + result[i].title.toLowerCase()),
                        customerBirthdate = result[i].birthDate,
                        customerAddress = careOf + street + " " + houseNumber + " " + postalCode + " " + city + " " + country,
                        customerInvoiced = result[i].isInvoiced,
                        customerMarketingEmail = result[i].email,
                        customerLang = result[i].language;
                    customerAddress = customerAddress.replace(/\"/g, "&quot;");
                    customerListItem +=
                        '<li>                    <button data-id="' +
                        customerId +
                        '" class="btn btn--mobile"                         data-firstname="' +
                        customerFirstName +
                        '"                         data-lastname="' +
                        customerLastName +
                        '"                         data-domain="' +
                        domain +
                        '"                         data-gender="' +
                        customerTitleDisplay +
                        '"                         data-birthdate="' +
                        customerBirthdate +
                        '"                         data-invoiced="' +
                        customerInvoiced +
                        '"                         data-address="' +
                        customerAddress +
                        '"                         data-markEmail="' +
                        customerMarketingEmail +
                        '"                         data-lang="' +
                        customerLang +
                        '" >                        <svg aria-hidden="true" focusable="false" class="' +
                        domain +
                        '">                            <use xlink:href="#' +
                        domain +
                        '"></use>                        </svg>                        ' +
                        customerFirstName +
                        " " +
                        customerLastName +
                        "                    </button>                </li> ";
                }
                customerList.append(customerListItem);
            } else if (1 === result.length) customerListContainer.hide();
            else if ($('a[aria-controls="profilePersonalInfo"]').length) $('a[aria-controls="profilePersonalInfo"]').remove();
            if (customerListContainer.length) updateCustomerListToggler(togglerBtn, customerList);
            if (urlParams.get("acc")) {
                var preselectedCustomerId = urlParams.get("acc");
                $('button[data-id="' + preselectedCustomerId + '"]')
                    .trigger("click")
                    .addClass("active");
            } else if (sessionStorage.getItem("custid") && $("#" + sessionStorage.getItem("custid")).length)
                $('button[data-id="' + sessionStorage.getItem("custid") + '"]')
                    .trigger("click")
                    .addClass("active");
            else customerList.find("button").first().trigger("click").addClass("active");
        })
        .fail(function (result) {
            if (result) {
                $("#wrapper").removeClass("hidden").focus();
                $("#loadingMsg").addClass("hidden");
                displayMessageAfterSubmit(globalError, null, "", $.i18n("utils.technical_error"));
            }
        });
}
function getCustomerListInfoAPI() {
    return new Promise(function (resolve, reject) {
        var globalError = $("#globalError");
        getCustomerList()
            .done(function (result) {
                resolve(result);
            })
            .fail(function (result) {
                $("#wrapper").removeClass("hidden").focus();
                $("#loadingMsg").addClass("hidden");
                displayMessageAfterSubmit(globalError, null, "", $.i18n("utils.technical_error"));
                reject("get customer failed");
            });
    });
}
function getStoredPaymentMethodStatusAPI(id, transactionId, errorContainer, validContainer, submitCurrentForm) {
    let cb;
    return new Promise(function (resolve, reject) {
        if (sessionStorage.getItem("domain")) {
            if ("fix" === sessionStorage.getItem("domain")) cb = getFixStoredPaymentMethodStatus(id, transactionId);
            else cb = getMobileStoredPaymentMethodStatus(id, transactionId);
            cb.done(function (resultCb) {
                if ("SUCCESS" === resultCb.status) displayMessageAfterSubmit(validContainer, submitCurrentForm, "", $.i18n("profile.payment.status_" + resultCb.status));
                else displayMessageAfterSubmit(errorContainer, submitCurrentForm, "", $.i18n("profile.payment.status_" + resultCb.status));
            }).fail(function () {
                displayMessageAfterSubmit(errorContainer, submitCurrentForm, "", $.i18n("utils.technical_error"));
            });
        }
    });
}
var orderBy = function (throttleObject, index, cb) {
    return function (result) {
        if (throttleObject.lastKnownedValue <= index) {
            throttleObject.value = result;
            throttleObject.lastKnownedValue = index;
        }
        cb(throttleObject.value);
    };
};
function initializeObject() {
    return { value: null, cpt: 0, lastKnownedValue: -1 };
}
function getPasswordStrength(candidatePassword, formErrorID, submitFormID, newPwdForm) {
    var errorObject = "#" + candidatePassword.attr("id") + "-error",
        errorID = candidatePassword.attr("id") + "-error";
    throttleObject = initializeObject();
    var throttlePasswordStrength = function () {
        if (candidatePassword.val().length && candidatePassword.val().length <= 128) {
            var encodedPwd = $.base64.btoa(candidatePassword.val(), true);
            var payload = { candidatePassword: encodedPwd };
            const index = throttleObject.cpt++;
            callPostPasswordStrength(JSON.stringify(payload), candidatePassword, formErrorID, submitFormID, throttleObject, index, newPwdForm);
        }
        if (candidatePassword.val().length > 128) {
            if ($(errorObject).length) $(errorObject).remove();
            candidatePassword
                .attr("aria-invalid", "true")
                .attr("aria-describedby", errorID)
                .parent()
                .addClass("error")
                .find("button")
                .after('<p id="' + errorID + '" class="error">' + $.i18n("utils.error.pwd_too_long_" + BRAND.name) + "</p>");
        }
    };
    candidatePassword.on("keyup", throttle(throttlePasswordStrength, 500, true, true));
}
function callPostPasswordStrength(payload, candidatePassword, formErrorID, submitFormID, throttleObject, index, newPwdForm) {
    var errorObject = "#" + candidatePassword.attr("id") + "-error",
        errorID = candidatePassword.attr("id") + "-error";
    var domUpdate = function (result) {
        if ($(errorObject).length) $(errorObject).remove();
        var i = (iMainError = 0);
        var mainError = result.rules;
        if (mainError)
            for (iMainError; iMainError < mainError.length; iMainError++)
                switch (mainError[iMainError].code) {
                    case "MEDIUM_LENGTH_RULE":
                        if (true === mainError[iMainError].valid) {
                            $("#mainError").addClass("valid");
                            $("#mainError .chk").text($.i18n("utils.labels.checked"));
                        } else {
                            $("#mainError").removeClass("valid");
                            $("#mainError .chk").text("");
                        }
                        break;
                    case "MEDIUM_CHARACTERISTICS_RULE":
                        if (false === mainError[iMainError].valid) {
                            $("#detailedError").removeClass("valid");
                            $("#detailedError .chk").text("");
                        } else {
                            $("#detailedError").addClass("valid");
                            $("#detailedError .chk").text($.i18n("utils.labels.checked"));
                        }
                        break;
                    default:
                        break;
                }
        candidatePassword.on("blur", function () {
            if ("TOO_LOW" === result.strength) {
                if (!$(errorObject).length)
                    candidatePassword
                        .attr("aria-invalid", "true")
                        .attr("aria-describedby", errorID)
                        .parent()
                        .addClass("error")
                        .find("button")
                        .after('<p id="' + errorID + '" class="error">' + $.i18n("utils.error.pwd_too_weak_" + BRAND.name) + "</p>");
            } else {
                if ($(errorObject).length) $(errorObject).remove();
                candidatePassword.attr("aria-invalid", "false").removeAttr("aria-describedby").parent().removeClass("error");
            }
        });
    };
    var failUpdate = function (result) {
        if (result && result.responseJSON)
            if ("INVALID_OBJECT" === result.responseJSON.error.code) displayMessageAfterEdit(formErrorID, newPwdForm, submitFormID, "big-edit", $.i18n("utils.error.missing_parameter"), true);
            else if ("FAILED" === result.responseJSON.error.code) displayMessageAfterEdit(formErrorID, newPwdForm, submitFormID, "big-edit", $.i18n("utils.technical_error"), true);
            else displayMessageAfterEdit(formErrorID, newPwdForm, submitFormID, "big-edit", $.i18n("utils.technical_error"), true);
        else displayMessageAfterEdit(formErrorID, newPwdForm, submitFormID, "big-edit", $.i18n("utils.technical_error"), true);
    };
    postPasswordStrength(payload).done(orderBy(throttleObject, index, domUpdate)).fail(failUpdate);
}
function postACSAPI(feedbackValid, feedbackError, newAddressForm, submitNewAddress, houseNb, city, zipcode, street) {
    return new Promise(function (resolve, reject) {
        var payloadACS = { houseNumber: houseNb, city: { town: city, zipCode: zipcode }, streetName: street, searchLanguage: setDefaultLang() };
        postACS(JSON.stringify(payloadACS))
            .done(function (result) {
                if (result.addresses.length) {
                    var res = result.addresses[0];
                    if (true === res.zipValid && true === res.streetValid && true === res.houseNumerValid) resolve("success");
                    else {
                        displayMessageAfterEdit(feedbackValid, newAddressForm, submitNewAddress, "inline-edit", $.i18n("utils.error.address_not_found_" + BRAND.name), true);
                        newAddressForm.removeClass("loading");
                        reject("address search failed");
                    }
                }
            })
            .fail(function (result) {
                displayMessageAfterEdit(feedbackError, newAddressForm, submitNewAddress, "inline-edit", $.i18n("utils.technical_error"), true);
                newAddressForm.removeClass("loading");
                reject("address search failed");
            });
    });
}
function postAddPaymentMethodAPI(errorContainer, submitCurrentForm, accountID) {
    return new Promise(function (resolve, reject) {
        var payload = { language: setDefaultLang(), uiLocation: { path: "/profile.html", fragment: "profilePersonalInfo" } };
        if (sessionStorage.getItem("domain")) {
            if ("fix" === sessionStorage.getItem("domain")) cb = postAddPaymentMethodFix;
            else cb = postAddPaymentMethodMobile;
            cb(accountID, JSON.stringify(payload))
                .done(function (result) {
                    if (result.location) {
                        window.location.href = result.location;
                        resolve();
                    }
                })
                .fail(function () {
                    displayMessageAfterSubmit(errorContainer, submitCurrentForm, "", $.i18n("utils.technical_error"));
                });
        }
    });
}
function postCustomerAddressAPI(customerID, personalInfoEditBottomError, newAddressForm, submitNewAddress) {
    return new Promise(function (resolve, reject) {
        var payloadAddress = { houseNumber: $("#houseNb").val().trim(), city: $("#city").val().trim(), postalCode: $("#zipcode").val().trim(), street: $("#street").val().trim() };
        postCustomerAddress(customerID, JSON.stringify(payloadAddress))
            .done(function () {
                resolve("success");
            })
            .fail(function () {
                displayMessageAfterEdit(personalInfoEditBottomError, newAddressForm, submitNewAddress, "inline-edit", $.i18n("utils.technical_error"), true);
                reject("post address failed");
            });
    });
}
function postCustomerConsent(errorContainer, validContainer, submitCurrentForm, customer, payload) {
    if ("mobile" === customer.attr("data-domain")) return postCustomerMobileConsentAPI(errorContainer, validContainer, submitCurrentForm, customer.attr("data-id"), payload);
    else return postCustomerFixConsentAPI(errorContainer, validContainer, submitCurrentForm, customer.attr("data-id"), payload);
}
function postCustomerFixConsentAPI(errorContainer, validContainer, submitCurrentForm, customerID, payload) {
    return new Promise(function (resolve, reject) {
        postCustomerFixConsent(customerID, payload)
            .done(function () {
                displayMessageAfterSubmit(validContainer, submitCurrentForm, "", $.i18n("utils.valid.preference_saved"));
                resolve("success");
            })
            .fail(function () {
                commonErrors(result, errorContainer, submitCurrentForm);
                reject("post customer consent failed");
            });
    });
}
function postCustomerMobileConsentAPI(errorContainer, validContainer, submitCurrentForm, customerID, payload) {
    return new Promise(function (resolve, reject) {
        postCustomerMobileConsent(customerID, payload)
            .done(function () {
                displayMessageAfterSubmit(validContainer, submitCurrentForm, "", $.i18n("utils.valid.preference_saved"));
                resolve("success");
            })
            .fail(function () {
                commonErrors(result, errorContainer, submitCurrentForm);
                reject("post customer consent failed");
            });
    });
}
function postDeleteCustomerAPI() {
    let errorMessageElem = $("#deleteCustomerError"),
        submitDeleteCustomerBtn = $("#submitDeleteCustomer");
    return new Promise(function (resolve, reject) {
        postDeleteCustomer()
            .done(function (result) {
                resolve(result);
            })
            .fail(function (result) {
                displayMessageAfterSubmit(errorMessageElem, submitDeleteCustomerBtn, "", $.i18n("utils.error.delete_customer_failed_" + BRAND.name));
                reject("delete customer failed");
            });
    });
}
function postLinkByBillingAccountAPI(domain) {
    return new Promise(function (resolve, reject) {
        var linkCustomerForm = $("#linkCustomerForm"),
            linkCustomerSubmit = $("#linkCustomerSubmit"),
            byBAError = $("#byBAError"),
            dateBirth = $("#dateBirth"),
            billingAccountId = $("#billingAccountId");
        linkCustomerForm.off("submit").on("submit", function (event) {
            event.preventDefault();
            if (validateForm(linkCustomerForm, linkCustomerSubmit)) {
                var dateOfBirth = dateToDateObject(dateBirth.val().trim()),
                    registerPayer = "FIX" === domain ? false : $('#registerPayer input[type="radio"]:checked').val();
                var payload = { language: setDefaultLang(), dateOfBirth: dateOfBirth, billingAccountId: billingAccountId.val().trim(), domain: domain, linkPayer: registerPayer };
                postLinkByBillingAccount(JSON.stringify(payload))
                    .done(function () {
                        linkCustomerValidated("self_registration_check_inbox");
                        resolve();
                    })
                    .fail(function (result) {
                        if (result && result.responseJSON)
                            if ("CUSTOMER_SEARCH_FAILED" === result.responseJSON.errorCode) displayMessageAfterSubmit(byBAError, linkCustomerSubmit, "", $.i18n("utils.error.search_failed_ba_" + BRAND.name));
                            else commonErrors(result.responseJSON.errorCode, byBAError, linkCustomerSubmit);
                        else displayMessageAfterSubmit(byBAError, linkCustomerSubmit, "", $.i18n("utils.technical_error_" + BRAND.name));
                        reject("post " + domain + " billing account failed");
                    });
            }
        });
    });
}
function postLinkFixByContractAPI() {
    return new Promise(function (resolve, reject) {
        var linkCustomerForm = $("#linkCustomerForm"),
            linkCustomerSubmit = $("#linkCustomerSubmit"),
            byContractError = $("#byContractError"),
            dateBirth = $("#dateBirth"),
            contractNumberFix = $("#contractNumberFix");
        linkCustomerForm.off("submit").on("submit", function (event) {
            event.preventDefault();
            if (validateForm(linkCustomerForm, linkCustomerSubmit)) {
                var dateOfBirth = dateToDateObject(dateBirth.val());
                var payload = { language: setDefaultLang(), dateOfBirth: dateOfBirth, contractNumber: contractNumberFix.val() };
                postLinkFixByContract(JSON.stringify(payload))
                    .done(function () {
                        linkCustomerValidated("self_registration_check_inbox");
                        resolve();
                    })
                    .fail(function (result) {
                        if (result && result.responseJSON)
                            if ("CUSTOMER_SEARCH_FAILED" === result.responseJSON.errorCode) displayMessageAfterSubmit(byContractError, linkCustomerSubmit, "", $.i18n("utils.error.search_failed_fix_contract"));
                            else commonErrors(result.responseJSON.errorCode, byContractError, linkCustomerSubmit);
                        else displayMessageAfterSubmit(byContractError, linkCustomerSubmit, "", $.i18n("utils.technical_error_" + BRAND.name));
                        reject("post fix contract failed");
                    });
            }
        });
    });
}
function postLinkFixByOTOAPI() {
    return new Promise(function (resolve, reject) {
        var linkCustomerForm = $("#linkCustomerForm"),
            linkCustomerSubmit = $("#linkCustomerSubmit"),
            byOtoError = $("#byOtoError"),
            dateBirth = $("#dateBirth"),
            oto = $("#oto");
        linkCustomerForm.off("submit").on("submit", function (event) {
            event.preventDefault();
            if (validateForm(linkCustomerForm, linkCustomerSubmit)) {
                var dateOfBirth = dateToDateObject(dateBirth.val());
                var payload = { language: setDefaultLang(), dateOfBirth: dateOfBirth, otoId: oto.val() };
                postLinkFixByOTO(JSON.stringify(payload))
                    .done(function () {
                        linkCustomerValidated("self_registration_check_inbox");
                        resolve();
                    })
                    .fail(function (result) {
                        if (result && result.responseJSON)
                            if ("CUSTOMER_SEARCH_FAILED" === result.responseJSON.errorCode) displayMessageAfterSubmit(byOtoError, linkCustomerSubmit, "", $.i18n("utils.error.search_failed_fix_oto"));
                            else if ("FAILED" === result.responseJSON.errorCode) displayMessageAfterSubmit(byOtoError, linkCustomerSubmit, "", $.i18n("utils.error.oto_failed"));
                            else commonErrors(result.responseJSON.errorCode, byOtoError, linkCustomerSubmit);
                        else displayMessageAfterSubmit(byOtoError, linkCustomerSubmit, "", $.i18n("utils.technical_error_" + BRAND.name));
                        reject("post oto failed");
                    });
            }
        });
    });
}
function postLinkMobileByContractAPI() {
    return new Promise(function (resolve, reject) {
        var linkCustomerForm = $("#linkCustomerForm"),
            linkCustomerSubmit = $("#linkCustomerSubmit"),
            byContractError = $("#byContractError"),
            linkCustomerValid = $("#linkCustomerValid"),
            dateBirth = $("#dateBirth"),
            registrationMobilePhone = $("#registrationMobilePhone"),
            contractNumberMobile = $("#contractNumberMobile");
        linkCustomerForm.off("submit").on("submit", function (event) {
            event.preventDefault();
            if (validateForm(linkCustomerForm, linkCustomerSubmit)) {
                var dateOfBirth = dateToDateObject(dateBirth.val());
                var payload = { language: setDefaultLang(), dateOfBirth: dateOfBirth, msisdn: registrationMobilePhone.attr("data-number"), contractId: contractNumberMobile.val() };
                postLinkMobileByContract(JSON.stringify(payload))
                    .done(function () {
                        linkCustomerForm.hide();
                        byContractError.hide();
                        displayMessageAfterSubmit(linkCustomerValid, linkCustomerSubmit, "", "utils.valid.self_registration_check_inbox_" + BRAND.name, false);
                        resolve();
                    })
                    .fail(function (result) {
                        if (result && result.responseJSON)
                            if ("BAD_MSISDN_FORMAT" === result.responseJSON.errorCode) displayMessageAfterSubmit(byContractError, linkCustomerSubmit, "", $.i18n("utils.error.wrong_phone_number_" + BRAND.name));
                            else if ("BAD_CONTRACT_ID_FORMAT" === result.responseJSON.errorCode) displayMessageAfterSubmit(byContractError, linkCustomerSubmit, "", $.i18n("utils.error.wrong_contract_id_" + BRAND.name));
                            else if ("CUSTOMER_SEARCH_FAILED" === result.responseJSON.errorCode) displayMessageAfterSubmit(byContractError, linkCustomerSubmit, "", $.i18n("utils.error.search_failed_mobile_" + BRAND.name));
                            else commonErrors(result.responseJSON.errorCode, byContractError, linkCustomerSubmit);
                        else displayMessageAfterSubmit(byContractError, linkCustomerSubmit, "", $.i18n("utils.technical_error_" + BRAND.name));
                        reject("post mobile contract failed");
                    });
            }
        });
    });
}
function postLinkMobileByMsisdnAPI(errorMessage, submitBtn, payload) {
    return new Promise(function (resolve, reject) {
        (payload.language = setDefaultLang()),
            postLinkMobileByMsisdn(JSON.stringify(payload))
                .done(function (result) {
                    errorMessage.hide();
                    resolve(result);
                })
                .fail(function (result) {
                    if (result && result.responseJSON)
                        if ("OWNER_IS_NOT_USER" === result.responseJSON.errorCode) {
                            errorMessage.hide();
                            reject("OWNER_IS_NOT_USER");
                        } else if ("WRONG_HOTP_CODE" === result.responseJSON.errorCode) reject("WRONG_HOTP_CODE");
                        else {
                            if ("BAD_MSISDN_FORMAT" === result.responseJSON.errorCode) displayMessageAfterSubmit(errorMessage, submitBtn, "", $.i18n("utils.error.bad_msisdn_" + BRAND.name));
                            else if ("CUSTOMER_SEARCH_FAILED" === result.responseJSON.errorCode) displayMessageAfterSubmit(errorMessage, submitBtn, "", $.i18n("utils.error.search_failed_by_msisdn_" + BRAND.name));
                            else commonErrors(result.responseJSON.errorCode, errorMessage, submitBtn);
                            reject("postLinkMobileByMsisdn failed");
                        }
                    else {
                        displayMessageAfterSubmit(errorMessage, submitBtn, "", $.i18n("utils.technical_error_" + BRAND.name));
                        reject("postLinkMobileByMsisdn failed");
                    }
                });
    });
}
function postUnlinkCustomerAPI(customerID, customerDomain) {
    var unlinkCustomerValid = $("#unlinkCustomerValid"),
        unlinkCustomerError = $("#unlinkCustomerError"),
        confirmUnlink = $("#confirmUnlink");
    unlinkCustomer = $("#unlinkCustomer");
    submitUnlink = $("#submitUnlink");
    return new Promise(function (resolve, reject) {
        var payload = { language: setDefaultLang(), customerId: customerID, domain: customerDomain.toUpperCase() };
        postUnlinkCustomer(JSON.stringify(payload))
            .done(function (result) {
                displayMessageAfterSubmit(unlinkCustomerValid, submitUnlink, "", $.i18n("utils.valid.unlink_customer_success_" + BRAND.name));
                confirmUnlink.hide();
                unlinkCustomer.hide();
                resolve(result);
            })
            .fail(function (result) {
                if (result && result.responseJSON)
                    if ("CREDENTIAL_PERSON_LINK_NOT_FOUND" === result.responseJSON.errorCode)
                        displayMessageAfterSubmit(unlinkCustomerError, submitUnlink, "", $.i18n("utils.error.person_link_not_found_" + BRAND.name, SUPPORT_URL.url + "/recoveryPassword.html"));
                    else displayMessageAfterSubmit(unlinkCustomerError, submitUnlink, "", $.i18n("utils.error.unlink_customer_failed_" + BRAND.name));
                else displayMessageAfterSubmit(unlinkCustomerError, submitUnlink, "", $.i18n("utils.error.unlink_customer_failed_" + BRAND.name));
                reject("unlinkCustomer failed");
            });
    });
}
function removePaymentMethodAPI(validContainer, errorContainer, submitCurrentForm, accountID, payload) {
    return new Promise(function (resolve, reject) {
        let cb;
        if (sessionStorage.getItem("domain")) {
            if ("fix" === sessionStorage.getItem("domain")) cb = removePaymentMethodFix;
            else cb = removePaymentMethodMobile;
            cb(accountID, payload)
                .done(function () {
                    displayMessageAfterSubmit(validContainer, submitCurrentForm, "", $.i18n("utils.valid.payment_method_removed"));
                    managePaymentMethod(accountID);
                })
                .fail(function (result) {
                    if (result && result.responseJSON) displayMessageAfterSubmit(errorContainer, submitCurrentForm, "", $.i18n("utils.technical_error_" + BRAND.name));
                });
        }
    });
}
function getAccessories(errorContainer, submitCurrentForm) {
    if ("fix" === sessionStorage.getItem("domain")) return getFixAccessoriesAPI(errorContainer, submitCurrentForm);
}
function getFixAccessoriesAPI(errorContainer, submitCurrentForm) {
    return new Promise(function (resolve, reject) {
        getFixAccessories()
            .done(function (result) {
                resolve(result);
            })
            .fail(function () {
                submitCurrentForm.hide();
                displayMessageAfterSubmit(errorContainer, submitCurrentForm, "", $.i18n("utils.technical_error"));
                reject("get accessories failed");
            });
    });
}
function getOptionsAPI(id, oStatus) {
    let cb,
        pkgDescContext = "",
        optionsContainer = $("#optionsContainer"),
        subOptionError = $("#subOptionError"),
        optionItem = "",
        currentLang = setDefaultLang();
    if ("fix" === sessionStorage.getItem("domain")) {
        cb = getFixOptions(id);
        pkgDescContext = "SALES_INFO_TEXT";
    } else {
        cb = getMobileOptions(id);
        pkgDescContext = "MEDIUM_DESCRIPTION";
    }
    return new Promise(function (resolve, reject) {
        cb.done(function (result) {
            result.families.sort(orderByDisplayOrder);
            if (!$.isEmptyObject(result) && result.families.length) {
                optionItem += '<p class="space-bottom">' + $.i18n("subscription.option.async_info") + "</p>";
                for (var iFamily = 0; iFamily < result.families.length; iFamily++) {
                    if ("OTHER" !== result.families[iFamily].code) {
                        var warningLimit = "",
                            currentFamily = result.families[iFamily],
                            familyTitle = searchInObject(currentFamily.commercialTexts, { context: "COMMERCIAL_NAME" });
                        optionItem += "<h2>" + familyTitle[0].texts[currentLang] + "</h2>";
                        optionItem += 1 === result.families[iFamily].limitPackages ? '<p class="space-bottom">' + $.i18n("subscription.option.limit_" + BRAND.name) + "</p>" : "";
                        optionItem += '<div class="slider option">';
                        currentFamily.packages.sort(orderByDisplayOrder);
                        for (var iOption = 0; iOption < currentFamily.packages.length; iOption++) {
                            var currentOption = currentFamily.packages[iOption],
                                currentPrice = currentOption.price ? "CHF " + (currentOption.price / 100).toFixed(2) + " " + $.i18n("utils.labels.month") : "",
                                currentName = searchInObject(currentOption.commercialTexts, { context: "COMMERCIAL_NAME" }),
                                periodNotice = searchInObject(currentOption.commercialTexts, { context: "PRICE_INFO" }),
                                currentDescription = searchInObject(currentOption.commercialTexts, { context: pkgDescContext }),
                                terminationMethod =
                                    "fix" === sessionStorage.getItem("domain") && void 0 !== currentOption.terminationMethod && "DEFERRED_END_OF_MONTH" === currentOption.terminationMethod ? periodNotice[0].texts[currentLang] + "<br/>" : "",
                                activationDate = "fix" === sessionStorage.getItem("domain") && void 0 !== currentOption.activationTime ? dateToDateObjectTrim(currentOption.activationTime) + "<br/>" : "",
                                removalDate = "fix" === sessionStorage.getItem("domain") && void 0 !== currentOption.requestRemovalDate ? dateToDateObjectTrim(currentOption.requestRemovalDate) : "",
                                pkgName = currentName.length ? currentName[0].texts[currentLang] : "",
                                pkgDesc = currentDescription.length ? currentDescription[0].texts[currentLang] : "",
                                currentFormContainer = "",
                                currentAction = "",
                                additionalInfo = "";
                            if (void 0 !== currentOption.attributesInfos && currentOption.attributesInfos.length)
                                for (var iInfo = 0; iInfo < currentOption.attributesInfos.length; iInfo++) {
                                    var currentInfo = currentOption.attributesInfos[iInfo];
                                    if ("insurance_policy_no" === currentInfo.code) additionalInfo = currentInfo.name[currentLang] + " " + currentInfo.value;
                                }
                            if (false === currentOption.installed)
                                if (true === currentOption.addable)
                                    if (void 0 !== oStatus && "add" === oStatus.status.action && "success" === oStatus.status.result && oStatus.optionCode === currentOption.code)
                                        currentAction += '<p id="valid' + oStatus.id + oStatus.optionCode + '" class="valid space-bottom--thin" tabindex="-1">' + $.i18n("subscription.option.added") + "</p>";
                                    else if (void 0 !== oStatus && "remove" === oStatus.status.action && "success" === oStatus.status.result && oStatus.optionCode === currentOption.code) {
                                        currentAction += '<p id="valid' + oStatus.id + oStatus.optionCode + '" class="valid space-bottom--thin" tabindex="-1">' + $.i18n("subscription.option.removed") + "</p>";
                                        currentAction +=
                                            '<button class="btn btn--secondary-reversed btn--action action__add" data-name="' +
                                            pkgName +
                                            '" aria-label="' +
                                            $.i18n("subscription.option.add") +
                                            " " +
                                            pkgName +
                                            '" data-code="' +
                                            currentOption.code +
                                            '">                                            <svg aria-hidden="true" focusable="false" class="add">                                                <use xlink:href="#add"></use>                                            </svg>' +
                                            $.i18n("subscription.option.add") +
                                            "                                        </button>";
                                    } else
                                        currentAction +=
                                            '<button class="btn btn--secondary-reversed btn--action action__add" data-name="' +
                                            pkgName +
                                            '" aria-label="' +
                                            $.i18n("subscription.option.add") +
                                            " " +
                                            pkgName +
                                            '" data-code="' +
                                            currentOption.code +
                                            '">                                        <svg aria-hidden="true" focusable="false" class="add">                                            <use xlink:href="#add"></use>                                        </svg>' +
                                            $.i18n("subscription.option.add") +
                                            "                                    </button>";
                                else if (true === currentOption.upgradable)
                                    currentAction +=
                                        '<button class="btn btn--secondary-reversed btn--action action__upgrade" data-name="' +
                                        pkgName +
                                        '" aria-label="' +
                                        $.i18n("subscription.option.add") +
                                        " " +
                                        pkgName +
                                        '" data-code="' +
                                        currentOption.code +
                                        '">                                        <svg aria-hidden="true" focusable="false" class="swap">                                            <use xlink:href="#swap"></use>                                        </svg>' +
                                        $.i18n("utils.labels.upgrade") +
                                        "                                    </button>";
                                else {
                                    if (true === currentOption.removable)
                                        if (void 0 !== oStatus && "remove" !== oStatus.status.action && "success" === oStatus.status.result && oStatus.optionCode === currentOption.code)
                                            currentAction +=
                                                '<button class="btn btn--action action__remove space-left" data-name="' +
                                                pkgName +
                                                '" aria-label="' +
                                                $.i18n("subscription.option.remove") +
                                                " " +
                                                pkgName +
                                                '" data-code="' +
                                                currentOption.code +
                                                '">                                            <svg aria-hidden="true" focusable="false" class="delete">                                                <use xlink:href="#delete"></use>                                            </svg>' +
                                                $.i18n("subscription.option.remove") +
                                                "                                        </button>";
                                    if (1 === result.families[iFamily].limitPackages)
                                        warningLimit =
                                            '<p class="info-sub info-sub--option">                                            <svg aria-hidden="true" focusable="false" class="info">                                                <use xlink:href="#info"></use>                                            </svg>' +
                                            $.i18n("subscription.option.limit_package_" + BRAND.name) +
                                            "                                        </p>";
                                }
                            else if (currentOption.configurationKey) {
                                currentAction +=
                                    '<button class="btn btn--action action__configure" data-name="' +
                                    pkgName +
                                    '" aria-label="' +
                                    $.i18n("subscription.option.configure") +
                                    " " +
                                    pkgName +
                                    '" data-code="' +
                                    currentOption.code +
                                    '">                                    <svg aria-hidden="true" focusable="false" class="edit">                                            <use xlink:href="#edit"></use>                                        </svg>' +
                                    $.i18n("subscription.option.configure") +
                                    "                                </button>";
                                currentFormContainer = '<div id="' + currentOption.code + '" class="configurable-option"></div>';
                                if (true === currentOption.removable) {
                                    if (void 0 !== oStatus && "add" === oStatus.status.action && "success" === oStatus.status.result && oStatus.optionCode === currentOption.code)
                                        currentAction += '<p id="valid' + oStatus.id + oStatus.optionCode + '" class="valid space-bottom--thin" tabindex="-1">' + $.i18n("subscription.option.added") + "</p>";
                                    else if (void 0 !== oStatus && "remove" === oStatus.status.action && "success" === oStatus.status.result && oStatus.optionCode === currentOption.code)
                                        currentAction += '<p id="valid' + oStatus.id + oStatus.optionCode + '" class="valid space-bottom--thin" tabindex="-1">' + $.i18n("subscription.option.removed") + "</p>";
                                    currentAction +=
                                        '<button class="btn btn--action action__remove space-left" data-name="' +
                                        pkgName +
                                        '" aria-label="' +
                                        $.i18n("subscription.option.remove") +
                                        " " +
                                        pkgName +
                                        '" data-code="' +
                                        currentOption.code +
                                        '">                                            <svg aria-hidden="true" focusable="false" class="delete">                                                <use xlink:href="#delete"></use>                                            </svg>' +
                                        $.i18n("subscription.option.remove") +
                                        "                                        </button>";
                                }
                            } else if (true === currentOption.removable)
                                if (void 0 !== oStatus && "add" === oStatus.status.action && "success" === oStatus.status.result && oStatus.optionCode === currentOption.code) {
                                    currentAction += '<p id="valid' + oStatus.id + oStatus.optionCode + '" class="valid space-bottom--thin" tabindex="-1">' + $.i18n("subscription.option.added") + "</p>";
                                    currentAction +=
                                        '<button class="btn btn--action action__remove" data-name="' +
                                        pkgName +
                                        '" aria-label="' +
                                        $.i18n("subscription.option.remove") +
                                        " " +
                                        pkgName +
                                        '" data-code="' +
                                        currentOption.code +
                                        '" data-removal-date="' +
                                        currentOption.firstRemovalDate +
                                        '">                                            <svg aria-hidden="true" focusable="false" class="delete">                                                <use xlink:href="#delete"></use>                                            </svg>' +
                                        $.i18n("subscription.option.remove") +
                                        "                                        </button>";
                                } else if (void 0 !== oStatus && "remove" === oStatus.status.action && "success" === oStatus.status.result && oStatus.optionCode === currentOption.code)
                                    currentAction += '<p id="valid' + oStatus.id + oStatus.optionCode + '" class="valid space-bottom--thin" tabindex="-1">' + $.i18n("subscription.option.removed") + "</p>";
                                else
                                    currentAction +=
                                        '<button class="btn btn--action action__remove" data-name="' +
                                        pkgName +
                                        '" aria-label="' +
                                        $.i18n("subscription.option.remove") +
                                        " " +
                                        pkgName +
                                        '" data-code="' +
                                        currentOption.code +
                                        '" data-removal-date="' +
                                        currentOption.firstRemovalDate +
                                        '">                                        <svg aria-hidden="true" focusable="false" class="delete">                                            <use xlink:href="#delete"></use>                                        </svg>' +
                                        $.i18n("subscription.option.remove") +
                                        "                                    </button>";
                            else if (void 0 !== currentOption.removeAt) {
                                let cleanDate = dateToDateObjectTrim(currentOption.removeAt);
                                currentAction += '<p class="checked">' + $.i18n("subscription.option.removedAt", dateWSToRealDate(cleanDate)) + "</p>";
                            } else if ("" !== removalDate) currentAction += '<p class="checked">' + $.i18n("subscription.option.removedAt", dateWSToRealDate(removalDate)) + "</p>";
                            else currentAction += '<p class="checked">' + $.i18n("subscription.option.included") + "</p>";
                            if ("" !== activationDate) activationDate = $.i18n("subscription.option.option_active_since", dateWSToRealDate(activationDate));
                            optionItem +=
                                '<div class="highlight highlight--option">                            <div class="flex flex--last-right">                                <h3 class="highlight__title one-quarter">                                    ' +
                                pkgName +
                                " <br>                                    " +
                                currentPrice +
                                "                                    <span>" +
                                additionalInfo +
                                '</span>                                </h3>                                <p class="highlight__description one-third">                                ' +
                                terminationMethod +
                                activationDate +
                                pkgDesc +
                                '                                </p>                                <div class="one-third action">                                    ' +
                                currentAction +
                                "                                </div>                                " +
                                warningLimit +
                                "                            </div>                            " +
                                currentFormContainer +
                                "                        </div>";
                        }
                    }
                    optionItem += "</div>";
                }
                optionsContainer.html(optionItem).fadeIn();
                if (void 0 !== oStatus && "success" === oStatus.status) $("#valid" + oStatus.id + oStatus.optionCode).focus();
                resolve(result);
            } else {
                optionsContainer.html("<p>" + $.i18n("utils.labels.no_result") + "</p>").fadeIn();
                resolve("success");
            }
        }).fail(function () {
            displayMessageAfterSubmit(subOptionError, null, "", $.i18n("utils.technical_error"));
            reject("get options failed");
        });
    });
}
function getRecurringAPI(subId, paymentType) {
    var planDetail = $("#planDetail"),
        planName = $("#planName"),
        planPriceContainer = $("#planPriceContainer"),
        planPrice = $("#planPrice"),
        planDesc = $("#planDesc"),
        planItems = $("#planItems"),
        displayPlanDetail = $("#displayPlanDetail"),
        subOverviewError = $("#subOverviewError");
    planPriceContainer.remove();
    callback = "mobile" === sessionStorage.getItem("domain") ? getRecurring : getFixRecurring;
    callback(subId)
        .done(function (result) {
            var currentLanguage = setDefaultLang();
            if (null !== result) {
                var itemList = "";
                if ("fix" === sessionStorage.getItem("domain"))
                    $("#pricePlanFix")
                        .text((result.totalAmount / 100).toFixed(2) + " ")
                        .removeClass("hidden");
                if (result.description) {
                    var desc = result.description[currentLanguage];
                    planDesc.html(desc).removeClass("hidden");
                } else planDesc.addClass("hidden");
                planName.text(result.items[0].name[currentLanguage]);
                for (var iItem = 0; iItem < result.items.length; iItem++) {
                    var itemLabel = void 0 !== result.items[iItem].name && !$.isEmptyObject(result.items[iItem].name) ? result.items[iItem].name[currentLanguage] : $.i18n("subscription.detail." + result.items[iItem].type);
                    var itemAmount = void 0 !== result.items[iItem].amount ? ", CHF " + (result.items[iItem].amount / 100).toFixed(2) : "";
                    itemList += "<li>" + itemLabel + itemAmount + "</li>";
                }
                planItems.html(itemList);
                displayPlanDetail.show().addClass("btn");
            }
            dropdownToggle(displayPlanDetail, planDetail, false);
        })
        .fail(function () {
            planDetail.hide();
            displayPlanDetail.hide().removeClass("btn");
            displayMessageAfterSubmit(subOverviewError, null, "", $.i18n("utils.technical_error"));
        });
}
function postAccessories(errorContainer, validContainer, currentForm, submitCurrentForm, customerID, payload) {
    if ("fix" === sessionStorage.getItem("domain")) return postFixAccessoriesAPI(errorContainer, validContainer, currentForm, submitCurrentForm, customerID, payload);
}
function postFixAccessoriesAPI(errorContainer, validContainer, currentForm, submitCurrentForm, customerID, payload) {
    return new Promise(function (resolve, reject) {
        postFixAccessories(customerID, payload)
            .done(function () {
                currentForm.removeClass("loading");
                displayMessageAfterEdit(validContainer, currentForm, submitCurrentForm, "big-edit", $.i18n("utils.valid.accessory_ordered"), false);
                resolve();
            })
            .fail(function (result) {
                currentForm.removeClass("loading");
                displayMessageAfterEdit(errorContainer, currentForm, submitCurrentForm, "big-edit", $.i18n("utils.technical_error"), true);
                reject("post accessory failed");
            });
    });
}
function postOptionsAPI(id, optionCode) {
    let cb,
        payload = { code: optionCode };
    if ("fix" === sessionStorage.getItem("domain")) cb = postFixOptions(id, JSON.stringify(payload));
    else cb = postMobileOptions(id, JSON.stringify(payload));
    return new Promise(function (resolve, reject) {
        cb.done(function () {
            resolve("success");
        }).fail(function (result) {
            reject(result.responseJSON.errorCode);
        });
    });
}
function removeOptionsAPI(id, optionCode, removalDate) {
    let cb,
        subOptionError = $("#subOptionError"),
        payload = { code: optionCode };
    if ("fix" === sessionStorage.getItem("domain")) {
        cb = removeFixOptions;
        payload.removalDate = removalDate;
    } else cb = removeMobileOptions;
    return new Promise(function (resolve, reject) {
        cb(id, JSON.stringify(payload))
            .done(function () {
                resolve("success");
            })
            .fail(function (result) {
                displayMessageAfterSubmit(subOptionError, null, "", $.i18n("utils.technical_error"));
                reject(result);
            });
    });
}
function cancelMobileDiscount(customerID, messageContainerError, messageContainerValid, resultMobileDiscount) {
    var cancelHotp = $("#cancelHotp"),
        mobileDiscount = $("#mobileDiscount");
    if (cancelHotp.length)
        cancelHotp.off("click").on("click", function () {
            var payload = { id: sessionStorage.getItem("hotpTid") };
            postCancelMobileDiscount(customerID, JSON.stringify(payload))
                .done(function (result) {
                    if (resultMobileDiscount)
                        loadDiscountActivated().then(function (resultDiscountActivated) {
                            if ("success" === resultDiscountActivated) {
                                var amountDiscount = (resultMobileDiscount.amount / 100).toFixed(2),
                                    currentMsisdn = $("#currentMsisdn"),
                                    currentDiscount = $("#currentDiscount"),
                                    discountTitle = $("#discountTitle");
                                currentDiscount.text(amountDiscount + " CHF");
                                currentMsisdn.text(prettifyPhoneNumber(resultMobileDiscount.msisdn));
                                discountTitle.text($.i18n("subscription.mobile_discount.benefit") + " " + amountDiscount + " CHF " + $.i18n("subscription.mobile_discount.discount"));
                                deleteCurrentMobileDiscount(customerID, messageContainerError, messageContainerValid);
                                updateMobilePhone(customerID, messageContainerError, messageContainerValid, resultMobileDiscount);
                            }
                        });
                    else
                        loadStartMobileDiscount().then(function (resultLoadStart) {
                            if ("success" === resultLoadStart) {
                                $("#submitMsisdn").removeAttr("disabled");
                                startMobileDiscount(customerID, messageContainerError, messageContainerValid);
                            }
                        });
                })
                .fail(function (result) {
                    if (resultMobileDiscount)
                        loadDiscountActivated().then(function (resultDiscountActivated) {
                            if ("success" === resultDiscountActivated) {
                                displayMessageAfterEdit(messageContainerError, mobileDiscount, $("#submitMsisdn"), "big-edit", $.i18n("utils.error.summary_error_" + BRAND.name), true);
                                var amountDiscount = (resultMobileDiscount.amount / 100).toFixed(2),
                                    currentMsisdn = $("#currentMsisdn"),
                                    currentDiscount = $("#currentDiscount"),
                                    discountTitle = $("#discountTitle");
                                currentDiscount.text(amountDiscount + " CHF");
                                currentMsisdn.text(prettifyPhoneNumber(resultMobileDiscount.msisdn));
                                discountTitle.text($.i18n("subscription.mobile_discount.benefit") + " " + amountDiscount + " CHF " + $.i18n("subscription.mobile_discount.discount"));
                                deleteCurrentMobileDiscount(customerID, messageContainerError, messageContainerValid);
                                updateMobilePhone(customerID, messageContainerError, messageContainerValid, resultMobileDiscount);
                            }
                        });
                    else
                        loadStartMobileDiscount().then(function (resultLoadStart) {
                            if ("success" === resultLoadStart) {
                                displayMessageAfterEdit(messageContainerValid, mobileDiscount, $("#submitMsisdn"), "big-edit", $.i18n("utils.error.summary_error_" + BRAND.name), true);
                                $("#submitMsisdn").removeAttr("disabled");
                                startMobileDiscount(customerID, messageContainerError, messageContainerValid);
                            }
                        });
                });
        });
}
function deleteCurrentMobileDiscount(customerID, messageContainerError, messageContainerValid) {
    var deleteDiscount = $("#deleteDiscount"),
        submitMsisdn = $("#submitMsisdn"),
        discountTitle = $("#discountTitle"),
        discountActivated = $("#discountActivated"),
        mobileDiscount = $("#mobileDiscount");
    if (deleteDiscount.length)
        deleteDiscount.off("click").on("click", function () {
            deleteMobileDiscount(customerID)
                .done(function (result) {
                    discountTitle.text($.i18n("subscription.mobile_discount.title"));
                    discountActivated.addClass("hidden");
                    submitMsisdn.removeAttr("disabled");
                    displayMessageAfterEdit(messageContainerValid, mobileDiscount, null, "big-edit", $.i18n("utils.valid.summary_removed"), false, reloadGetMobileDiscount);
                })
                .fail(function (result) {
                    displayMessageAfterEdit(messageContainerError, mobileDiscount, null, "big-edit", $.i18n("utils.error.summary_error_" + BRAND.name), true);
                });
        });
}
function reloadGetMobileDiscount() {
    var customerID = sessionStorage.getItem("subid"),
        messageContainerError = $("#messageContainerError"),
        messageContainerValid = $("#messageContainerValid");
    getMobileDiscountAPI(customerID, messageContainerError, messageContainerValid);
}
function endMobileDiscount(customerID, messageContainerError, messageContainerValid) {
    var hotp = $("#hotp"),
        hotpForm = $("#hotpForm"),
        submitHotp = $("#submitHotp");
    hotpForm.off("submit").on("submit", function (event) {
        event.preventDefault();
        if (validateForm(hotpForm, submitHotp)) {
            var payload = { code: hotp.val(), id: sessionStorage.getItem("hotpTid") };
            postHOTPMobileDiscount(customerID, JSON.stringify(payload))
                .done(function (result) {
                    getMobileDiscountAPI(customerID, messageContainerError, messageContainerValid);
                    displayMessageAfterEdit(messageContainerValid, hotpForm, submitHotp, "big-edit", $.i18n("utils.valid.summary_success"), false);
                })
                .fail(function (result) {
                    hotpForm.addClass("hidden");
                    switch (result.responseJSON.errorCode) {
                        case "WRONG_HOTP_CODE":
                        case "EXPIRED":
                            displayMessageAfterEdit(messageContainerError, hotpForm, submitHotp, "big-edit", $.i18n("utils.error.wrong_hotp"), true, void 0, true);
                            break;
                        default:
                            displayMessageAfterEdit(messageContainerError, hotpForm, submitHotp, "big-edit", $.i18n("utils.error.summary_error_" + BRAND.name), true, void 0, true);
                            break;
                    }
                });
        }
    });
}
function getMobileDiscountAPI(customerID, messageContainerError, messageContainerValid) {
    var mobileDiscountContent = $("#mobileDiscountContent"),
        mobileDiscount = $("#mobileDiscount"),
        discountTitle = $("#discountTitle");
    getMobileDiscount(customerID)
        .done(function (result) {
            if (result.msisdn)
                loadDiscountActivated().then(function (resultDiscountActivated) {
                    if ("success" === resultDiscountActivated) {
                        var amountDiscount = (result.amount / 100).toFixed(2),
                            currentMsisdn = $("#currentMsisdn"),
                            currentDiscount = $("#currentDiscount");
                        currentDiscount.text(amountDiscount + " CHF");
                        currentMsisdn.text(prettifyPhoneNumber(result.msisdn));
                        discountTitle.text($.i18n("subscription.mobile_discount.benefit") + " " + amountDiscount + " CHF " + $.i18n("subscription.mobile_discount.discount"));
                        deleteCurrentMobileDiscount(customerID, messageContainerError, messageContainerValid);
                        updateMobilePhone(customerID, messageContainerError, messageContainerValid, result);
                    }
                });
            else
                loadStartMobileDiscount().then(function (resultLoadStart) {
                    if ("success" === resultLoadStart) startMobileDiscount(customerID, messageContainerError, messageContainerValid);
                });
            mobileDiscountContent.fadeIn();
        })
        .fail(function (result) {
            mobileDiscountContent.fadeIn();
            displayMessageAfterEdit(messageContainerError, mobileDiscount, submitMsisdn, "big-edit", $.i18n("utils.error.summary_error_" + BRAND.name), true);
        });
}
function getNewHOTP(customerID, messageContainerError, messageContainerValid) {
    var newHotp = $("#newHotp"),
        hotpForm = $("#hotpForm");
    if (newHotp.length)
        newHotp.off("click").on("click", function () {
            var payload = { id: sessionStorage.getItem("hotpTid"), language: setDefaultLang() };
            postResendHOTP(customerID, JSON.stringify(payload))
                .done(function (result) {
                    hotpForm.addClass("hidden");
                    displayMessageAfterEdit(messageContainerValid, hotpForm, newHotp, "big-edit", $.i18n("utils.valid.new_code_sent"), false, void 0, true);
                })
                .fail(function (result) {
                    hotpForm.addClass("hidden");
                    switch (result.responseJSON.errorCode) {
                        case "WRONG_HOTP_CODE":
                        case "EXPIRED":
                            displayMessageAfterEdit(messageContainerError, hotpForm, newHotp, "big-edit", $.i18n("utils.error.wrong_hotp"), true, void 0, true);
                            break;
                        default:
                            displayMessageAfterEdit(messageContainerError, hotpForm, newHotp, "big-edit", $.i18n("utils.error.summary_error_" + BRAND.name), true, void 0, true);
                            break;
                    }
                });
        });
}
function startMobileDiscount(customerID, messageContainerError, messageContainerValid, resultMobileDiscount) {
    var msisdn = $("#msisdn"),
        mobileDiscount = $("#mobileDiscount"),
        submitMsisdn = $("#submitMsisdn"),
        transactionId = null;
    mobileDiscount.off("submit").on("submit", function (event) {
        event.preventDefault();
        if (validateForm(mobileDiscount, submitMsisdn)) {
            var payload = { msisdn: msisdn.attr("data-number"), language: setDefaultLang() };
            postMobileDiscount(customerID, JSON.stringify(payload))
                .done(function (result) {
                    transactionId = result.id;
                    sessionStorage.setItem("hotpTid", transactionId),
                        loadHotpForm().then(function () {
                            var hotp = $("#hotp"),
                                amountInfo = $("#amountInfo");
                            amountInfo.text($.i18n("subscription.mobile_discount.amount_info", (result.amount / 100).toFixed(2)));
                            hotp.focus();
                            hotp.on("keydown", function (event) {
                                numberOnly(event);
                            });
                            endMobileDiscount(customerID, messageContainerError, messageContainerValid);
                            getNewHOTP(customerID, messageContainerError, messageContainerValid);
                            cancelMobileDiscount(customerID, messageContainerError, messageContainerValid, resultMobileDiscount);
                        });
                })
                .fail(function (result) {
                    mobileDiscount.addClass("hidden");
                    switch (result.responseJSON.errorCode) {
                        case "BAD_MSISDN_FORMAT":
                        case "INVALID_MSISDN":
                            displayMessageAfterEdit(messageContainerError, mobileDiscount, submitMsisdn, "big-edit", $.i18n("utils.error.msisdn_invalid"), true);
                            break;
                        case "MSISDN_ALREADY_USED":
                            displayMessageAfterEdit(messageContainerError, mobileDiscount, submitMsisdn, "big-edit", $.i18n("utils.error.msisdn_already_used"), true);
                            break;
                        default:
                            displayMessageAfterEdit(messageContainerError, mobileDiscount, submitMsisdn, "big-edit", $.i18n("utils.error.summary_error_" + BRAND.name), true);
                            break;
                    }
                });
        }
    });
}
function updateMobilePhone(customerID, messageContainerError, messageContainerValid, resultMobileDiscount) {
    var updateNumber = $("#updateNumber");
    if (updateNumber.length)
        updateNumber.off("click").on("click", function () {
            loadStartMobileDiscount().then(function (resultLoadStart) {
                if ("success" === resultLoadStart) {
                    $("#submitMsisdn").removeAttr("disabled");
                    $("#hotpPhone").i18n();
                    startMobileDiscount(customerID, messageContainerError, messageContainerValid, resultMobileDiscount);
                }
            });
        });
}
function buildFnpAPI(aCustomerDetails, customerID, messageContainer) {
    return new Promise(function (resolve, reject) {
        var customer = aCustomerDetails[0],
            customerAddress = customer.address,
            ownerLine = $("#ownerLine"),
            payload = {
                contact: {
                    firstname: ownerLine.is("checked") ? $("#ownerFirstname").val().trim() : customer.firstname,
                    lastname: ownerLine.is("checked") ? $("#ownerLastname").val().trim() : customer.lastname,
                    street: customerAddress.street,
                    house: customerAddress.house,
                    city: customerAddress.city,
                    zipcode: customerAddress.zipcode,
                    companyName: "",
                },
                contactChanged: $("#ownerLine").is("checked"),
                priority: "NORMAL",
                wishDate: new Date().toISOString(),
                companyName: "",
                currentOperator: $("#currentOperator option:selected").text().trim(),
                acceptPenalties: false,
                accountType: "FIX",
                donorAccountType: "FIX",
                donorId: $("#currentOperator").val().trim(),
                keepOldNumbers: false,
                stay: true,
                transferedNumber: $("#currentNumber").attr("data-number").trim(),
                temporaryNumber: "",
            };
        buildFnp(customerID, JSON.stringify(payload)).fail(function (result) {
            if (result.responseJSON) {
                $("#portinStep").removeClass("loading");
                switch (result.responseJSON.errorCode) {
                    case "BAD_TRANSFEREDNUMBER_FORMAT":
                        displayMessageAfterSubmit(messageContainer, null, "", $.i18n("utils.error.bad_transferednumber_format"));
                        break;
                    default:
                        displayMessageAfterSubmit(messageContainer, null, "", $.i18n("utils.technical_error"));
                        break;
                }
            } else if (200 === result.status) resolve("success");
        });
    });
}
function getFnpAPI(customerID, messageContainer) {
    return new Promise(function (resolve, reject) {
        getFnp(customerID)
            .done(function (resultPDF) {
                resolve(resultPDF);
            })
            .fail(function () {
                displayMessageAfterSubmit(messageContainer, null, "", $.i18n("utils.technical_error"));
            });
    });
}
function getOperatorBrandsAPI(messageContainer) {
    return new Promise(function (resolve, reject) {
        getOperatorBrands()
            .done(function (result) {
                var operatorBrand = "",
                    operatorList = alphaOrder(result);
                for (var iOperator = 0; iOperator < operatorList.length; iOperator++)
                    operatorBrand += '<option value="' + operatorList[iOperator].code + '" name="' + operatorList[iOperator].name + '">                    ' + operatorList[iOperator].name + "                </option>";
                if ($("#currentOperator").length) {
                    $("#currentOperator").append(operatorBrand);
                    resolve("success");
                }
            })
            .fail(function () {
                displayMessageAfterSubmit(messageContainer, null, "", $.i18n("utils.technical_error"));
                reject("get operator brand failed");
            });
    });
}
function getPortinStatusAPI(id, messageContainer) {
    return new Promise(function (resolve, reject) {
        getPortinStatus(id, sessionStorage.getItem("domain"))
            .done(function (result) {
                resolve(result);
            })
            .fail(function () {
                displayMessageAfterSubmit(messageContainer, null, "", $.i18n("utils.technical_error"));
            });
    });
}
function getVoipFeaturesAPI(customerID, voipNumber) {
    return new Promise(function (resolve, reject) {
        var subFixTelError = $("#subFixTelError");
        getVoipFeatures(customerID, voipNumber)
            .done(function (result) {
                resolve(result);
            })
            .fail(function (result) {
                if (result)
                    if ("GET_TELEPHONY_STATUS_ERROR" === result.responseJSON.errorCode) {
                        displayMessageAfterSubmit(subFixTelError, null, "", $.i18n("utils.errors.get_voip_features_failed"));
                        reject("get voip features failed");
                    } else if ("TELEPHONY_STATUS_NOT_FOUND" === result.responseJSON.errorCode) reject("get voip features failed");
                    else {
                        displayMessageAfterSubmit(subFixTelError, null, "", $.i18n("utils.technical_error"));
                        reject("get voip features failed");
                    }
                else {
                    displayMessageAfterSubmit(subFixTelError, null, "", $.i18n("utils.technical_error"));
                    reject("get voip features failed");
                }
            });
    });
}
function postSipPwdAPI(customerID, voipNumber) {
    return new Promise(function (resolve, reject) {
        var sipForm = $("#sipForm"),
            sipEdit = $("#sipEdit"),
            newSipForm = $("#newSipForm"),
            newSipPwd = $("#newSipPwd"),
            sipSubmit = $("#sipSubmit"),
            sipError = $("#sipError"),
            sipValid = $("#sipValid");
        newSipForm
            .on("submit", function (event) {
                event.preventDefault();
                if (validateForm(newSipForm, sipSubmit)) {
                    var encodedNewPwd = $.base64.btoa(newSipPwd.val(), true);
                    var payload = { newPassword: encodedNewPwd, phoneNumber: voipNumber };
                    postSipPwd(customerID, JSON.stringify(payload))
                        .done(function () {
                            displayMessageAfterEdit(sipValid, newSipForm, sipSubmit, "inline-edit", $.i18n("utils.valid.sip_update_ongoing"), false);
                            resolve();
                        })
                        .fail(function (result) {
                            if (result.responseJSON)
                                if ("MISSING_PARAMETER" === result.responseJSON.errorCode) {
                                    displayMessageAfterEdit(sipError, newSipForm, sipSubmit, "inline-edit", $.i18n("utils.error.missing_parameter"), true);
                                    reject("post sip password failed");
                                } else if ("BAD_PASSWORD_FORMAT" === result.responseJSON.errorCode) {
                                    displayMessageAfterEdit(sipError, newSipForm, sipSubmit, "inline-edit", $.i18n("utils.error.bad_password_format"), true);
                                    reject("post sip password failed");
                                } else {
                                    displayMessageAfterEdit(sipError, newSipForm, sipSubmit, "big-edit", $.i18n("utils.technical_error"), true);
                                    reject("post sip password failed");
                                }
                            else {
                                displayMessageAfterEdit(sipError, newSipForm, sipSubmit, "big-edit", $.i18n("utils.technical_error"), true);
                                reject("post sip password failed");
                            }
                        });
                }
            })
            .on("reset", function (event) {
                event.preventDefault();
                sipForm.hide();
                sipEdit.show().attr("aria-expanded", false).focus();
            });
    });
}
function postVoipFeatureAPI(customerID) {
    var voipForm = $(".voipForm"),
        featuresError = $("#featuresError"),
        callback = "",
        payload = "";
    voipForm.on("submit", function (event) {
        voipForm = $(this);
        event.preventDefault();
        if (validateForm(voipForm, voipForm.find(".submitVoip"))) {
            var cleanCFUNb = $("#phoneCFU").val().trim();
            var cleanCFBNb = $("#phoneCFB").val().trim();
            var cleanCFNRNb = $("#phoneCFNR").val().trim();
            var cleanVoipNb = voipForm.attr("data-voip-num").replace("+", "");
            payload = { voipNumber: cleanVoipNb, feature: voipForm.attr("data-feature").trim() };
            if (voipForm.find('input[name^="activation"]').is(":checked")) {
                callback = postEnableVoipFeatures;
                switch (voipForm.attr("data-feature")) {
                    case "CFNR":
                        payload.cfnr_timeout = $("#timeoutCFNR").val().trim();
                        payload.cfnr_number = cleanCFNRNb;
                        break;
                    case "CFB":
                        payload.cfb_number = cleanCFBNb;
                        break;
                    case "CFU":
                        payload.cfu_number = cleanCFUNb;
                        break;
                }
            } else callback = postDisableVoipFeatures;
            callback(customerID, JSON.stringify(payload))
                .done(function () {
                    voipForm.find('[id^="status"]').text($.i18n("utils.valid.update")).addClass("valid").removeClass("hidden");
                })
                .fail(function (result) {
                    displayMessageAfterSubmit(featuresError, voipForm.find(".submitVoip"), "", $.i18n("utils.technical_error"));
                    if (result && result.responseJSON.errorCode);
                    else displayMessageAfterSubmit(featuresError, voipForm.find(".submitVoip"), "", $.i18n("utils.technical_error"));
                });
        }
    });
}
function sendFnpAPI(customerID, formData, messageContainer, submitButton) {
    return new Promise(function (resolve, reject) {
        sendFnp(customerID, formData)
            .done(function () {
                messageContainer.hide();
                resolve("success");
            })
            .fail(function (result) {
                if (result.responseJSON) {
                    $("#fnpStep").removeClass("loading");
                    switch (result.responseJSON.errorCode) {
                        case "FILE_SIZE_REACHED":
                            displayMessageAfterSubmit(messageContainer, submitButton, "", $.i18n("utils.error.file_size_reached"));
                            break;
                        case "WRONG_FILE_TYPE":
                            displayMessageAfterSubmit(messageContainer, submitButton, "", $.i18n("utils.error.wrong_file_type"));
                            break;
                        default:
                            displayMessageAfterSubmit(messageContainer, submitButton, "", $.i18n("utils.technical_error"));
                            break;
                    }
                } else if (200 === result.status) {
                    messageContainer.hide();
                    resolve("success");
                }
            });
    });
}
function sendPortinAPI(customerID, domain, portinId, formData, messageContainer, submitButton) {
    return new Promise(function (resolve, reject) {
        sendPortin(customerID, domain, portinId, formData)
            .done(function () {
                messageContainer.hide();
                resolve("success");
            })
            .fail(function (result) {
                if (result.responseJSON) {
                    $("#portinStep").removeClass("loading");
                    switch (result.responseJSON.errorCode) {
                        case "FILE_SIZE_REACHED":
                            displayMessageAfterSubmit(messageContainer, submitButton, "", $.i18n("utils.error.file_size_reached"));
                            break;
                        case "WRONG_FILE_TYPE":
                            displayMessageAfterSubmit(messageContainer, submitButton, "", $.i18n("utils.error.wrong_file_type"));
                            break;
                        default:
                            displayMessageAfterSubmit(messageContainer, submitButton, "", $.i18n("utils.technical_error"));
                            break;
                    }
                } else if (200 === result.status) {
                    messageContainer.hide();
                    resolve("success");
                }
            });
    });
}
function changeTvCredential(editBtn, tvCredentialEditValid, tvCredentialEditError, credentialForm, submitBtn, callback) {
    credentialForm
        .off("submit")
        .on("submit", function (event) {
            event.preventDefault();
            if (validateForm(credentialForm, submitBtn)) {
                credentialForm.hide();
                editBtn.attr("aria-expanded", "false");
                if ($("#confirmNewTvLogin").length && "" !== $("#confirmNewTvLogin").val()) postTVLoginAPI(tvCredentialEditValid, tvCredentialEditError, credentialForm, submitBtn);
                if ($("#confirmNewTvPwd").length && "" !== $("#confirmNewTvPwd").val()) postTVPwdAPI(tvCredentialEditValid, tvCredentialEditError, credentialForm, submitBtn);
            }
        })
        .off("reset")
        .on("reset", function (event) {
            event.preventDefault();
            credentialForm.hide();
            editBtn.attr("aria-expanded", "false").focus();
        });
}
function getTvLoginAPI(customerID) {
    return new Promise(function (resolve, reject) {
        getTvLogin(customerID)
            .done(function (result) {
                let tvInfo = JSON.stringify(result);
                sessionStorage.setItem("tvInfo", tvInfo);
                resolve();
            })
            .fail(function (result) {
                $("#credentialForm").hide();
                errorTVCredential(result, $("#tvCredentialEditError"), $("#credentialForm"), null);
            });
    });
}
function postActivatePinPurchaseAPI(tvCredentialEditValid, tvCredentialEditError, credentialForm, submitBtn, purchaseStatus) {
    return new Promise(function (resolve, reject) {
        var payload = { purchase_request_control: purchaseStatus };
        postTVActivatePinPurchase(sessionStorage.getItem("subid"), JSON.stringify(payload))
            .done(function () {
                if (null !== credentialForm) credentialForm.removeClass("loading").hide();
                displayMessageAfterEdit(tvCredentialEditValid, credentialForm, submitBtn, "big-edit", $.i18n("utils.valid.update_success"), false);
                resolve();
            })
            .fail(function (result) {
                if (null !== credentialForm) credentialForm.removeClass("loading").hide();
                errorTVCredential(result, tvCredentialEditError, credentialForm, submitBtn);
                reject();
            });
    });
}
function postTVLoginAPI(tvCredentialEditValid, tvCredentialEditError, credentialForm, submitBtn) {
    var payload = { login: $("#confirmNewTvLogin").val().trim() };
    postTVLogin(sessionStorage.getItem("subid"), JSON.stringify(payload))
        .done(function () {
            credentialForm.removeClass("loading").hide();
            displayMessageAfterEdit(tvCredentialEditValid, credentialForm, submitBtn, "big-edit", $.i18n("utils.valid.update_success"), false);
        })
        .fail(function (result) {
            credentialForm.removeClass("loading").hide();
            errorTVCredential(result, tvCredentialEditError, credentialForm, submitBtn);
        });
}
function postTVPinPurchaseAPI(tvCredentialEditValid, tvCredentialEditError, credentialForm, submitBtn, pinCode) {
    var payload = { pin: pinCode };
    postTVPinPurchase(sessionStorage.getItem("subid"), JSON.stringify(payload))
        .done(function () {
            credentialForm.removeClass("loading").hide();
            displayMessageAfterEdit(tvCredentialEditValid, credentialForm, submitBtn, "big-edit", $.i18n("utils.valid.update_success"), false);
        })
        .fail(function (result) {
            credentialForm.removeClass("loading").hide();
            errorTVCredential(result, tvCredentialEditError, credentialForm, submitBtn);
        });
}
function postTVPinYouthAPI(tvCredentialEditValid, tvCredentialEditError, credentialForm, submitBtn, pinCode) {
    var payload = { pin_youth_protection: pinCode };
    postTVPinYouth(sessionStorage.getItem("subid"), JSON.stringify(payload))
        .done(function () {
            credentialForm.removeClass("loading").hide();
            displayMessageAfterEdit(tvCredentialEditValid, credentialForm, submitBtn, "big-edit", $.i18n("utils.valid.update_success"), false);
        })
        .fail(function (result) {
            credentialForm.removeClass("loading").hide();
            errorTVCredential(result, tvCredentialEditError, credentialForm, submitBtn);
        });
}
function postTVPwdAPI(tvCredentialEditValid, tvCredentialEditError, credentialForm, submitBtn) {
    var payload = { password: $("#confirmNewTvPwd").val().trim() };
    postTVPwd(sessionStorage.getItem("subid"), JSON.stringify(payload))
        .done(function () {
            credentialForm.removeClass("loading").hide();
            displayMessageAfterEdit(tvCredentialEditValid, credentialForm, submitBtn, "big-edit", $.i18n("utils.valid.update_success"), false);
        })
        .fail(function (result) {
            credentialForm.removeClass("loading").hide();
            errorTVCredential(result, tvCredentialEditError, credentialForm, submitBtn);
        });
}
function postTVYouthProtectionAPI(tvCredentialEditValid, tvCredentialEditError, credentialForm, submitBtn, protectionStatus) {
    return new Promise(function (resolve, reject) {
        var payload = { youthProtectionPermission: protectionStatus };
        postTVYouthProtection(sessionStorage.getItem("subid"), JSON.stringify(payload))
            .done(function () {
                if (null !== credentialForm) credentialForm.removeClass("loading").hide();
                displayMessageAfterEdit(tvCredentialEditValid, credentialForm, submitBtn, "big-edit", $.i18n("utils.valid.update_success"), false);
                resolve();
            })
            .fail(function (result) {
                if (null !== credentialForm) credentialForm.removeClass("loading").hide();
                errorTVCredential(result, tvCredentialEditError, credentialForm, submitBtn);
                reject();
            });
    });
}
function callPostMobilePaymentMeansAPI(billingAccountID, payload) {
    var managePaymentMean = $("#managePaymentMean"),
        selfCarePaymentMeans = $("#selfCarePaymentMeans"),
        paymentMeansError = $("#paymentMeansError");
    postMobilePaymentMeans(billingAccountID, JSON.stringify(payload))
        .done(function (result) {
            if (result.location) {
                selfCarePaymentMeans.find("iframe").attr("src", result.location);
                selfCarePaymentMeans.fadeIn();
                managePaymentMean.attr("aria-expanded", "true");
                managePaymentMean.find("svg").attr("class", "ic-delete").find("use").attr("xlink:href", "#ic-delete");
                window.scrollTo({ top: document.documentElement.scrollTop + 200, behavior: "smooth" });
            }
        })
        .fail(function (result) {
            if (result) displayMessageAfterSubmit(paymentMeansError, null, "", $.i18n("utils.technical_error"));
        });
}
function editInvoicingMethods(billingAccountID, resultPayer) {
    var inputPayment = $('#newInvoicingMethodForm input[name="newPaymentMethod"]'),
        inputDelivery = $('#newInvoicingMethodForm input[name="newDeliveryMethod"]'),
        changeInvoicingMethod = $("#changeInvoicingMethod"),
        spmChoice = $("#spmChoice");
    if ("fix" === sessionStorage.getItem("domain")) $("#payMethod").hide();
    else {
        $("#payMethod").show();
        inputPayment.each(function (i, e) {
            if (e.value === resultPayer.paymentMethod) $(e).prop("checked", true);
        });
        $("#ddBank").html($.i18n("billing.invoicing.dd_bank"));
        $("#ebill, #ebillDelivery").html($.i18n("billing.invoicing.ebill_" + BRAND.name));
    }
    inputDelivery.each(function (i, e) {
        if (e.value === resultPayer.invoiceDeliveryMethod) $(e).prop("checked", true);
    });
    if (true === resultPayer.hasPayerPrivilege) {
        $("#editPayerEmail")
            .show()
            .attr({ href: "./profile.html?acc=" + resultPayer.payer.id + "#profilePersonalInfo", "aria-label": $.i18n("utils.labels.edit_perso_info") });
        getStoredPaymentMethodsAPI($("#invoicingMethodEditError"), resultPayer.payer.id, true, $("#newInvoicingMethodForm")).then(function (resultSPM) {
            editPaymentMethod(resultSPM, spmChoice, true);
        });
    } else $("#editPayerEmail").hide();
    if ($('#newInvoicingMethodForm input[value="DIRECT_DEBIT_CREDIT_CARD"]').is(":checked")) spmChoice.show();
    else spmChoice.hide();
    inputPayment.off("change").on("change", function (e) {
        e.preventDefault();
        if ("DIRECT_DEBIT_CREDIT_CARD" === e.currentTarget.value) spmChoice.show();
        else spmChoice.hide();
        return false;
    });
    $("#invoicingEmail").text($.i18n("billing.invoicing.email", resultPayer.payer.email));
    $("#invoicingPost").text($.i18n("billing.invoicing.post", resultPayer.payer.firstName + " " + resultPayer.payer.lastName));
    $("#invoicingDetailledPost").text($.i18n("billing.invoicing.detailled_post", resultPayer.payer.firstName + " " + resultPayer.payer.lastName));
    displayEditForm(changeInvoicingMethod, $("#changeInvoicingMethodForm"), $("#invoicingVisibleArea"));
    postInvoicingMethodsAPI(billingAccountID, resultPayer.payer.id, resultPayer.payer.email);
}
function getBalancePostpaidAPI(billingAccountID) {
    var billingOverviewError = $("#billingOverviewError");
    getBalancePostPaid(billingAccountID)
        .done(function (result) {
            displayBalanceInfo(result, billingAccountID);
        })
        .fail(function (result) {
            if (result) displayMessageAfterSubmit(billingOverviewError, null, "", $.i18n("utils.technical_error"));
        });
}
function getBalancePrepaidAPI(subId) {
    var prepaidBalance = $("#prepaidBalance"),
        subOverviewError = $("#subOverviewError");
    getBalancePrepaid(subId)
        .done(function (result) {
            var prepaidBalanceDisplay = (result.amount / 100).toFixed(2);
            prepaidBalance.find("strong").html("<span>CHF</span>" + prepaidBalanceDisplay);
            prepaidBalance.fadeIn();
        })
        .fail(function () {
            displayMessageAfterSubmit(subOverviewError, null, "", $.i18n("utils.technical_error"));
        });
}
function getCostControlAPI(subId, currentLang) {
    return new Promise(function (resolve, reject) {
        var subOverviewError = $("#subOverviewError");
        getCostControl(subId, currentLang)
            .done(function (result) {
                resolve(result);
            })
            .fail(function () {
                displayMessageAfterSubmit(subOverviewError, null, "", $.i18n("utils.technical_error"));
                $("#dataCounterContainer").remove();
                reject("get cost control failed");
            });
    });
}
function getCountersAPI(subId, currentLang) {
    return new Promise(function (resolve, reject) {
        var subOverviewError = $("#subOverviewError");
        getCounters(subId, currentLang)
            .done(function (result) {
                resolve(result);
            })
            .fail(function () {
                displayMessageAfterSubmit(subOverviewError, null, "", $.i18n("utils.technical_error"));
                reject("get counters failed");
            });
    });
}
function getEventHistoryPrepaidAPI(subId) {
    var subOverview = $("#subOverview"),
        historyResultContainer = $("#historyResultContainer"),
        historyResultConstructor = "",
        historyTitle = $.i18n("subscription.table_title.history_event"),
        noResult = '<p class="space-bottom">' + $.i18n("utils.labels.no_result") + "</p>",
        subOverviewError = $("#subOverviewError");
    getEventHistoryPrepaid(subId)
        .done(function (result) {
            if (result.length > 0) {
                displayHistoryRefillResult(historyResultContainer, historyResultConstructor, historyTitle, result);
                Sortable.init();
                dropdownSort();
                paginateTable($("#subOverview .hybrid-table"), 10);
                var tableHistory = document.querySelectorAll("#subOverview .hybrid-table");
                for (var i = 0; i < tableHistory.length; i++)
                    tableHistory[i].addEventListener("Sortable.sorted", function (e) {
                        var tableId = e.target.attributes[0];
                        doPagination($("#" + tableId.value), 10);
                    });
                seeMore();
            } else historyResultContainer.append("<h2>" + historyTitle + "</h2>" + noResult);
            historyResultContainer.fadeIn();
        })
        .fail(function () {
            displayMessageAfterSubmit(subOverviewError, null, "", $.i18n("utils.technical_error"));
        });
}
function getPaymentPlanAPI(billingAccountID, billingOverviewError) {
    return new Promise(function (resolve, reject) {
        getMobilePaymentPlan(billingAccountID)
            .done(function (result) {
                resolve(result);
            })
            .fail(function () {
                displayMessageAfterSubmit(billingOverviewError, null, "", $.i18n("utils.technical_error"));
            });
    });
}
function getPaymentPlanEligibilityAPI(billingAccountID, billingOverviewError) {
    return new Promise(function (resolve, reject) {
        getMobilePaymentPlanEligibility(billingAccountID)
            .done(function (result) {
                resolve(result);
            })
            .fail(function () {
                displayMessageAfterSubmit(billingOverviewError, null, "", $.i18n("utils.technical_error"));
            });
    });
}
function postPaymentPlanAPI(errorContainer, validContainer, currentForm, submitCurrentForm, billingAccountID, payload) {
    return new Promise(function (resolve, reject) {
        postMobilePaymentPlan(billingAccountID, JSON.stringify(payload))
            .done(function (result) {
                currentForm.removeClass("loading");
                displayMessageAfterEdit(validContainer, currentForm, submitCurrentForm, "big-edit", $.i18n("utils.valid.preference_saved"), false, void 0, false);
                resolve(result);
            })
            .fail(function () {
                displayMessageAfterEdit(errorContainer, currentForm, submitCurrentForm, "big-edit", $.i18n("utils.technical_error"), true);
            });
    });
}
function getCustomerSkyAccountAPI(customerId) {
    return new Promise(function (resolve, reject) {
        getCustomerSkyAccount(customerId)
            .done(function (result) {
                resolve(result);
            })
            .fail(function () {
                reject("get CustomerSkyAccount failed");
            });
    });
}
function unlinkCustomerSkyAccountAPI() {
    const customerId = sessionStorage.getItem("custid");
    return new Promise(function (resolve, reject) {
        unlinkCustomerSkyAccount(customerId)
            .done(function (result) {
                resolve(result);
            })
            .fail(function () {
                reject("unlink CustomerSkyAccount failed");
            });
    });
}
function linkCustomerSkyAccountAPI(skyAccountEmail) {
    const customerId = sessionStorage.getItem("custid");
    return new Promise(function (resolve, reject) {
        payload = { email: skyAccountEmail || sessionStorage.getItem("identifier"), language: setDefaultLang() };
        linkCustomerSkyAccount(customerId, JSON.stringify(payload))
            .done(function (result) {
                resolve(result);
            })
            .fail(function (e) {
                reject("link CustomerSkyAccount failed");
            });
    });
}
function confirmLinkCustomerSkyAccountAPI(verificationCode, skyAccountEmail) {
    const customerId = sessionStorage.getItem("custid");
    const payload = { code: verificationCode, email: skyAccountEmail || sessionStorage.getItem("identifier"), language: setDefaultLang() };
    return confirmLinkCustomerSkyAccount(customerId, JSON.stringify(payload));
}
function getMobileOrderContractAPI(customerId, confirmationCode) {
    return new Promise(function (resolve, reject) {
        var subOrderError = $("#subOrderError");
        getMobileOrderContract(customerId, confirmationCode)
            .done(function (result) {
                resolve(result);
            })
            .fail(function () {
                displayMessageAfterSubmit(subOrderError, null, "", $.i18n("utils.error.no_contract"));
                reject("get order contract failed");
            });
    });
}
function getMobileOrdersAPI(subId) {
    return new Promise(function (resolve, reject) {
        var subOrderError = $("#subOrderError");
        getMobileOrders(subId)
            .done(function (result) {
                resolve(result);
            })
            .fail(function (result) {
                displayMessageAfterSubmit(subOrderError, null, "", $.i18n("utils.technical_error"));
                reject("get orders failed");
            });
    });
}
function getPaymentInfoPrepaidAPI() {
    var refillType = $("#refillType"),
        prepayRefillType = $("#prepayRefillType"),
        prepayVoucher = $("#prepayVoucher"),
        voucherMobile = $("#voucherMobile"),
        voucherId = $("#voucherId"),
        prepayCC = $("#prepayCC"),
        ccMobile = $("#ccMobile"),
        submitRefillPrepay = $("#submitRefillPrepay");
    prepayRefillType.fadeIn();
    refillType.find("input").prop("checked", false);
    refillType.find("input").on("change", function () {
        if ("voucher" === $(this).val()) {
            prepayCC.hide().find("input").addClass("ignore");
            prepayVoucher.fadeIn().find("input").removeClass("ignore");
            voucherMobile.val(sessionStorage.getItem("msisdn"));
        } else {
            prepayVoucher.hide().find("input").addClass("ignore");
            prepayCC.fadeIn().find("input").removeClass("ignore");
            voucherId.val("");
            ccMobile.val(sessionStorage.getItem("msisdn"));
            var min = 1e3,
                max = 4e4,
                minDisplay = (min / 100).toFixed(2),
                maxDisplay = (max / 100).toFixed(2);
            $.validator.addMethod(
                "amountMax",
                function (value, element) {
                    value = convertAmount(value);
                    return value <= max;
                },
                $.i18n("utils.error.amount_max_error") + " " + maxDisplay
            );
            $.validator.addMethod(
                "amountMin",
                function (value, element) {
                    value = convertAmount(value);
                    return value >= min;
                },
                $.i18n("utils.error.amount_min_error") + " " + minDisplay
            );
        }
        floatingLabels();
        submitRefillPrepay.addClass("btn btn--secondary").fadeIn();
    });
}
function proceedPaymentCenterPrePaid(billingAccountID) {
    var voucherMobile = $("#voucherMobile"),
        voucherId = $("#voucherId"),
        ccMobile = $("#ccMobile"),
        ccAmount = $("#ccAmount"),
        refillPrepay = $("#refillPrepay"),
        submitRefillPrepay = $("#submitRefillPrepay");
    refillPrepay.on("submit", function (event) {
        event.preventDefault();
        if (validateForm(refillPrepay, submitRefillPrepay))
            if ("" !== voucherId.val()) {
                var payload = { voucher: voucherId.val(), msisdn: voucherMobile.attr("data-number") };
                voucherPayment(JSON.stringify(payload), voucherMobile.val(), voucherId.val());
            } else {
                var payload = { language: setDefaultLang(), amount: convertAmount(ccAmount.val()), msisdn: ccMobile.attr("data-number") };
                ccPaymentPrepaid(billingAccountID, JSON.stringify(payload));
            }
    });
}
function proceedPaymentCenterPostPaid(billingAccountID) {
    var amountPayment = $("#amountPayment"),
        balancePayment = $("#balancePayment"),
        submitBalancePayment = $("#submitBalancePayment");
    balancePayment.on("submit", function (event) {
        event.preventDefault();
        if (validateForm(balancePayment, submitBalancePayment)) {
            var payload = { amount: convertAmount(amountPayment.val()), language: setDefaultLang() };
            startMobilePaymentPostPaidAPI(billingAccountID, JSON.stringify(payload));
        }
    });
}
function startMobilePaymentPostPaidAPI(billingAccountID, payload) {
    var paymentForm = $("#paymentForm"),
        paymentCenter = $("#paymentCenter"),
        paymentResume = $("#paymentResume"),
        paymentReceipt = $("#paymentReceipt"),
        messageResume = $("#messageResume"),
        balancePaid = $("#balancePaid"),
        bid = $("#bid"),
        msisdnPrepay = $("#msisdnPrepay"),
        transNum = $("#transNum"),
        idTrans = $("#idTrans"),
        transNumFail = $("#transNumFail"),
        dateTime = $("#dateTime"),
        recPay = $("#recPay"),
        paymentMean = $("#paymentMean"),
        submitBalancePayment = $("#submitBalancePayment"),
        globalError = $("#globalError");
    var urlParams = new URLSearchParams(location.search);
    if ("fix" === urlParams.get("domain")) var cb = startFixPayment(billingAccountID, payload);
    else var cb = startMobilePayment(billingAccountID, payload);
    cb.done(function (result) {
        if (result.location) {
            paymentCenter.find("iframe").attr("src", result.location);
            paymentForm.fadeOut();
            paymentCenter.fadeIn();
        }
        window.addEventListener("message", receiveMessage, false);
        function receiveMessage(event) {
            if (event.data.toString().indexOf("balancePayment") > -1) {
                var oBalancePaymentInfo = JSON.parse(event.data);
                paymentCenter.fadeOut();
                paymentCenter.find(".highlight").removeClass("highlight--error");
                msisdnPrepay.hide();
                switch (oBalancePaymentInfo.balancePayment.status) {
                    case "CANCELLED":
                        messageResume.html(
                            '<svg aria-hidden="true" focusable="false" class="ic-error"><use xlink:href="#ic-error"></use></svg><br/>' +
                            $.i18n("utils.error.cancelled_message_customerbank_" + BRAND.name) +
                            "<br/>" +
                            $.i18n("utils.error.failure_message_" + BRAND.name)
                        );
                        transNumFail.text(oBalancePaymentInfo.balancePayment.pcPaymentId);
                        paymentResume.find(".highlight").addClass("highlight--error");
                        paymentResume.fadeIn();
                        break;
                    case "NOT_AUTHORIZED":
                        messageResume.html($.i18n("utils.error.notauthorized_message_customerbank_" + BRAND.name) + "<br/>" + $.i18n("utils.error.failure_message_" + BRAND.name));
                        transNumFail.text(oBalancePaymentInfo.balancePayment.pcPaymentId);
                        paymentResume.fadeIn();
                        break;
                    case "ERROR":
                    case "TRANSACTION_NOT_FOUND":
                        messageResume.html($.i18n("utils.error.summary_error_" + BRAND.name));
                        transNumFail.text(oBalancePaymentInfo.balancePayment.pcPaymentId);
                        paymentResume.fadeIn();
                        break;
                    default:
                        messageResume.html(
                            '<svg aria-hidden="true" focusable="false" class="validated"><use xlink:href="#validated"></use></svg><br/>' +
                            $.i18n("utils.valid.success_message_customerbank_" + BRAND.name) +
                            "<br/>" +
                            $.i18n("utils.valid.success_message_" + BRAND.name) +
                            "<br/>" +
                            $.i18n("utils.valid.success_message_processing")
                        );
                        idTrans.hide();
                        paymentResume.fadeIn();
                        balancePaid.text((oBalancePaymentInfo.balancePayment.amount / 100).toFixed(2));
                        bid.text(oBalancePaymentInfo.balancePayment.billingAccountId);
                        transNum.text(oBalancePaymentInfo.balancePayment.pcPaymentId);
                        dateTime.text(oBalancePaymentInfo.balancePayment.paymentDatetime);
                        recPay.text(oBalancePaymentInfo.balancePayment.fgwPaymentId);
                        paymentMean.text($.i18n("payment.receipt." + oBalancePaymentInfo.balancePayment.pcPaymentCode.toLowerCase()));
                        paymentReceipt.fadeIn();
                        break;
                }
            }
        }
    }).fail(function (result) {
        if ("AMOUNT_TOO_LOW" === result.responseJSON.errorCode) displayMessageAfterSubmit(globalError, submitBalancePayment, "", $.i18n("utils.error.amount_too_low_" + BRAND.name));
        else if ("AMOUNT_TOO_HIGH" === result.responseJSON.errorCode) displayMessageAfterSubmit(globalError, submitBalancePayment, "", $.i18n("utils.error.amount_too_high_" + BRAND.name));
        else displayMessageAfterSubmit(globalError, submitBalancePayment, "", $.i18n("utils.technical_error"));
    });
}
function voucherPayment(payload, msisdn, voucherId) {
    var submitRefillPrepay = $("#submitRefillPrepay"),
        idTrans = $("#idTrans"),
        prepayRefillType = $("#prepayRefillType"),
        paymentResume = $("#paymentResume"),
        messageResume = $("#messageResume"),
        globalError = $("#globalError");
    refillVoucher(payload)
        .done(function (result) {
            idTrans.hide();
            prepayRefillType.hide();
            displayMessageAfterSubmit(messageResume, submitRefillPrepay, "", $.i18n("utils.valid.refill_voucher_done_" + BRAND.name, msisdn, voucherId, (result.amount / 100).toFixed(2)));
            paymentResume.fadeIn();
        })
        .fail(function (result) {
            switch (result.responseJSON.errorCode) {
                case "BAD_MSISDN_FORMAT":
                case "INVALID_MSISDN":
                    displayMessageAfterSubmit(globalError, submitRefillPrepay, "", $.i18n("utils.error.bad_msisdn_" + BRAND.name));
                    break;
                case "VOUCHER_ALREADY_CLAIMED":
                case "VOUCHER_DAMAGED":
                    displayMessageAfterSubmit(globalError, submitRefillPrepay, "", $.i18n("utils.error.voucher_claimed"));
                    break;
                case "VOUCHER_MISSING_OR_STOLEN":
                    displayMessageAfterSubmit(globalError, submitRefillPrepay, "", $.i18n("utils.error.voucher_missing_stolen"));
                    break;
                case "VOUCHER_BRAND_DOES_NOT_MATCH_SUBSCRIBER_BRAND":
                    displayMessageAfterSubmit(globalError, submitRefillPrepay, "", $.i18n("utils.error.wrong_brand"));
                    break;
                case "VOUCHER_EXPIRED":
                    displayMessageAfterSubmit(globalError, submitRefillPrepay, "", $.i18n("utils.error.voucher_expired"));
                    break;
                case "TOO_MANY_REFILLS":
                    displayMessageAfterSubmit(globalError, submitRefillPrepay, "", $.i18n("utils.error.too_many_refills"));
                    break;
                case "CUMULATED_AMOUNT_EXCEEDED":
                    displayMessageAfterSubmit(globalError, submitRefillPrepay, "", $.i18n("utils.error.cumulated_amount_exceeded"));
                    break;
                case "VOUCHER_NOT_FOUND":
                    displayMessageAfterSubmit(globalError, submitRefillPrepay, "", $.i18n("utils.error.voucher_not_found"));
                    break;
                case "VOUCHER_NOT_ACIVE":
                    displayMessageAfterSubmit(globalError, submitRefillPrepay, "", $.i18n("utils.error.voucher_not_active"));
                    break;
                case "TOO_MANY_REQUEST":
                    displayMessageAfterSubmit(globalError, submitRefillPrepay, "", $.i18n("utils.error.too_many_request_" + BRAND.name));
                    break;
                default:
                    displayMessageAfterSubmit(globalError, submitRefillPrepay, "", $.i18n("utils.technical_error"));
                    break;
            }
        });
}
function ccPaymentPrepaid(billingAccountID, payload) {
    var prepayRefillType = $("#prepayRefillType"),
        submitRefillPrepay = $("#submitRefillPrepay"),
        paymentCenter = $("#paymentCenter"),
        paymentResume = $("#paymentResume"),
        paymentReceipt = $("#paymentReceipt"),
        messageResume = $("#messageResume"),
        balancePaid = $("#balancePaid"),
        bidPostpay = $("#bidPostpay"),
        msisdn = $("#msisdn"),
        transNum = $("#transNum"),
        idTrans = $("#idTrans"),
        transNumFail = $("#transNumFail"),
        dateTime = $("#dateTime"),
        recPay = $("#recPay"),
        paymentMean = $("#paymentMean"),
        globalError = $("#globalError");
    refillCC(billingAccountID, payload)
        .done(function (result) {
            if (result.location) {
                paymentCenter.find("iframe").attr("src", result.location);
                prepayRefillType.fadeOut();
                paymentCenter.fadeIn();
            }
            window.addEventListener("message", receiveMessage, false);
            function receiveMessage(event) {
                if (event.data.toString().indexOf("rechargePayment") > -1) {
                    var oRechargePaymentInfo = JSON.parse(event.data);
                    paymentCenter.fadeOut();
                    bidPostpay.hide();
                    switch (oRechargePaymentInfo.rechargePayment.status) {
                        case "CANCELLED":
                            messageResume.html($.i18n("utils.error.cancelled_message_customerbank_" + BRAND.name) + "<br/>" + $.i18n("utils.error.failure_message_" + BRAND.name));
                            transNumFail.text(oRechargePaymentInfo.rechargePayment.pcPaymentId);
                            paymentResume.fadeIn();
                            break;
                        case "NOT_AUTHORIZED":
                            messageResume.html($.i18n("utils.error.notauthorized_message_customerbank_" + BRAND.name) + "<br/>" + $.i18n("utils.error.failure_message_" + BRAND.name));
                            transNumFail.text(oRechargePaymentInfo.rechargePayment.pcPaymentId);
                            paymentResume.fadeIn();
                            break;
                        case "ERROR":
                        case "TRANSACTION_NOT_FOUND":
                            messageResume.html($.i18n("utils.error.summary_error_" + BRAND.name));
                            transNumFail.text(oRechargePaymentInfo.rechargePayment.pcPaymentId);
                            paymentResume.fadeIn();
                            break;
                        default:
                            messageResume.html(
                                $.i18n("utils.valid.success_message_customerbank_" + BRAND.name) + "<br/>" + $.i18n("utils.valid.success_message_" + BRAND.name) + "<br/>" + $.i18n("utils.valid.success_message_processing_prepay")
                            );
                            idTrans.hide();
                            paymentResume.fadeIn();
                            balancePaid.text((oRechargePaymentInfo.rechargePayment.amount / 100).toFixed(2));
                            msisdn.text(prettifyPhoneNumber(oRechargePaymentInfo.rechargePayment.msisdn));
                            transNum.text(oRechargePaymentInfo.rechargePayment.pcPaymentId);
                            dateTime.text(oRechargePaymentInfo.rechargePayment.completionDatetime);
                            recPay.text(oRechargePaymentInfo.rechargePayment.reservationId);
                            paymentMean.text($.i18n("payment.receipt." + oRechargePaymentInfo.rechargePayment.pcPaymentCode.toLowerCase()));
                            paymentReceipt.fadeIn();
                            break;
                    }
                }
            }
        })
        .fail(function (result) {
            switch (result.responseJSON.errorCode) {
                case "BAD_MSISDN_FORMAT":
                case "INVALID_MSISDN":
                    displayMessageAfterSubmit(globalError, submitRefillPrepay, "", $.i18n("utils.error.bad_msisdn_" + BRAND.name));
                    break;
                case "AMOUNT_TOO_SMALL":
                    displayMessageAfterSubmit(globalError, submitRefillPrepay, "", $.i18n("utils.error.amount_too_low_" + BRAND.name));
                    break;
                case "AMOUNT_TOO_LARGE":
                    displayMessageAfterSubmit(globalError, submitRefillPrepay, "", $.i18n("utils.error.amount_too_high_" + BRAND.name));
                    break;
                case "INVALID_BRAND_FOR_CHANNEL":
                    displayMessageAfterSubmit(globalError, submitRefillPrepay, "", $.i18n("utils.error.wrong_brand"));
                    break;
                case "TOO_MANY_REFILLS":
                    displayMessageAfterSubmit(globalError, submitRefillPrepay, "", $.i18n("utils.error.too_many_refills"));
                    break;
                case "CUMULATED_AMOUNT_EXCEEDED":
                    displayMessageAfterSubmit(globalError, submitRefillPrepay, "", $.i18n("utils.error.cumulated_amount_exceeded"));
                    break;
                default:
                    displayMessageAfterSubmit(globalError, submitRefillPrepay, "", $.i18n("utils.technical_error"));
                    break;
            }
        });
}
function getPastUpsellsAPI(subId) {
    return new Promise(function (resolve, reject) {
        var subRoamingError = $("#subRoamingError");
        getPastUpsells(subId)
            .done(function (result) {
                resolve(result);
            })
            .fail(function (result) {
                displayMessageAfterSubmit(subRoamingError, null, "", $.i18n("utils.technical_error"));
                reject("get orders failed");
            });
    });
}
function getRoamingCostAPI(subID) {
    var roamingCost = $("#roamingCost"),
        changeRoamingCost = $("#changeRoamingCost"),
        currentDataCost = $("#currentDataCost"),
        currentVoiceCost = $("#currentVoiceCost"),
        newDataCost = $("#newDataCost"),
        newVoiceCost = $("#newVoiceCost");
    if (roamingCost.length)
        getRoamingCostInfo(subID)
            .done(function (result) {
                if (true === $.isEmptyObject(result.currentLimits.limits)) {
                    currentDataCost.text("-");
                    currentVoiceCost.text("-");
                } else {
                    if ("" !== result.currentLimits.limits.ROAMING_DATA && void 0 !== result.currentLimits.limits.ROAMING_DATA) currentDataCost.text((result.currentLimits.limits.ROAMING_DATA / 100).toFixed(2));
                    if ("" !== result.currentLimits.limits.ROAMING_VOICE_SMS && void 0 !== result.currentLimits.limits.ROAMING_VOICE_SMS) currentVoiceCost.text((result.currentLimits.limits.ROAMING_VOICE_SMS / 100).toFixed(2));
                }
                if (true === $.isEmptyObject(result.allowedSteps)) changeRoamingCost.hide();
                else {
                    changeRoamingCost.show();
                    if (result.allowedSteps.ROAMING_DATA) {
                        var dataLimit = "";
                        newDataCost.empty();
                        for (var i = 0; i < result.allowedSteps.ROAMING_DATA.length; i++) {
                            var isSelected = result.currentLimits.limits.ROAMING_DATA === result.allowedSteps.ROAMING_DATA[i] ? "selected" : "";
                            dataLimit += "<option " + isSelected + ' value="' + result.allowedSteps.ROAMING_DATA[i] + '">' + (result.allowedSteps.ROAMING_DATA[i] / 100).toFixed(2) + "</option>";
                        }
                        newDataCost.append(dataLimit);
                    }
                    if (result.allowedSteps.ROAMING_VOICE_SMS) {
                        var voiceLimit = "";
                        newVoiceCost.empty();
                        for (var i = 0; i < result.allowedSteps.ROAMING_VOICE_SMS.length; i++) {
                            var isSelected = result.currentLimits.limits.ROAMING_VOICE_SMS === result.allowedSteps.ROAMING_VOICE_SMS[i] ? "selected" : "";
                            voiceLimit += "<option " + isSelected + ' value="' + result.allowedSteps.ROAMING_VOICE_SMS[i] + '">' + (result.allowedSteps.ROAMING_VOICE_SMS[i] / 100).toFixed(2) + "</option>";
                        }
                        newVoiceCost.append(voiceLimit);
                    }
                }
                roamingCost.fadeIn().removeClass("hidden");
            })
            .fail(function (result) {});
}
function getSimInfoAPI(subId) {
    var simInfo = $("#simInfo"),
        simIccid = $("#simIccid"),
        simType = $("#simType"),
        simStatusBlock = $("#simStatusBlock"),
        simStatus = $("#simStatus"),
        togglePin = $("#togglePin"),
        pin = $("#pin"),
        togglePuk = $("#togglePuk"),
        puk = $("#puk"),
        swapSimBtn = $("#swapSimBtn"),
        useNewSimError = $("#useNewSimError"),
        useNewSimValid = $("#useNewSimValid"),
        orderSim = $("#orderSim"),
        ongoingSimOrder = $("#ongoingSimOrder"),
        callCenter = $("#callCenter"),
        blockSim = $("#blockSim"),
        infoBlock = $("#infoBlock"),
        suspend = $("#suspend"),
        multiSurfInfo = $("#multiSurfInfo"),
        multiSimIccid = $("#multiSimIccid"),
        multiSimType = $("#multiSimType"),
        multiSimStatusBlock = $("#multiSimStatusBlock"),
        multiSimStatus = $("#multiSimStatus"),
        toggleMultiPin = $("#toggleMultiPin"),
        toggleMultiPuk = $("#toggleMultiPuk"),
        multiPin = $("#multiPin"),
        multiPuk = $("#multiPuk"),
        multiUseNewSimError = $("#multiUseNewSimError"),
        multiUseNewSimValid = $("#multiUseNewSimValid"),
        multiOrderSim = $("#multiOrderSim"),
        multiCallCenter = $("#multiCallCenter"),
        multiBlockSim = $("#multiBlockSim"),
        multiInfoBlock = $("#multiInfoBlock"),
        multiSuspend = $("#multiSuspend"),
        subConfigError = $("#subConfigError"),
        cci18n = $.i18n("subscription.config.unblock_" + BRAND.name),
        blocki18n = $.i18n("subscription.config.info_blocking_" + BRAND.name),
        zipcode = { zipFieldContainer: "zipcodeContainer", zipFieldId: "zipcode" },
        city = { cityFieldContainer: "cityContainer", cityFieldId: "city" },
        street = { streetFieldContainer: "streetContainer", streetFieldId: "street" },
        houseNb = { houseNbFieldContainer: "houseNbContainer", houseNbFieldId: "houseNb" },
        multiZipcode = { zipFieldContainer: "multiZipcodeContainer", zipFieldId: "multiZipcode" },
        multiCity = { cityFieldContainer: "multiCityContainer", cityFieldId: "multiCity" },
        multiStreet = { streetFieldContainer: "multiStreetContainer", streetFieldId: "multiStreet" },
        multiHouseNb = { houseNbFieldContainer: "multiHouseNbContainer", houseNbFieldId: "multiHouseNb" };
    getSimInfo(subId)
        .done(function (result) {
            var mainSimInfo = result.main,
                initialPin = mainSimInfo.pinPuk.pin1 + " / " + mainSimInfo.pinPuk.pin2,
                initialPuk = mainSimInfo.pinPuk.puk1 + " / " + mainSimInfo.pinPuk.puk2,
                hiddenPin = initialPin.replace(/(?! \/ )\d/g, "&#9679;");
            hiddenPuk = initialPuk.replace(/(?! \/ )\d/g, "&#9679;");
            simIccid.text(mainSimInfo.iccId);
            simType.text($.i18n("subscription.config." + mainSimInfo.simType));
            simStatus.text($.i18n("subscription.config." + mainSimInfo.status));
            pin.html(hiddenPin).attr("data-initial", initialPin);
            puk.html(hiddenPuk).attr("data-initial", initialPuk);
            suspend.attr("data-sim-line-type", "MAIN");
            suspend.attr("data-sub", subId);
            swapSimBtn.attr("data-iccid", mainSimInfo.iccId);
            swapSimBtn.attr("data-sub", subId);
            $("#simDeliveryParagraph, #multiSimDeliveryParagraph").text($.i18n("subscription.config.sim_delivery_" + BRAND.name));
            if ("ACTIVE" !== sessionStorage.getItem("subStatus")) blockSim.hide();
            else blockSim.fadeIn();
            if ("BLOCKED" === mainSimInfo.status) {
                simStatusBlock.show();
                callCenter.html(cci18n);
                callCenter.removeClass("hidden");
                infoBlock.addClass("hidden");
                blockSim.hide();
            } else {
                confirmSuspendSim(blockSim, suspend, useNewSimError, useNewSimValid);
                infoBlock.html(blocki18n);
                infoBlock.removeClass("hidden");
                callCenter.addClass("hidden");
            }
            var oDelivered = result.delivered;
            swapSimBtn.hide();
            multiOrderSim.hide();
            if (false === $.isEmptyObject({ oDelivered: oDelivered })) if ("MAIN" === oDelivered.simLineType) swapSimBtn.fadeIn();
            if (result.main)
                if ("ESIM" !== result.main.simType)
                    if ("ACTIVE" === sessionStorage.getItem("subStatus")) {
                        callAcs(zipcode, street, city, houseNb, $("#simDeliveryEditError"), $("#simDeliveryForm"), $("#simDeliverySubmit"), $("#simDeliveryVisibleArea"));
                        let lastModifiedDate = Date.parse(oDelivered.lastModifiedDate);
                        let is1MonthBetween = is1MonthBetweenDates(lastModifiedDate, new Date());
                        let isDeliveryOngoing = false;
                        getSimOrderStatusAPI(subId).then((response) => {
                            isDeliveryOngoing = response.simCardDeliveryOngoing;
                            if (isDeliveryOngoing) toggleOrderNewSimButton(orderSim, true, ongoingSimOrder);
                            else if (is1MonthBetween && "DELIVERED" === oDelivered.status) toggleOrderNewSimButton(orderSim, false, ongoingSimOrder);
                            else toggleOrderNewSimButton(orderSim, false, ongoingSimOrder);
                        });
                        orderSim.fadeIn();
                        fillCurrentAddress($("#addressDeliveryCurrentLabel"), subId);
                        $("#resetSimDelivery")
                            .off("click")
                            .on("click", function () {
                                $("#newSimDeliveryForm").show();
                                $("#simDeliveryForm").hide();
                                $("#simDeliveryVisibleArea").show();
                                orderSim.attr("aria-expanded", false).removeAttr("aria-disabled").focus();
                            });
                        $(':radio[name="addressDelivery"]')
                            .off("change")
                            .on("change", function () {
                                $("#submitSimDelivery").show().addClass("btn");
                                if ("currentAddress" === $(this).val()) {
                                    $("#addressDeliveryEdit").hide();
                                    var currentSub = $("#" + subId);
                                    postSimCardDeliveryAPI(
                                        subId,
                                        $("#simDeliveryForm"),
                                        $("#newSimDeliveryForm"),
                                        $("#simDeliveryEditValid"),
                                        $("#simDeliveryEditError"),
                                        $("#simDeliverySubmit"),
                                        simType.text().toUpperCase(),
                                        currentSub.attr("data-country"),
                                        currentSub.attr("data-city"),
                                        currentSub.attr("data-zipcode"),
                                        currentSub.attr("data-houseNb"),
                                        currentSub.attr("data-careOf"),
                                        currentSub.attr("data-street"),
                                        "MAIN",
                                        $("#simDeliveryVisibleArea"),
                                        orderSim,
                                        false
                                    );
                                } else {
                                    $("#addressDeliveryEdit").show();
                                    postSimCardDeliveryAPI(
                                        subId,
                                        $("#simDeliveryForm"),
                                        $("#newSimDeliveryForm"),
                                        $("#simDeliveryEditValid"),
                                        $("#simDeliveryEditError"),
                                        $("#simDeliverySubmit"),
                                        simType.text().toUpperCase(),
                                        $("#country"),
                                        $("#city"),
                                        $("#zipcode"),
                                        $("#houseNb"),
                                        $("#careOf"),
                                        $("#street"),
                                        "MAIN",
                                        $("#simDeliveryVisibleArea"),
                                        orderSim,
                                        true
                                    );
                                }
                            });
                        displayEditForm(orderSim, $("#simDeliveryForm"), $("#simDeliveryVisibleArea"), true);
                    } else orderSim.hide();
            simInfo.fadeIn().removeClass("hidden");
            swapSimAPI(swapSimBtn, useNewSimError, useNewSimValid);
            toggleCode(togglePin, pin, initialPin, hiddenPin);
            toggleCode(togglePuk, puk, initialPuk, hiddenPuk);
            if (result.multisurf) {
                var multiSurfSimInfo = result.multisurf,
                    initialMultiPin = multiSurfSimInfo.pinPuk.pin1 + " / " + multiSurfSimInfo.pinPuk.pin2,
                    initialMultiPuk = multiSurfSimInfo.pinPuk.puk1 + " / " + multiSurfSimInfo.pinPuk.puk2,
                    hiddenMultiPin = initialMultiPin.replace(/(?! \/ )\d/g, "&#9679;");
                hiddenMultiPuk = initialMultiPuk.replace(/(?! \/ )\d/g, "&#9679;");
                multiSuspend.attr("data-sim-line-type", "MULTISURF");
                multiSuspend.attr("data-sub", subId);
                multiSimIccid.text(multiSurfSimInfo.iccId);
                multiSimType.text($.i18n("subscription.config." + multiSurfSimInfo.simType));
                multiSimStatus.text($.i18n("subscription.config." + multiSurfSimInfo.status));
                multiPin.html(hiddenMultiPin).attr("data-initial", initialMultiPin);
                multiPuk.html(hiddenMultiPuk).attr("data-initial", initialMultiPuk);
                if ("ACTIVE" !== sessionStorage.getItem("subStatus")) multiBlockSim.hide();
                else multiBlockSim.fadeIn();
                if ("BLOCKED" === multiSurfSimInfo.status) {
                    multiSimStatusBlock.show();
                    multiCallCenter.html(cci18n);
                    multiCallCenter.removeClass("hidden");
                    multiInfoBlock.addClass("hidden");
                    multiBlockSim.hide();
                } else {
                    confirmSuspendSim(multiBlockSim, multiSuspend, multiUseNewSimError, multiUseNewSimValid);
                    multiInfoBlock.html(blocki18n);
                    multiInfoBlock.removeClass("hidden");
                    multiCallCenter.addClass("hidden");
                }
                if ("ESIM" !== multiSurfSimInfo.simType)
                    if ("ACTIVE" === sessionStorage.getItem("subStatus")) {
                        fillCurrentAddress($("#multiAddressDeliveryCurrentLabel"), subId);
                        callAcs(multiZipcode, multiStreet, multiCity, multiHouseNb, $("#multiSimDeliveryEditError"), $("#multiSimDeliveryForm"), $("#multiSimDeliverySubmit"), $("#multiSimDeliveryVisibleArea"));
                        $("#multiResetSimDelivery")
                            .off("click")
                            .on("click", function () {
                                $("#multiNewSimDeliveryForm").show();
                                $("#multiSimDeliveryForm").hide();
                                $("#multiSimDeliveryVisibleArea").show();
                                multiOrderSim.attr("aria-expanded", false).focus();
                            });
                        $(':radio[name="multiAddressDelivery"]')
                            .off("change")
                            .on("change", function () {
                                $("#multiSubmitSimDelivery").show().addClass("btn");
                                if ("currentAddress" === $(this).val()) {
                                    $("#multiAddressDeliveryEdit").hide();
                                    var currentSub = $("#" + subId);
                                    postSimCardDeliveryAPI(
                                        subId,
                                        $("#multiSimDeliveryForm"),
                                        $("#multiNewSimDeliveryForm"),
                                        $("#multiSimDeliveryEditValid"),
                                        $("#multiSimDeliveryEditError"),
                                        $("#multiSimDeliverySubmit"),
                                        multiSimType.text().toUpperCase(),
                                        currentSub.attr("data-country"),
                                        currentSub.attr("data-city"),
                                        currentSub.attr("data-zipcode"),
                                        currentSub.attr("data-houseNb"),
                                        currentSub.attr("data-careOf"),
                                        currentSub.attr("data-street"),
                                        "MULTISURF",
                                        $("#multiSimDeliveryVisibleArea"),
                                        multiOrderSim,
                                        false
                                    );
                                } else {
                                    $("#multiAddressDeliveryEdit").show();
                                    postSimCardDeliveryAPI(
                                        subId,
                                        $("#multiSimDeliveryForm"),
                                        $("#multiNewSimDeliveryForm"),
                                        $("#multiSimDeliveryEditValid"),
                                        $("#multiSimDeliveryEditError"),
                                        $("#multiSimDeliverySubmit"),
                                        multiSimType.text().toUpperCase(),
                                        $("#multiCountry"),
                                        $("#multiCity"),
                                        $("#multiZipcode"),
                                        $("#multiHouseNb"),
                                        $("#multiCareOf"),
                                        $("#multiStreet"),
                                        "MULTISURF",
                                        $("#multiSimDeliveryVisibleArea"),
                                        multiOrderSim,
                                        true
                                    );
                                }
                            });
                        displayEditForm(multiOrderSim, $("#multiSimDeliveryForm"), $("#multiSimDeliveryVisibleArea"));
                    } else multiOrderSim.hide();
                multiSurfInfo.fadeIn().removeClass("hidden");
                toggleCode(toggleMultiPin, multiPin, initialMultiPin, hiddenMultiPin);
                toggleCode(toggleMultiPuk, multiPuk, initialMultiPuk, hiddenMultiPuk);
            }
        })
        .fail(function () {
            displayMessageAfterSubmit(subConfigError, null, "", $.i18n("utils.technical_error"));
        });
}
function toggleCode(toggler, target, initialValue, hiddenValue) {
    if (toggler.length > 0)
        toggler.off("click").on("click", function () {
            var btnLabel = $(this).text() == $.i18n("form_controls.show") ? $.i18n("form_controls.hide") : $.i18n("form_controls.show");
            $(this).text(btnLabel);
            if (target.html() === initialValue) target.html(hiddenValue);
            else target.html(initialValue);
        });
}
function toggleOrderNewSimButton(button, toDisable, textToDisplay) {
    toggleButton(button, toDisable, "");
    if (toDisable) textToDisplay.parent().removeClass("hidden");
}
function toggleButton(button, toDisable, tooltip) {
    true === toDisable ? button.prop("disabled", true) : button.prop("disabled", false);
    if ("" !== tooltip) button.prop("title", tooltip);
}
function is1MonthBetweenDates(d1, d2) {
    let is1MonthBetween = false;
    if (d1) {
        let months = 12 * (d2.getFullYear() - d1.getFullYear());
        months -= d1.getMonth();
        months += d2.getMonth();
        is1MonthBetween = months <= 0;
    }
    return is1MonthBetween;
}
function getSubscriptionsUsagesAPI(subId, lang) {
    var subUsage = $("#subUsage"),
        voiceResultConstructor = "",
        smsResultConstructor = "",
        dataResultConstructor = "",
        voiceResultContainer = $("#voiceResultContainer"),
        smsResultContainer = $("#smsResultContainer"),
        dataResultContainer = $("#dataResultContainer"),
        subUsageError = $("#subUsageError");
    getSubscriptionsUsages(subId, lang)
        .done(function (result) {
            if (null !== result) {
                var dataResult = "undefined" !== typeof result.data.DATA ? result.data.DATA : "",
                    voiceResult = "undefined" !== typeof result.voiceSmsMms.VOICE ? result.voiceSmsMms.VOICE : "",
                    smsResult = "undefined" !== typeof result.voiceSmsMms.SMS ? result.voiceSmsMms.SMS : "",
                    dataTitle = $.i18n("subscription.table_title.data"),
                    voiceTitle = $.i18n("subscription.table_title.voice"),
                    smsTitle = $.i18n("subscription.table_title.sms"),
                    noResult = '<p class="space-bottom">' + $.i18n("utils.labels.no_result") + "</p>";
                if ("" !== dataResult) displayTableResult(dataResultContainer, dataResultConstructor, dataTitle, dataResult, "subscription");
                else dataResultContainer.append("<h2>" + dataTitle + "</h2>" + noResult);
                if ("" !== voiceResult) displayTableResult(voiceResultContainer, voiceResultConstructor, voiceTitle, voiceResult, "subscription");
                else voiceResultContainer.append("<h2>" + voiceTitle + "</h2>" + noResult);
                if ("" !== smsResult) displayTableResult(smsResultContainer, smsResultConstructor, smsTitle, smsResult, "subscription");
                else smsResultContainer.append("<h2>" + smsTitle + "</h2>" + noResult);
                updateFilterListToggler();
                subUsage.removeClass("hidden");
                Sortable.init();
                dropdownSort();
                paginateTable($("#subUsage .hybrid-table"), 10);
                var tableUsages = document.querySelectorAll("#subUsage .hybrid-table");
                for (var i = 0; i < tableUsages.length; i++)
                    tableUsages[i].addEventListener("Sortable.sorted", function (e) {
                        var tableId = e.target.attributes[0];
                        doPagination($("#" + tableId.value), 10);
                    });
                seeMore();
            }
        })
        .fail(function (result) {
            if (result) {
                displayMessageAfterSubmit(subUsageError, null, "", $.i18n("utils.technical_error"));
                subUsage.removeClass("hidden");
            }
        });
}
function postRoamingCostAPI(subID) {
    var newDataCost = $("#newDataCost"),
        newVoiceCost = $("#newVoiceCost"),
        currentDataCost = $("#currentDataCost"),
        currentVoiceCost = $("#currentVoiceCost"),
        roamingCostEditError = $("#roamingCostEditError"),
        roamingCostEditValid = $("#roamingCostEditValid"),
        submitNewRoamingCost = $("#submitNewRoamingCost"),
        newRoamingCostForm = $("#newRoamingCostForm");
    var payload = {},
        newDataCostFormated = (newDataCost.val() / 100).toFixed(2),
        newVoiceCostFormated = (newVoiceCost.val() / 100).toFixed(2);
    newRoamingCostForm.addClass("loading").hide();
    if (currentDataCost.text() !== newDataCostFormated || currentVoiceCost.text() !== newVoiceCostFormated)
        payload = {
            limits: { ROAMING_DATA: currentDataCost.text() !== newDataCostFormated ? parseInt(newDataCost.val()) : void 0, ROAMING_VOICE_SMS: currentVoiceCost.text() !== newVoiceCostFormated ? parseInt(newVoiceCost.val()) : void 0 },
        };
    else {
        newRoamingCostForm.removeClass("loading");
        displayMessageAfterEdit(roamingCostEditError, newRoamingCostForm, submitNewRoamingCost, "big-edit", $.i18n("utils.labels.select_" + BRAND.name), true);
        return;
    }
    postNewRoamingCost(subID, JSON.stringify(payload))
        .done(function () {
            newRoamingCostForm.removeClass("loading").hide();
            getRoamingCostAPI(subID);
            displayMessageAfterEdit(roamingCostEditValid, newRoamingCostForm, submitNewRoamingCost, "big-edit", $.i18n("utils.valid.update_refresh"), false);
        })
        .fail(function () {
            newRoamingCostForm.removeClass("loading").hide();
            displayMessageAfterEdit(roamingCostEditError, newRoamingCostForm, submitNewRoamingCost, "big-edit", $.i18n("utils.technical_error"), true);
        });
}
function postSimCardDeliveryAPI(
    subID,
    simDeliveryForm,
    newSimDeliveryForm,
    simDeliveryEditValid,
    simDeliveryEditError,
    simDeliverySubmit,
    simType,
    country,
    city,
    zipcode,
    houseNb,
    careOf,
    street,
    simLineType,
    simDeliveryVisibleArea,
    orderSim,
    hasInputValues
) {
    if (newSimDeliveryForm.length) {
        const ongoingSimOrder = $("#ongoingSimOrder");
        newSimDeliveryForm
            .off("submit")
            .on("submit", function (event) {
                event.preventDefault();
                if (validateForm(newSimDeliveryForm, simDeliverySubmit)) {
                    newSimDeliveryForm.addClass("loading");
                    var payload = { swapSimType: simType, simLineType: simLineType };
                    let countryVal = (cityVal = zipCodeVal = houseNbVal = streetVal = careOfVal = "");
                    if (!hasInputValues) {
                        let currentSub = $("#" + subID);
                        countryVal = currentSub.attr("data-country");
                        cityVal = currentSub.attr("data-city");
                        zipCodeVal = currentSub.attr("data-zipcode");
                        houseNbVal = currentSub.attr("data-housenb");
                        careOfVal = currentSub.attr("data-careof");
                        streetVal = currentSub.attr("data-street");
                    } else {
                        countryVal = country.find(":radio:checked").val();
                        cityVal = city.val().trim();
                        zipCodeVal = zipcode.val().trim();
                        houseNbVal = houseNb.val().trim();
                        careOfVal = careOf.val().trim();
                        streetVal = street.val().trim();
                    }
                    payload.address = { country: countryVal, city: cityVal, postalCode: zipCodeVal, houseNumber: houseNbVal, careOf: careOfVal, street: streetVal };
                    postACSAPI(simDeliveryEditValid, simDeliveryEditError, newSimDeliveryForm, simDeliverySubmit, houseNbVal, cityVal, zipCodeVal, streetVal).then(function (resultACS) {
                        if ("success" === resultACS)
                            postSimCardDelivery(subID, JSON.stringify(payload))
                                .done(function () {
                                    newSimDeliveryForm.removeClass("loading").hide();
                                    displayMessageAfterEdit(
                                        simDeliveryEditValid,
                                        newSimDeliveryForm,
                                        simDeliverySubmit,
                                        "inline-edit",
                                        $.i18n("subscription.config.simcard_ongoing_delivery"),
                                        false,
                                        callbackEditClosed.bind(this, orderSim, ongoingSimOrder)
                                    );
                                })
                                .fail(function (result) {
                                    newSimDeliveryForm.removeClass("loading").hide();
                                    displayMessageAfterEdit(simDeliveryEditError, newSimDeliveryForm, simDeliverySubmit, "inline-edit", $.i18n("utils.technical_error"), true);
                                });
                        else newSimDeliveryForm.removeClass("loading");
                    });
                }
            })
            .on("reset", function (event) {
                event.preventDefault();
                newSimDeliveryForm.show();
                simDeliveryForm.hide();
                simDeliveryVisibleArea.show();
                orderSim.attr("aria-expanded", false).removeAttr("aria-disabled").focus();
            });
    }
}
function callbackEditClosed(orderSim, ongoingSimOrder) {
    toggleOrderNewSimButton(orderSim, true, ongoingSimOrder);
}
function postUpsellAPI(subID, currentLang, currentUpsell, triggerConfirmation) {
    return new Promise(function (resolve, reject) {
        var parentID = $("#" + currentUpsell.attr("data-trigger")),
            messageValid = $("#" + currentUpsell.attr("data-valid")),
            submitID = parentID.find('button[type="submit"]'),
            payload = { code: currentUpsell.attr("data-code"), zoneId: currentUpsell.attr("data-zoneId"), language: currentLang, id: currentUpsell.attr("data-id"), subscriptionId: subID, eventType: "DATA" };
        postUpsell(JSON.stringify(payload))
            .done(function () {
                parentID.removeClass("loading");
                displayMessageAfterSubmit(messageValid, submitID, "", $.i18n("utils.valid.buy_upsell_success_" + BRAND.name));
                parentID.empty();
                messageValid.next("p").hide();
                resolve("success");
            })
            .fail(function (result) {
                parentID.removeClass("loading");
                triggerConfirmation.parents("form").find(".custom-radio").show();
                triggerConfirmation.show();
                $("#confirmBuyUpsellParagraph").hide();
                $("#confirmBuyUpsellParagraph + div").hide();
                if (402 === result.status) displayMessageAfterSubmit(parentID.find(".message--error"), submitID, "", $.i18n("utils.error.buy_upsell_refill_" + BRAND.name));
                else displayMessageAfterSubmit(parentID.find(".message--error"), submitID, "", $.i18n("utils.error.buy_upsell_failed_" + BRAND.name));
                reject(result.responseJSON.errorCode);
            });
    });
}
function postZattooAPI(subID, login, optionCode, zattooEditError, zattooEditValid, zattooForm, zattooSubmit) {
    return new Promise(function (resolve, reject) {
        var payload = { login: login.val().trim(), packageCode: optionCode };
        postZattoo(subID, JSON.stringify(payload))
            .done(function () {
                zattooForm.hide();
                displayMessageAfterEdit(zattooEditValid, zattooForm, zattooSubmit, "big-edit", $.i18n("utils.valid.zattoo_configured"), false);
                resolve("success");
            })
            .fail(function (result) {
                zattooForm.hide();
                displayMessageAfterEdit(zattooEditError, zattooForm, zattooSubmit, "big-edit", $.i18n("utils.technical_error"), true);
                reject(result.responseJSON.errorCode);
            });
    });
}
function confirmSuspendSim(currrentForm, suspendSimBtn, messageContainerError, messageContainerValid) {
    if (suspendSimBtn.length)
        currrentForm
            .off("submit")
            .on("submit", function (event) {
                event.preventDefault();
                suspendSimBtn.attr({ "aria-expanded": "true", "aria-disabled": "true" });
                displayConfirmMessage(
                    messageContainerValid,
                    currrentForm,
                    null,
                    "inline-edit",
                    $.i18n("subscription.config.block_confirmation"),
                    "confirmSimSuspend",
                    suspendSim.bind(this, currrentForm, suspendSimBtn, messageContainerError, messageContainerValid)
                );
            })
            .on("reset", function (event) {
                event.preventDefault();
                suspendSimBtn.attr("aria-expanded", "false").removeAttr("aria-disabled").focus();
            });
}
function suspendSim(currrentForm, suspendSimBtn, messageContainerError, messageContainerValid) {
    var payload = { simLineType: suspendSimBtn.attr("data-sim-line-type") };
    postSuspendSim(suspendSimBtn.attr("data-sub"), JSON.stringify(payload))
        .done(function (result) {
            displayMessageAfterEdit(messageContainerValid, currrentForm, null, "inline-edit", $.i18n("utils.valid.blocked_" + BRAND.name), false, getSimInfo.bind(this, suspendSimBtn.attr("data-sub")));
        })
        .fail(function (result) {
            displayMessageAfterEdit(messageContainerValid, currrentForm, null, "inline-edit", $.i18n("utils.technical_error"), true);
        });
}
function swapSimAPI(swapSimBtn, messageContainerError, messageContainerValid) {
    if (swapSimBtn.length)
        swapSimBtn.unbind("click").on("click", function () {
            var payload = { iccid: swapSimBtn.attr("data-iccid") };
            postSwapSim(swapSimBtn.attr("data-sub"), JSON.stringify(payload))
                .done(function (result) {
                    displayMessageAfterEdit(messageContainerValid, null, null, "inline-edit", $.i18n("utils.valid.use_new_sim_" + BRAND.name), false);
                })
                .fail(function (result) {
                    if (result) displayMessageAfterEdit(messageContainerError, null, null, "inline-edit", $.i18n("utils.technical_error"), true);
                });
        });
}
function loadContractNb(hideMsisdn, msisdn) {
    return new Promise(function (resolve, reject) {
        var linkCustomerArea = $("#linkCustomerArea"),
            mobileFilePath = PATH_FORM_COMP + "profile/identifyMobile/by-contract.html",
            loadContractNb = loadPath(linkCustomerArea, mobileFilePath),
            currentLang = setDefaultLang().toLowerCase();
        loadContractNb.then(function (result) {
            if ("success" === result) {
                if (hideMsisdn) {
                    $("#registrationMobilePhone").attr("data-number", msisdn).removeAttr("required");
                    $("#helpContract").html($.i18n("profile.form.help_contract_" + BRAND.name));
                    if ("lidl" === BRAND.name) loadImage("#contractMobile", "./img/lidl/contract_mobile_" + currentLang + ".jpg", $.i18n("profile.image.mobile"));
                    else loadImage("#contractMobile", "./img/salt/contract_mobile_" + currentLang + ".jpg", $.i18n("profile.image.mobile"));
                    $("#regPhone").hide();
                }
                postLinkMobileByContractAPI();
                resolve();
            }
        });
    });
}
function loadHotp(resultPostMsisdn, resultPerson) {
    return new Promise(function (resolve, reject) {
        var msisdnStep = $("#msisdnStep"),
            hotpForm = PATH_FORM_COMP + "profile/identifyMobile/hotp.html",
            loadHotp = loadPath(msisdnStep, hotpForm);
        loadHotp.then(function (result) {
            if ("success" === result) {
                var dateBirth = $("#dateBirth");
                $("#helpHotp").text($.i18n("profile.form.help_hotp_" + BRAND.name));
                $("#submitMsisdn").hide();
                callDatepicker(dateBirth);
                submitHotp(resultPostMsisdn, resultPerson).then(function (resultPostHotp) {
                    if (resultPostHotp) resolve("success");
                });
            }
        });
    });
}
function loadPhoneNumber() {
    return new Promise(function (resolve, reject) {
        var mobileStep = $("#msisdnStep"),
            phoneNumberPath = PATH_FORM_COMP + "profile/identifyMobile/phone-number.html",
            loadPhoneNumber = loadPath(mobileStep, phoneNumberPath);
        loadPhoneNumber.then(function (result) {
            if ("success" === result) {
                $("#helpMsisdn").text($.i18n("profile.form.help_msisdn_" + BRAND.name));
                submitMsisdn();
            }
        });
    });
}
function loadRegisterPerson() {
    return new Promise(function (resolve, reject) {
        var msisdnStep = $("#msisdnStep"),
            registerPersonFilePath = PATH_FORM_COMP + "profile/identifyMobile/register-owner-user.html",
            loadRegisterPerson = loadPath(msisdnStep, registerPersonFilePath);
        loadRegisterPerson.then(function (result) {
            if ("success" === result) {
                $("#registerPersonLabel").text($.i18n("profile.form.register_person_" + BRAND.name));
                submitPerson()
                    .then(function (resultPostMsisdn) {
                        if (resultPostMsisdn) {
                            $("body").removeClass("loading");
                            loadHotp(resultPostMsisdn, true);
                            resolve("success");
                        }
                    })
                    .catch(function (resultPerson) {
                        if (resultPerson) {
                            $("body").removeClass("loading");
                            $("#submitRegisterType").removeAttr("disabled");
                        }
                    });
            }
        });
    });
}
function resendHotp(isUser) {
    return new Promise(function (resolve, reject) {
        var byMsisdnError = $("#byMsisdnError"),
            submitMsisdn = $("#submitMsisdn");
        submitMsisdn.off("click").on("click", function (event) {
            event.preventDefault();
            var payload = { msisdn: sessionStorage.getItem("registerMobilePhone"), linkUser: isUser };
            postLinkMobileByMsisdnAPI(byMsisdnError, submitMsisdn, payload)
                .then(function (result) {
                    if (result) {
                        $("#submitHotp").show().removeAttr("disabled");
                        submitMsisdn.hide();
                        submitHotp(result, isUser).then(function () {
                            resolve();
                        });
                    }
                })
                .catch(function (result) {
                    if (result) reject(result);
                });
        });
    });
}
function submitHotp(resultPostMsisdn, resultPerson) {
    return new Promise(function (resolve, reject) {
        var byMsisdnError = $("#byMsisdnError"),
            linkCustomerError = $("#linkCustomerError"),
            linkCustomerForm = $("#linkCustomerForm"),
            linkCustomerArea = $("#linkCustomerArea"),
            submitHotp = $("#submitHotp"),
            isUser = void 0 !== resultPerson ? true : false;
        if (linkCustomerForm.length)
            submitHotp.off("click").on("click", function (event) {
                event.preventDefault();
                if (validateForm(linkCustomerForm, submitHotp)) {
                    linkCustomerArea.addClass("loading");
                    var dateBirth = $("#dateBirth"),
                        dateOfBirth = dateToDateObject(dateBirth.val().trim()),
                        payload = { dateOfBirth: dateOfBirth, code: $("#hotpCode").val().trim(), transactionId: resultPostMsisdn.transactionId, msisdn: sessionStorage.getItem("registerMobilePhone"), linkUser: isUser };
                    postLinkMobileByMsisdnAPI(byMsisdnError, submitHotp, payload)
                        .then(function () {
                            linkCustomerArea.removeClass("loading");
                            linkCustomerValidated("self_registration_check_inbox");
                            resolve();
                        })
                        .catch(function (result) {
                            linkCustomerArea.removeClass("loading");
                            if ("WRONG_HOTP_CODE" === result) {
                                linkCustomerError.hide();
                                displayMessageAfterSubmit($("#byMsisdnError"), $("#submitMsisdn"), "", $.i18n("utils.error.WRONG_HOTP_CODE_" + BRAND.name));
                                $("#submitHotp").hide();
                                $("#submitMsisdn").show();
                                resendHotp(resultPerson);
                            }
                        });
                }
            });
    });
}
function submitMsisdn() {
    return new Promise(function (resolve, reject) {
        var byMsisdnError = $("#byMsisdnError"),
            linkCustomerError = $("#linkCustomerError"),
            linkCustomerForm = $("#linkCustomerForm"),
            linkCustomerArea = $("#linkCustomerArea"),
            submitMsisdn = $("#submitMsisdn");
        if (linkCustomerForm.length)
            submitMsisdn.off("click").on("click", function (event) {
                event.preventDefault();
                if (validateForm(linkCustomerForm, submitMsisdn)) {
                    linkCustomerArea.addClass("loading");
                    if ($("#phoneHotp")) sessionStorage.setItem("registerMobilePhone", $("#phoneHotp").attr("data-number"));
                    var payload = { msisdn: sessionStorage.getItem("registerMobilePhone"), linkUser: false };
                    postLinkMobileByMsisdnAPI(byMsisdnError, submitMsisdn, payload)
                        .then(function (result) {
                            if (result) {
                                linkCustomerError.hide();
                                linkCustomerArea.removeClass("loading");
                                loadHotp(result, true);
                                resolve(result);
                            }
                        })
                        .catch(function (result) {
                            if (result) {
                                linkCustomerError.hide();
                                linkCustomerArea.removeClass("loading");
                                if ("OWNER_IS_NOT_USER" === result) loadRegisterPerson(result);
                                reject(result);
                            }
                        });
                }
            });
    });
}
function submitPerson() {
    return new Promise(function (resolve, reject) {
        var byMsisdnError = $("#byMsisdnError"),
            linkCustomerError = $("#linkCustomerError"),
            linkCustomerForm = $("#linkCustomerForm"),
            linkCustomerSubmit = $("#linkCustomerSubmit"),
            submitRegisterType = $("#submitRegisterType");
        if (linkCustomerForm.length)
            submitRegisterType.on("click", function (event) {
                event.preventDefault();
                if (validateForm(linkCustomerForm, submitRegisterType)) {
                    var registerType = $('#registerType input[type="radio"]:checked'),
                        payload = { msisdn: sessionStorage.getItem("registerMobilePhone"), linkUser: registerType.val() };
                    if ("true" === registerType.val())
                        postLinkMobileByMsisdnAPI(byMsisdnError, submitRegisterType, payload)
                            .then(function (result) {
                                if (result) {
                                    linkCustomerError.hide();
                                    resolve(result);
                                }
                            })
                            .catch(function (result) {
                                if (result) {
                                    linkCustomerError.hide();
                                    reject(result);
                                }
                            });
                    else {
                        linkCustomerSubmit.show().attr("type", "submit");
                        loadContractNb(true, sessionStorage.getItem("registerMobilePhone"));
                        resolve("success");
                    }
                }
            });
    });
}
function backToMsisdn() {
    let mfaForm = $("#mfaSelectedChoiceForm"),
        backToMsisdnBtn = $("#backToMsisdn"),
        byMsisdnError = $("#mfaByMsisdnError");
    if (mfaForm.length)
        backToMsisdnBtn.off("click").on("click", function (event) {
            event.preventDefault();
            byMsisdnError.hide();
            loadMfaPhoneNumber().then(() => {
                $("#mfaPhoneHotp").val(phoneExtractorForDisplay(sessionStorage.getItem("mfaPhoneToValidate")));
            });
        });
}
function displayManageMfaSection() {
    return new Promise(function (resolve, reject) {
        let manageMfaContainer = $("#manageMfaSection"),
            mfaContainer = $("#mfaContainer"),
            titleMfa = $("#titleMfa"),
            content = PATH_FORM_COMP + "profile/mfa/template-manage-mfa.html",
            loadTemplate = loadPath(mfaContainer, content);
        titleMfa.text($.i18n("profile.mfa.title_profile"));
        loadTemplate.then(function (result) {
            loadStatusMfa().then(function (result) {
                if ("success" === result) {
                    manageMfaContainer.fadeIn().removeClass("hidden");
                    resolve();
                } else
                    loadMfaConfiguration().then(function (result) {
                        manageMfaContainer.fadeIn().removeClass("hidden");
                        resolve();
                    });
            });
        });
    });
}
function displayMfaConfigurationPage() {
    $("#wrapper").removeClass("hidden").focus();
    $("#loadingMsg").addClass("hidden");
    $("#titleMfa").text($.i18n("profile.mfa.title_config"));
    let mfaConfigPage = $("#mfaContainer"),
        step = PATH_FORM_COMP + "profile/mfa/steps/mfa-choice-step.html",
        loadStep = loadPath(mfaConfigPage, step);
    loadStep.then(function (result) {
        if ("success" === result) {
            $("#mfaDescriptionBeforeRadios").text($.i18n("profile.mfa.protect_account") + " " + $.i18n("profile.mfa.choose_protection"));
            $("#mfaDescriptionAfterRadios").html($.i18n("profile.mfa.explain_mfa_enabled"));
            var displayedItemPath = [PATH_FORM_COMP + "profile/mfa/send-by-msisdn.html", PATH_FORM_COMP + "profile/mfa/send-by-email.html"];
            customOnChange('#mfaContainerRadios input[type="radio"]', $("#mfaContainerSelectedChoice"), displayedItemPath, manageSelectedTypeMfa);
            $("#mfaBySms").prop("checked", true).trigger("change");
            loadSkipConfig();
        }
    });
}
function enableMfaEmail() {
    return new Promise(function (resolve, reject) {
        let byEmailError = $("#mfaByEmailError"),
            mfaContainer = $("#mfaContainerSelectedChoice"),
            enableMfaEmailBtn = $("#enableMfaEmail");
        enableMfaEmailBtn.off("click").on("click", function (event) {
            event.preventDefault();
            mfaContainer.addClass("loading");
            payload = { enableMfaEmail: true, bypass: false, configured: true };
            postUpdateMfaStartAPI(byEmailError, enableMfaEmailBtn, payload)
                .then(function () {
                    mfaContainer.removeClass("loading");
                    loadMfaConfirmedStep();
                    resolve();
                })
                .catch(function (result) {
                    if (result) {
                        mfaContainer.removeClass("loading");
                        reject(result);
                    }
                });
        });
    });
}
function loadMfaConfiguration() {
    return new Promise(function (resolve, reject) {
        let mfaConfigContainer = $("#changeMfaContainer"),
            step = PATH_FORM_COMP + "profile/mfa/steps/mfa-choice-step.html",
            loadStep = loadPath(mfaConfigContainer, step);
        loadStep.then(function (result) {
            if ("success" === result) {
                $("#mfaDescriptionBeforeRadios").text($.i18n("profile.mfa.choose_protection"));
                $("#mfaDescriptionAfterRadios").html($.i18n("profile.mfa.explain_mfa_enabled_extended"));
                skipConfigMfa();
                var displayedItemPath = [PATH_FORM_COMP + "profile/mfa/send-by-msisdn.html", PATH_FORM_COMP + "profile/mfa/send-by-email.html"];
                customOnChange('#mfaContainerRadios input[type="radio"]', $("#mfaContainerSelectedChoice"), displayedItemPath, manageSelectedTypeMfa);
                $("#mfaBySms").prop("checked", true).trigger("change");
                resolve();
            }
        });
    });
}
function loadMfaConfirmedStep() {
    return new Promise(function (resolve, reject) {
        let step = PATH_FORM_COMP + "profile/mfa/steps/mfa-confirmed-step.html",
            container = $("#mfaContainer"),
            loadStep = loadPath(container, step);
        $("#titleMfa").text($.i18n("profile.mfa.title_account_secured"));
        loadStep.then(function (result) {
            if ("success" === result) {
                $("#mfaConfirmedMessage").html($.i18n("profile.mfa.text_multifactor_protection"));
                let okMfaConfigured = $("#okMfaConfigured");
                okMfaConfigured.off("click").on("click", function (event) {
                    event.preventDefault();
                    if ($(this).closest("#mfaConfigurationPage").length) navigation(okMfaConfigured.attr("href"));
                    else
                        displayManageMfaSection().then(function (result) {
                            $("#manageMfaSection").focus();
                        });
                });
                resolve();
            }
        });
    });
}
function loadMfaPhoneNumber() {
    return new Promise(function (resolve, reject) {
        let mobileStep = $("#mfaMsisdnStep"),
            phoneNumberPath = PATH_FORM_COMP + "profile/mfa/phone-number.html",
            loadPhoneNumber = loadPath(mobileStep, phoneNumberPath);
        loadPhoneNumber.then(function (result) {
            if ("success" === result) {
                $("#mfaHelpMsisdn").text($.i18n("profile.form.help_msisdn_" + BRAND.name));
                sendCodeMfa();
            }
            resolve();
        });
    });
}
function loadSkipConfig() {
    return new Promise((resolve, reject) => {
        let mfaContainerAfterValidation = $("#mfaContainerAfterValidation"),
            skipComponent = PATH_FORM_COMP + "profile/mfa/skip-config-mfa.html",
            loadSkipConfig = loadPath(mfaContainerAfterValidation, skipComponent);
        loadSkipConfig.then((result) => {
            skipConfigMfa();
            resolve();
        });
    });
}
function loadStatusMfa() {
    return new Promise(function (resolve, reject) {
        let statusMfaContainer = $("#statusMfaContainer"),
            errorContainer = $("#profileLoginInfoError"),
            statusMfaTemplate = PATH_FORM_COMP + "profile/mfa/status-mfa.html";
        getCredentialInfoAPI(errorContainer)
            .then(function (resultCredential) {
                if (resultCredential.mfa && (null != resultCredential.mfa.email || null != resultCredential.mfa.phone)) {
                    statusMfaContainer.removeClass("hidden");
                    let loadStatus = loadPath(statusMfaContainer, statusMfaTemplate);
                    loadStatus.then(function (result) {
                        let mfaEnabledSwitch = $("#mfaEnabled"),
                            editMfaChoiceBtn = $("#editMfaChoice"),
                            mfaActiveFactorParagraph = $("#mfaActiveFactor");
                        if (null != resultCredential.mfa.email)
                            mfaActiveFactorParagraph.html(
                                `\n                                <strong>${$.i18n("profile.mfa.email_address")}</strong>\n                                <span> ${resultCredential.mfa.email}</span>\n                            `
                            );
                        if (null != resultCredential.mfa.phone)
                            mfaActiveFactorParagraph.html(
                                `\n                                <strong>${$.i18n("profile.mfa.phone_number")}</strong>\n                                <span> ${phoneExtractorForDisplay(
                                    resultCredential.mfa.phone
                                )}</span>\n                            `
                            );
                        if ("ENABLED" !== resultCredential.mfa.bypass) {
                            mfaEnabledSwitch.prop("checked", true);
                            mfaActiveFactorParagraph.removeClass("hidden");
                        }
                        mfaEnabledSwitch.off("change").on("change", (e) => {
                            mfaActiveFactorParagraph.toggleClass("hidden", !mfaEnabledSwitch.is(":checked"));
                        });
                        editMfaChoiceBtn.off("click").on("click", (e) => {
                            loadMfaConfiguration().then((result) => {
                                $("#changeMfaContainer").addClass("space-top--large");
                                resolve();
                            });
                        });
                        toggleMfaEnabling();
                        resolve("success");
                    });
                } else resolve("");
            })
            .catch(function (result) {
                if (result) {
                    mfaContainer.removeClass("loading");
                    reject(result);
                }
            });
    });
}
function loadValidateHotp(resultMfaUpdate, msisdn) {
    return new Promise(function (resolve, reject) {
        let msisdnStep = $("#mfaMsisdnStep"),
            hotpForm = PATH_FORM_COMP + "profile/mfa/validate-hotp.html",
            loadHotp = loadPath(msisdnStep, hotpForm);
        loadHotp.then(function (result) {
            if ("success" === result) {
                $("#mfaHelpHotp").text($.i18n("profile.mfa.check_phone"));
                $("#mfaLabelHotpCode").text($.i18n("profile.mfa.helper_code_phone", msisdn));
                backToMsisdn();
                validateCodeMfa(resultMfaUpdate);
                resolve();
            }
        });
    });
}
function manageSelectedTypeMfa(event, fieldTrigger, targetDisplay, displayedItemPath) {
    return new Promise(function (resolve, reject) {
        var customLoad = loadOnTrigger(event, fieldTrigger, targetDisplay, displayedItemPath);
        customLoad.then(function (result) {
            if ("" !== result)
                switch (event.currentTarget.id) {
                    case "mfaBySms":
                        loadMfaPhoneNumber();
                        resolve();
                        break;
                    case "mfaByEmail":
                        $("#mfaEmail").text(sessionStorage.getItem("identifier"));
                        enableMfaEmail();
                        resolve();
                        break;
                    default:
                        break;
                }
        });
    });
}
function sendCodeMfa() {
    return new Promise(function (resolve, reject) {
        let byMsisdnError = $("#mfaByMsisdnError"),
            mfaForm = $("#mfaSelectedChoiceForm"),
            mfaContainer = $("#mfaContainerSelectedChoice"),
            sendCodeMfaBtn = $("#sendCodeMfa");
        if (mfaForm.length)
            sendCodeMfaBtn.off("click").on("click", function (event) {
                event.preventDefault();
                if (validateForm(mfaForm, sendCodeMfaBtn)) {
                    mfaContainer.addClass("loading");
                    if ($("#mfaPhoneHotp")) sessionStorage.setItem("mfaPhoneToValidate", $("#mfaPhoneHotp").attr("data-number"));
                    let payload = { msisdn: sessionStorage.getItem("mfaPhoneToValidate"), bypass: false, configured: true };
                    postUpdateMfaStartAPI(byMsisdnError, sendCodeMfaBtn, payload)
                        .then(function (result) {
                            if (result) {
                                mfaContainer.removeClass("loading");
                                loadValidateHotp(result, $("#mfaPhoneHotp").val());
                                resolve(result);
                            }
                        })
                        .catch(function (result) {
                            if (result) {
                                mfaContainer.removeClass("loading");
                                reject(result);
                            }
                        });
                }
            });
    });
}
function skipConfigMfa() {
    return new Promise(function (resolve, reject) {
        let mfaConfigError = $("#mfaConfigError"),
            skipConfigMfaBtn = $("#skipConfigMfa"),
            checkboxDontAskAgain = $("#mfaConfigNotAskAgain"),
            mfaConfigurationContainer = $("#mfaContainer");
        skipConfigMfaBtn.off("click").on("click", function (event) {
            event.preventDefault();
            if (checkboxDontAskAgain.prop("checked")) {
                mfaConfigurationContainer.addClass("loading");
                let payload = { configured: true };
                postUpdateMfaStartAPI(mfaConfigError, skipConfigMfaBtn, payload)
                    .then(function () {
                        mfaConfigurationContainer.removeClass("loading");
                        navigation(skipConfigMfaBtn.attr("href"));
                        resolve();
                    })
                    .catch(function (result) {
                        if (result) {
                            mfaConfigurationContainer.removeClass("loading");
                            reject(result);
                        }
                    });
            } else {
                navigation(skipConfigMfaBtn.attr("href"));
                resolve();
            }
        });
        resolve();
    });
}
function toggleMfaEnabling() {
    return new Promise((resolve, reject) => {
        let toggleBtn = $("#toggleMfaEnabling"),
            containerMfaStatus = $("#statusMfaContainer"),
            containerActiveFactor = $("#mfaActiveFactor"),
            errorContainer = $("#profileLoginInfoError"),
            confirmMessage = $("#mfaChangeStatusConfirmationMessage"),
            errorMessage = $("#mfaChangeStatusErrorMessage"),
            mfaStatusForm = $("#mfaStatusForm");
        if (mfaStatusForm.length)
            mfaStatusForm
                .on("submit", function (event) {
                    event.preventDefault();
                    containerMfaStatus.addClass("loading");
                    const mfaEnabled = $("#mfaEnabled").prop("checked");
                    let payload = { bypass: !mfaEnabled };
                    postUpdateMfaStartAPI(errorContainer, toggleBtn, payload)
                        .then(() => {
                            containerMfaStatus.removeClass("loading");
                            if (mfaEnabled) containerActiveFactor.removeClass("hidden");
                            else containerActiveFactor.addClass("hidden");
                            displayMessageAfterEdit(confirmMessage, mfaStatusForm, toggleBtn, "inline-edit", $.i18n("utils.valid.update"), false);
                            resolve();
                        })
                        .catch((result) => {
                            if (result) {
                                containerMfaStatus.removeClass("loading");
                                displayMessageAfterEdit(errorMessage, mfaStatusForm, toggleBtn, "inline-edit", $.i18n("utils.technical_error"), true, null, true);
                                reject(result);
                            }
                        });
                })
                .on("reset", function (event) {
                    event.preventDefault();
                    mfaStatusForm.removeClass("hidden");
                    toggleBtn.focus();
                });
    });
}
function validateCodeMfa(resultPostMfa) {
    return new Promise(function (resolve, reject) {
        let byMsisdnError = $("#mfaByMsisdnError"),
            mfaForm = $("#mfaSelectedChoiceForm"),
            mfaContainer = $("#mfaContainerSelectedChoice"),
            validateCodeMfaBtn = $("#validateCode"),
            mfaHotpCodeInput = $("#mfaHotpCode"),
            backToMsisdnBtn = $("#backToMsisdn");
        if (mfaForm.length)
            validateCodeMfaBtn.off("click").on("click", function (event) {
                event.preventDefault();
                if (validateForm(mfaForm, validateCodeMfaBtn)) {
                    mfaContainer.addClass("loading");
                    payload = { code: $("#mfaHotpCode").val().trim(), token: resultPostMfa.token };
                    postUpdateMfaEndAPI(byMsisdnError, payload)
                        .then(function () {
                            mfaContainer.removeClass("loading");
                            loadMfaConfirmedStep();
                            resolve();
                        })
                        .catch(function (result) {
                            if (result) {
                                mfaContainer.removeClass("loading");
                                validateCodeMfaBtn.hide();
                                mfaHotpCodeInput.attr("disabled", true);
                                backToMsisdnBtn.focus();
                                reject(result);
                            }
                        });
                }
            });
    });
}
function loadAskPortin(aCustomerDetails) {
    return new Promise(function (resolve, reject) {
        var fnpFormContainer = $("#portinStep"),
            portinError = $("#portinError"),
            fnpFormItemPath = PATH_FORM_COMP + "/telephony/ask-fnp-form.html",
            loadAskPortin = loadPath(fnpFormContainer, fnpFormItemPath),
            customerId = sessionStorage.getItem("custid"),
            domain = sessionStorage.getItem("domain");
        loadAskPortin.then(function (result) {
            if ("success" === result) {
                portinError.hide();
                $("#resetaskPortin")
                    .off("click")
                    .on("click", function () {
                        $("#ongoingPortin").fadeOut();
                        $("#askPortin").show();
                    });
                $("#askPortinForm").on("submit", function (event) {
                    event.preventDefault();
                    if (validateForm($("#askPortinForm"), $("#requestPortin")))
                        postRegisterPortinAPI(aCustomerDetails).then(function (resultRegister) {
                            if (resultRegister)
                                loadPortinPoa().then(function (resultLoadPoa) {
                                    if ("success" === resultLoadPoa)
                                        $("#downloadPoa").on("click", function () {
                                            getPortinDocumentAPI(customerId, domain, resultRegister.id).then(function (resultPDF) {
                                                var pdfName = $.i18n("subscription.telephony.fnp_document_name");
                                                downloadDocument(resultPDF, pdfName);
                                                loadSendPortin(customerId, domain, resultRegister.id);
                                            });
                                        });
                                });
                        });
                });
                $("#ownerLine")
                    .off("change")
                    .on("change", function () {
                        if ($("#ownerLine").is(":checked")) $("#ownerIdentity").addClass("hidden");
                        else $("#ownerIdentity").removeClass("hidden");
                    });
                $("#ongoingPortin").fadeIn();
                resolve("success");
            }
        });
    });
}
function loadPortinPoa() {
    return new Promise(function (resolve, reject) {
        var fnpFormContainer = $("#portinStep"),
            fnpFormItemPath = PATH_FORM_COMP + "/telephony/download-poa.html",
            loadPortinPoa = loadPath(fnpFormContainer, fnpFormItemPath);
        loadPortinPoa.then(function (result) {
            if ("success" === result) {
                $("#ongoingPortin").fadeIn();
                resolve("success");
            }
        });
    });
}
function loadSendPortin(customerId, domain, portinId) {
    return new Promise(function (resolve, reject) {
        var fnpFormContainer = $("#portinStep"),
            fnpFormItemPath = PATH_FORM_COMP + "/telephony/send-poa.html",
            loadSendPortin = loadPath(fnpFormContainer, fnpFormItemPath);
        loadSendPortin.then(function (result) {
            $("#ongoingPortin").fadeIn();
            if ("success" === result) {
                fileUpload();
                submitPortin($("#sendPortinForm"), $("#sendPortin"), customerId, domain, portinId);
                resolve("success");
            }
        });
    });
}
function loadDiscountActivated() {
    return new Promise(function (resolve, reject) {
        var mobileDiscountStepContainer = $("#mobileDiscountStepContainer"),
            mobileDiscountItemPath = PATH_JS_COMP + "/overview-fix/mobile-discount/discount-activated.html",
            loadDiscountActivated = loadPath(mobileDiscountStepContainer, mobileDiscountItemPath);
        loadDiscountActivated.then(function (result) {
            if ("success" === result) resolve("success");
        });
    });
}
function loadHotpForm() {
    return new Promise(function (resolve, reject) {
        var mobileDiscountStepContainer = $("#mobileDiscountStepContainer"),
            mobileDiscountItemPath = PATH_JS_COMP + "/overview-fix/mobile-discount/hotp-form.html",
            loadHotpForm = loadPath(mobileDiscountStepContainer, mobileDiscountItemPath);
        loadHotpForm.then(function (result) {
            if ("success" === result) resolve("success");
        });
    });
}
function loadMobileDiscount(customerID) {
    var mobileDiscountContainer = $("#mobileDiscountContainer"),
        mobileDiscountFormItemPath = PATH_JS_COMP + "overview-fix/mobile-discount-form.html",
        loadMobileDiscount = loadPath(mobileDiscountContainer, mobileDiscountFormItemPath);
    return loadMobileDiscount.then(function (result) {
        if ("success" === result) {
            getMobileDiscountAPI(customerID, $("#mobileDiscountFormEditError"), $("#mobileDiscountFormEditValid"));
            if ($("#hotpEnterCode").length) {
                $("#hotpEnterCode").text($.i18n("form_controls.input.enter_code_" + BRAND.name));
                $("#hotpPhone").text($.i18n("form_controls.input.phone_number_" + BRAND.name));
            }
        }
    });
}
function loadStartMobileDiscount() {
    return new Promise(function (resolve, reject) {
        var mobileDiscountStepContainer = $("#mobileDiscountStepContainer"),
            mobileDiscountItemPath = PATH_JS_COMP + "/overview-fix/mobile-discount/mobile-discount.html",
            loadStartMobileDiscount = loadPath(mobileDiscountStepContainer, mobileDiscountItemPath);
        loadStartMobileDiscount.then(function (result) {
            if ("success" === result) resolve("success");
        });
    });
}
function displayFormConfirmLinkAccount(skyDiscountContainer, skyAccountEmail) {
    const htmlFilePath = PATH_JS_COMP + "sky/mobile/subscription/sky-discount-confirm-link-account.html";
    const subtitleHtml = $.i18n("subscription.discount.confirm_link_subtitle_sky");
    const skyDiscountContainerError = $("#skySubscriptionDiscountEligibilityContainerError");
    return loadPath(skyDiscountContainer, htmlFilePath).then(function () {
        const buttonSubmitVerificationCodeSkyAccountLink = $("#buttonSubmitVerificationCodeSkyAccountLink");
        const skyDiscountConfirmLinkAccountForm = $("#skyDiscountConfirmLinkAccountForm");
        $("#skyDiscountConfirmLinkSubtitle").html(subtitleHtml);
        skyDiscountConfirmLinkAccountForm
            .off("submit")
            .on("submit", (event) => {
                event.preventDefault();
                if (validateForm(skyDiscountConfirmLinkAccountForm, $("#verificationCodeSkyAccountLinkInput")))
                    return handleSubmitSkyDiscountConfirmLink(skyAccountEmail, skyDiscountContainerError, buttonSubmitVerificationCodeSkyAccountLink, skyDiscountConfirmLinkAccountForm);
            })
            .off("reset")
            .on("reset", (event) => {
                event.preventDefault();
                return displaySkySubscriptionDiscountContainer();
            });
    });
}
function handleSubmitSkyDiscountConfirmLink(skyAccountEmail, skyDiscountContainerError, submitSkyAccountConfirmation, skyDiscountConfirmLinkAccountForm) {
    const skyDiscountContainer = $("#skySubscriptionDiscountEligibilityContainer");
    const verificationCode = $("#inputVerificationCodeSkyAccountLink").val().trim();
    return confirmLinkCustomerSkyAccountAPI(verificationCode, skyAccountEmail, skyDiscountContainerError, submitSkyAccountConfirmation)
        .then(() => {
            displayMessageAfterEdit($("#skySubscriptionDiscountLinkValid"), skyDiscountConfirmLinkAccountForm, null, "", $.i18n("utils.valid.update_refresh"), false);
        })
        .catch((result) => {
            switch (result.status) {
                case 409:
                    if ("SKY_ACCOUNT_ALREADY_LINKED" === result.responseJSON.errorCode) displaySkyAccountAlreadyLinked(skyDiscountContainer);
                    else if ("INVALID_VALIDATION_CODE" === result.responseJSON.errorCode) displayMessageAfterSubmit(skyDiscountContainerError, submitSkyAccountConfirmation, "", $.i18n("subscription.discount.confirm_code_error_sky"));
                    else displayMessageAfterSubmit(skyDiscountContainerError, submitSkyAccountConfirmation, "", $.i18n("utils.technical_error"));
                    break;
                default:
                    displayMessageAfterSubmit(skyDiscountContainerError, submitSkyAccountConfirmation, "", $.i18n("utils.technical_error"));
                    break;
            }
        });
}
function displayFormConfirmUnlinkAccount(skyDiscountContainer) {
    const msisdn = prettifyPhoneNumber(sessionStorage.getItem("msisdn"));
    const currentSubscriptionId = sessionStorage.getItem("subid");
    const monthlyPrice = Number($("#" + currentSubscriptionId).attr("data-rc"));
    const htmlFilePath = PATH_JS_COMP + "sky/mobile/subscription/sky-discount-confirm-unlink-account.html";
    const skyDiscountContainerError = $("#skySubscriptionDiscountEligibilityContainerError");
    return loadPath(skyDiscountContainer, htmlFilePath).then(() => {
        getDiscountConditionalPricingsAPI().then((discountResponse) => {
            const discounts = discountResponse.discountConditionalPricings;
            const firstDiscount = discounts?.length > 0 ? Number(discounts[0].discountValue) / 100 : 0;
            const monthlyPriceAfterUnlink = monthlyPrice + firstDiscount;
            const subtitleHtml = $.i18n("subscription.discount.confirm_unlink_account_subtitle_sky", msisdn, monthlyPrice, monthlyPriceAfterUnlink);
            $("#skyDiscountConfirmUnlinkSubtitle").html(subtitleHtml);
        });
        const submitButton = $("#buttonSubmitUnlinkSkyAccount");
        const cancelButton = $("#buttonCancelUnlinkSkyAccount");
        submitButton.off("click").on("click", (event) => {
            event.preventDefault();
            return unlinkCustomerSkyAccountAPI()
                .then(() => {
                    displayMessageAfterEdit(
                        $("#skySubscriptionDiscountLinkConfirm"),
                        $("#skySubscriptionDiscountEligibilityContainerContent"),
                        submitButton,
                        "",
                        $.i18n("utils.valid.update_refresh"),
                        false,
                        displaySkySubscriptionDiscountContainer
                    );
                })
                .catch((error) => commonErrors(error, skyDiscountContainerError, null));
        });
        cancelButton.off("click").on("click", (event) => {
            event.preventDefault();
            return displaySkySubscriptionDiscountContainer();
        });
    });
}
function displaySkyAccountAlreadyLinked(skyDiscountContainer) {
    const htmlFilePath = PATH_JS_COMP + "sky/mobile/subscription/sky-account-already-linked.html";
    const subtitleHtml = $.i18n("subscription.discount.account_already_linked_subtitle_sky");
    return loadPath(skyDiscountContainer, htmlFilePath).then(function () {
        $("#skyAccountAlreadyLinkedSubtitle").html(subtitleHtml);
        const cancelButton = $("#cancelSkyAccountAlreadyLinkedButton");
        cancelButton.off("click").on("click", function () {
            return displaySkySubscriptionDiscountContainer();
        });
    });
}
function displaySkySubscriptionDiscountContainer() {
    const skyDiscountContainerHtmlTemplatePath = PATH_JS_COMP + "sky/mobile/subscription/sky-discount-container.html";
    const skyDiscountContainer = $("#skySubscriptionDiscountEligibilityContainer");
    const currentCustomerId = sessionStorage.getItem("custid");
    if (shouldDisplaySkyContainer())
        return loadPath(skyDiscountContainer, skyDiscountContainerHtmlTemplatePath).then(function () {
            const skyDiscountContainerContent = $("#skySubscriptionDiscountEligibilityContainerContent");
            const skyDiscountContainerError = $("#skySubscriptionDiscountEligibilityContainerError");
            return getDiscountConditionalPricingsAPI()
                .then(function (discountResponse) {
                    return formatSkyDiscountAmount(discountResponse);
                })
                .then((discountAmount) =>
                    getCustomerSkyAccountAPI(currentCustomerId)
                        .then(function (skyAccountResponse) {
                            const isEligible = skyAccountResponse.skyDiscountEligibility;
                            const skyUserEmail = skyAccountResponse.skyAccountEmail ?? "";
                            const isLinked = skyAccountResponse.skyAccountLinked;
                            if (!isLinked) return displaySkySubscriptionDiscountNotLinked(skyDiscountContainerContent, discountAmount);
                            else if (isEligible) return displaySkySubscriptionDiscountIsEligible(skyDiscountContainerContent, discountAmount, skyUserEmail);
                            else return displaySkySubscriptionDiscountIsNotEligible(skyDiscountContainerContent, discountAmount, skyUserEmail);
                        })
                        .catch((error) => {
                            commonErrors(error, skyDiscountContainerError, null);
                        })
                )
                .catch((error) => {
                    commonErrors(error, skyDiscountContainerError, null);
                });
        });
    else skyDiscountContainer.remove();
}
function displaySkySubscriptionDiscountIsEligible(skyDiscountContainer, discountAmount, email) {
    const htmlFilePath = PATH_JS_COMP + "sky/mobile/subscription/sky-discount-is-eligible.html";
    const titleHtml = $.i18n("subscription.discount.is_eligible_title_sky", discountAmount);
    const subtitleHtml = $.i18n("subscription.discount.is_eligible_subtitle_sky", discountAmount, email, discountAmount);
    return loadPath(skyDiscountContainer, htmlFilePath)
        .then(function () {
            $("#skyDiscountIsEligibleTitle").html(titleHtml);
            $("#skyDiscountIsEligibleSubtitle").html(subtitleHtml);
        })
        .then(function () {
            const showUnlinkFormButton = $("#submitEligibleUnlinkSkyAccount");
            showUnlinkFormButton.off("click").on("click", function () {
                return displayFormConfirmUnlinkAccount(skyDiscountContainer, showUnlinkFormButton);
            });
        });
}
function displaySkySubscriptionDiscountIsNotEligible(skyDiscountContainer, discountAmount, email) {
    const htmlFilePath = PATH_JS_COMP + "sky/mobile/subscription/sky-discount-is-not-eligible.html";
    const linkToSkyPassWebsite = "https://www.sky.ch/" + setDefaultLang().toLowerCase();
    const subtitleHtml = $.i18n("subscription.discount.is_not_eligible_subtitle_sky", email, linkToSkyPassWebsite, discountAmount);
    const skyDiscountContainerError = $("#skySubscriptionDiscountEligibilityContainerError");
    loadPath(skyDiscountContainer, htmlFilePath).then(function () {
        const submitNotEligibleUnlinkSkyAccount = $("#submitNotEligibleUnlinkSkyAccount");
        $("#skyDiscountIsNotEligibleSubtitle").html(subtitleHtml);
        $("#linkToAddSkyPass").attr({ href: linkToSkyPassWebsite });
        submitNotEligibleUnlinkSkyAccount.off("click").on("click", function () {
            return unlinkCustomerSkyAccountAPI()
                .then(() => {
                    displayMessageAfterEdit(
                        $("#skySubscriptionDiscountLinkConfirm"),
                        $("#skySubscriptionDiscountEligibilityContainerContent"),
                        submitNotEligibleUnlinkSkyAccount,
                        "",
                        $.i18n("utils.valid.update_refresh"),
                        false,
                        displaySkySubscriptionDiscountContainer
                    );
                })
                .catch((error) => commonErrors(error, skyDiscountContainerError, null));
        });
    });
}
function displaySkySubscriptionDiscountNotLinked(skyDiscountContainer, discountAmount) {
    const htmlFilePath = PATH_JS_COMP + "sky/mobile/subscription/sky-discount-is-not-linked.html";
    const subtitleHtml = $.i18n("subscription.discount.is_not_linked_subtitle_sky", discountAmount);
    const skyDiscountContainerError = $("#skySubscriptionDiscountEligibilityContainerError");
    loadPath(skyDiscountContainer, htmlFilePath)
        .then(function () {
            $("#skyDiscountIsNotLinkedSubtitle").html(subtitleHtml);
            $("#inputEmailSkyAccount").val(sessionStorage.getItem("identifier")).trigger("change");
        })
        .then(function () {
            const skyDiscountLinkAccountEmailForm = $("#skyDiscountLinkAccountForm");
            skyDiscountLinkAccountEmailForm.off("submit").on("submit", function (event) {
                event.preventDefault();
                if (validateForm(skyDiscountLinkAccountEmailForm, $("#submitEmailSkyAccount"))) handleClickSubmitEmailSkyAccount(event, skyDiscountContainer, skyDiscountContainerError);
            });
        });
}
function handleClickSubmitEmailSkyAccount(event, skyDiscountContainer, skyDiscountContainerError) {
    const skyAccountEmail = $("#inputEmailSkyAccount").val().trim();
    return linkCustomerSkyAccountAPI(skyAccountEmail)
        .then(() => displayFormConfirmLinkAccount(skyDiscountContainer, skyAccountEmail))
        .catch((error) => {
            commonErrors(error, skyDiscountContainerError, null);
        });
}
function shouldDisplaySkyContainer() {
    const brandSky = "sky" === BRAND.name;
    const subscriptionActive = isSubscriptionActive(sessionStorage.getItem("subStatus"));
    return brandSky && subscriptionActive;
}
function isSubscriptionActive(subscriptionStatus) {
    return "ACTIVE" === subscriptionStatus;
}
function getCredentialInfoAPI(errorMessage) {
    return new Promise(function (resolve, reject) {
        getCredentialInfo()
            .done(function (result) {
                errorMessage.hide();
                resolve(result);
            })
            .fail(function (result) {
                displayMessageAfterSubmit(errorMessage, null, "", $.i18n("utils.technical_error_" + BRAND.name));
                reject("getCredentialInfo failed");
            });
    });
}
function postUpdateMfaEndAPI(errorMessage, payload) {
    return new Promise(function (resolve, reject) {
        postUpdateMfaEnd(JSON.stringify(payload))
            .done(function (result) {
                errorMessage.hide();
                resolve();
            })
            .fail(function (result) {
                if (result && result.responseJSON) {
                    if ("CODE_CHALLENGE_FAILURE" === result.responseJSON.errorCode || "CODE_CHALLENGE_FAILURE_ERROR" === result.responseJSON.errorCode || "MFA_VALIDATE_UPDATE_ERROR" === result.responseJSON.errorCode)
                        displayMessageAfterSubmit(errorMessage, null, "", $.i18n("utils.error.wrong_hotp_without_retry"));
                    else commonErrors(result.responseJSON.errorCode, errorMessage, null);
                    reject("postUpdateMfaEnd failed");
                } else {
                    displayMessageAfterSubmit(errorMessage, null, "", $.i18n("utils.technical_error_" + BRAND.name));
                    reject("postUpdateMfaEnd failed");
                }
            });
    });
}
function postUpdateMfaStartAPI(errorMessage, submitBtn, payload) {
    return new Promise(function (resolve, reject) {
        (payload.language = setDefaultLang()),
            postUpdateMfaStart(JSON.stringify(payload))
                .done(function (result) {
                    errorMessage.hide();
                    resolve(result);
                })
                .fail(function (result) {
                    if (result && result.responseJSON) {
                        if ("BAD_MSISDN_FORMAT" === result.responseJSON.errorCode) displayMessageAfterSubmit(errorMessage, submitBtn, "", $.i18n("utils.error.bad_msisdn_" + BRAND.name));
                        else commonErrors(result.responseJSON.errorCode, errorMessage, submitBtn);
                        reject("postUpdateMfaStart failed");
                    } else {
                        displayMessageAfterSubmit(errorMessage, submitBtn, "", $.i18n("utils.technical_error_" + BRAND.name));
                        reject("postUpdateMfaStart failed");
                    }
                });
    });
}
function getPortinDocumentAPI(customerID, domain, portinID) {
    return new Promise(function (resolve, reject) {
        getPortinDocument(customerID, domain, portinID)
            .done(function (result) {
                resolve(result);
            })
            .fail(function () {
                displayMessageAfterSubmit($("#portinStepError"), $("#downloadPoa"), "", $.i18n("utils.technical_error"));
                reject("get customer details failed");
            });
    });
}
function postRegisterPortinAPI(aCustomerDetails) {
    return new Promise(function (resolve, reject) {
        $("#portinStep").addClass("loading");
        let address = aCustomerDetails[0].address,
            isOwner = $("#ownerLine").is(":checked"),
            payload = {
                subscriptionId: sessionStorage.getItem("custid"),
                voipNumber: $("#currentNumber").attr("data-number"),
                brand: sessionStorage.getItem("brand").toUpperCase(),
                ownerChanged: !isOwner,
                firstName: false === isOwner ? $("#ownerFirstname").val().trim() : aCustomerDetails[0].firstname,
                lastName: false === isOwner ? $("#ownerLastname").val().trim() : aCustomerDetails[0].lastname,
                language: aCustomerDetails[0].language,
                address: { postalCode: address.zipcode, city: address.city, street: address.street, houseNumber: address.house, careOf: address.coAddress },
            };
        postRegisterPortin(sessionStorage.getItem("custid"), sessionStorage.getItem("domain"), JSON.stringify(payload))
            .done(function (result) {
                $("#portinStep").removeClass("loading");
                resolve(result);
            })
            .fail(function () {
                $("#portinStep").removeClass("loading");
                displayMessageAfterSubmit($("#portinError"), $("#requestPortin"), "", $.i18n("utils.technical_error"));
                reject("post register portin failed");
            });
    });
}

